<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>米米的博客</title>
  
  <subtitle>做了一点微小的工作</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zhangshuqiao.org/"/>
  <updated>2018-09-30T15:59:46.173Z</updated>
  <id>https://zhangshuqiao.org/</id>
  
  <author>
    <name>张书樵</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>十个UI设计基本原理</title>
    <link href="https://zhangshuqiao.org/2018-09/%E5%8D%81%E4%B8%AAUI%E8%AE%BE%E8%AE%A1%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/"/>
    <id>https://zhangshuqiao.org/2018-09/十个UI设计基本原理/</id>
    <published>2018-09-30T11:11:18.000Z</published>
    <updated>2018-09-30T15:59:46.173Z</updated>
    
    <content type="html"><![CDATA[<p>这篇文章翻译自：<a href="https://blog.teamtreehouse.com/10-user-interface-design-fundamentals" target="_blank" rel="noopener">10 User Interface Design Fundamentals</a></p><p>It’s no great mystery that truly great user interfaces are the ones that<br>are engineered to stay out of the way.</p><p>‘Staying out of the way’ means not distracting your users. Rather, good<br>UIs let your users complete goals. The result? A reduction in training<br>and support costs, and happier, satisfied and highly engaged users.</p><p>Check out our other <a href="http://teamtreehouse.com/library/topic:design" target="_blank" rel="noopener">design<br>courses</a> at Treehouse.</p><p>When getting started on a new interface, make sure to remember these<br>fundamentals:</p><ol><li>Know your user</li></ol><hr><blockquote><p>“Obsess over customers: when given the choice between obsessing over<br>competitors or customers, always obsess over customers. Start with<br>customers and work backward.” – Jeff Bezos</p></blockquote><p>Your user’s goals are your goals, so learn them. Restate them, repeat<br>them. Then, learn about your user’s skills and experience, and what they<br>need. Find out what interfaces they like and sit down and watch how they<br><em>use</em> them. Do not get carried away trying to keep up with the<br>competition by mimicking trendy design styles or adding new features. By<br>focusing on your user first, you will be able to create an interface<br>that lets them achieve their goals.</p><ol start="2"><li>Pay attention to patterns</li></ol><hr><p>Users spend the majority of their time on interfaces other than your own<br>(Facebook, MySpace, Blogger, Bank of America, school/university, news<br>websites, etc). There is no need to reinvent the wheel. Those interfaces<br>may solve some of the same problems that users perceive within the one<br>you are creating. By using familiar UI patterns, you will help your<br>users feel at home.</p><ol start="3"><li>Stay consistent</li></ol><hr><blockquote><p>“The more users’ expectations prove right, the more they will feel in<br>control of the system and the more they will like it.” – Jakob<br>Nielson</p></blockquote><p>Your users <em>need</em> consistency. They need to know that once they learn to<br>do something, they will be able to do it again. Language, layout, and<br>design are just a few interface elements that need consistency. A<br>consistent interface enables your users to have a better understanding<br>of how things will work, increasing their efficiency.</p><ol start="4"><li>Use visual hierarchy</li></ol><hr><blockquote><p>“Designers can create normalcy out of chaos; they can clearly<br>communicate ideas through the organizing and manipulating of words and<br>pictures.” – Jeffery Veen, <a href="http://veen.com/artsci/" target="_blank" rel="noopener">The Art and Science of Web<br>Design</a></p></blockquote><p>Design your interface in a way that allows the user to focus on what is<br>most important. The size, color, and placement of each element work<br>together, creating a clear path to understanding your interface. A clear<br>hierarchy will go great lengths in reducing the appearance of complexity<br>(even when the actions themselves are complex).</p><ol start="5"><li>Provide feedback</li></ol><hr><p>Your interface should at all times speak to your user, when his/her<br>actions are both right and wrong or misunderstood. Always inform your<br>users of actions, changes in state and errors, or exceptions that occur.<br>Visual cues or simple messaging can show the user whether his or her<br>actions have led to the expected result.</p><h3 id="6-Be-forgiving"><a href="#6-Be-forgiving" class="headerlink" title="6. Be forgiving"></a>6. Be forgiving</h3><p>No matter how clear your design is, people will make mistakes. Your UI<br>should allow for and tolerate user error. Design ways for users to undo<br>actions, and be forgiving with varied inputs (no one likes to start over<br>because he/she put in the wrong birth date format). Also, if the user<br>does cause an error, use your messaging as a teachable situation by<br>showing what action was wrong, and ensure that she/he knows how to<br>prevent the error from occurring again.</p><p>A great example can be seen in <a href="http://carsonified.com/blog/design/how-to-increase-sign-ups-with-easier-captchas/" target="_blank" rel="noopener">How to increase signups with easier<br>captchas</a>.</p><ol start="7"><li>Empower your user</li></ol><hr><p>Once a user has become experienced with your interface, reward him/her<br>and take off the training wheels. The breakdown of complex tasks into<br>simple steps will become cumbersome and distracting. Providing more<br>abstract ways, like keyboard shortcuts, to accomplish tasks will allow<br>your design to get out of the way.</p><ol start="8"><li>Speak their language</li></ol><hr><blockquote><p>“If you think every pixel, every icon, every typeface matters, then<br>you also need to believe every letter matters. “ – <a href="http://gettingreal.37signals.com/" target="_blank" rel="noopener">Getting<br>Real</a></p></blockquote><p>All interfaces require some level of copywriting. Keep things<br>conversational, not sensational. Provide clear and concise labels for<br>actions and keep your messaging simple. Your users will appreciate it,<br>because they won’t hear you – they will hear themselves and/or their<br>peers.</p><ol start="9"><li>Keep it simple</li></ol><hr><blockquote><p>“A modern paradox is that it’s simpler to create complex interfaces<br>because it’s so complex to simplify them.” – Pär Almqvist</p></blockquote><p>The best interface designs are<br><a href="http://www.uie.com/articles/experiencedesign" target="_blank" rel="noopener">invisible</a>. They do not<br>contain UI-bling or unnecessary elements. Instead, the necessary<br>elements are succinct and make sense. Whenever you are thinking about<br>adding a new feature or element to your interface, ask the question,<br>“Does the user really need this?” or “Why does the user want this very<br>clever animated gif?” Are you adding things because you like or want<br>them? Never let your UI ego steal the show.</p><ol start="10"><li>Keep moving forward</li></ol><hr><blockquote><p><strong>Grandpa Bud</strong>: If I gave up every time I failed, I would never have<br>invented my fireproof pants!\<br>[Pants burn up, revealing his underwear]\<br><strong>Grandpa Bud</strong>: Still working the kinks out a bit.</p><p>from <a href="http://www.imdb.com/title/tt0396555/" target="_blank" rel="noopener">Meet the Robinsons</a></p></blockquote><p><em>Meet the Robinsons</em> is one of my all time favorite movies. Throughout<br>the movie Lewis, the protagonist, is challenged to “keep moving<br>forward.” This is a key principle in UI design.</p><p>It is often said when developing interfaces that you need to fail fast,<br>and iterate often. When creating a UI, you <em>will</em> make mistakes. Just<br>keep moving forward, and remember to keep your UI out of the way.</p><p><em>This article was written by <a href="https://twitter.com/kyle/" title="Kyle Sollenberger" target="_blank" rel="noopener">Kyle<br>Sollenberger</a>.</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这篇文章翻译自：&lt;a href=&quot;https://blog.teamtreehouse.com/10-user-interface-design-fundamentals&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;10 User Interface D
      
    
    </summary>
    
      <category term="其他" scheme="https://zhangshuqiao.org/categories/%E5%85%B6%E4%BB%96/"/>
    
    
  </entry>
  
  <entry>
    <title>关于黎曼猜想</title>
    <link href="https://zhangshuqiao.org/2018-09/%E5%85%B3%E4%BA%8E%E9%BB%8E%E6%9B%BC%E7%8C%9C%E6%83%B3/"/>
    <id>https://zhangshuqiao.org/2018-09/关于黎曼猜想/</id>
    <published>2018-09-25T02:48:48.000Z</published>
    <updated>2018-09-28T17:22:43.198Z</updated>
    
    <content type="html"><![CDATA[<p>前几日关于黎曼猜想被证明的消息在网络上炒得沸沸扬扬，菲尔兹奖、阿贝尔奖双料得主Michael Francis Atiyah爵士声称他证明了这个困扰了数学界160年的问题，且其目的是为了研究精细结构常数。然而，在他公布了他的Simple Proof后，却不被学界所看好，甚至遭到了一些尖锐的批评。毕竟，这篇只有五页纸的文章，刨去介绍等内容，并没有展示太多的细节；其证明过程，又依赖于一个存疑的Todd function。如果如证明中所说，黎曼猜想真的指向了精细结构常数，这对于由第一性原理出发构建物理学体系将有极大的启发性，其结果无疑是令人激动的。但是经过计算，却发现文中所声称的极限存在问题，整个理论的正确性难以得到证实。<br>有鉴于此，博主研究该证明过程的计划搁置了（大概可以用来提升读Paper的能力），还是写篇文章介绍下黎曼猜想本身吧。<br>稍后填坑。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前几日关于黎曼猜想被证明的消息在网络上炒得沸沸扬扬，菲尔兹奖、阿贝尔奖双料得主Michael Francis Atiyah爵士声称他证明了这个困扰了数学界160年的问题，且其目的是为了研究精细结构常数。然而，在他公布了他的Simple Proof后，却不被学界所看好，甚至遭
      
    
    </summary>
    
      <category term="其他" scheme="https://zhangshuqiao.org/categories/%E5%85%B6%E4%BB%96/"/>
    
    
  </entry>
  
  <entry>
    <title>月下独酌</title>
    <link href="https://zhangshuqiao.org/2018-09/%E6%9C%88%E4%B8%8B%E7%8B%AC%E9%85%8C/"/>
    <id>https://zhangshuqiao.org/2018-09/月下独酌/</id>
    <published>2018-09-24T10:15:20.000Z</published>
    <updated>2018-08-27T16:19:42.509Z</updated>
    
    <content type="html"><![CDATA[<p>月下独酌<br>李白<br>花间一壶酒，独酌无相亲。<br>举杯邀明月，对影成三人。<br>月既不解饮，影徒随我身。<br>暂伴月将影，行乐须及春。<br>我歌月徘徊，我舞影零乱。<br>醒时同交欢，醉后各分散。<br>永结无情游，相期邈云汉。</p><p>八月十五夜月<br>杜甫<br>满月飞明镜，归心折大刀。<br>转蓬行地远，攀桂仰天高。<br>水路疑霜雪，林栖见羽毛。<br>此时瞻白兔，直欲数秋毫。</p><p>十五夜望月<br>王建<br>中庭地白树栖鸦，冷露无声湿桂花。<br>今夜月明人尽望，不知秋思落谁家！</p><p>南斋玩月<br>王昌龄<br>高卧南斋时，开帷月初吐。<br>清辉澹水木，演漾在窗户。<br>荏苒几盈虚，澄澄变今古。<br>美人清江畔，是夜越吟苦。<br>千里共如何，微风吹兰杜。</p><p>中秋月<br>苏轼<br>暮云收尽溢清寒，银汉无声转玉盘。<br>此生此夜不长好，明月明年何处看。</p><p>中秋月<br>齐已<br>空碧无云露湿衣，众星光外涌清规。<br>东林莫碍渐高势，四海正看当路时。<br>还许分明吟皓魄，肯教幽暗取丹枝。<br>可怜关夜婵娟影，正对五候残酒卮。</p><a id="more"></a><p>关山月<br>李白<br>明月出天山，苍茫云海间。<br>长风几万里，吹度玉门关。<br>汉下白登道，胡窥青海湾。<br>由来征战地，不见有人还。<br>戍客望边色，思归多苦颜。<br>高楼当此夜，叹息未应闲。</p><p>静夜思<br>李白<br>床前明月光，疑是地上霜。<br>举头望明月，低头思故乡。</p><p>月夜<br>刘方平<br>更深月色半人家，北斗阑干南斗斜。<br>今夜偏知春气暖，虫声新透绿窗纱。</p><p>嫦娥<br>李商隐<br>云母屏风烛影深，长河渐落晓星沈。<br>嫦娥应悔偷灵药，碧海青天夜夜心。</p><p>月夜忆舍弟<br>杜甫<br>戍鼓断人行，秋边一雁声。<br>露从今夜白，月是故乡明。<br>有弟皆分散，无家问死生。<br>寄书长不达，况乃未休兵。</p><p>望月怀远<br>张九龄<br>海上生明月，天涯共此时。<br>情人怨遥夜，竟夕起相思！<br>灭烛怜光满，披衣觉露滋。<br>不堪盈手赠，还寝梦佳期。</p><p>霜月<br>李商隐<br>初闻征雁已无蝉，百尺楼高水接天。<br>青女素娥俱耐冷，月中霜里斗婵娟</p><p>秋宵月下有怀<br>孟浩然<br>秋空明月悬，光彩露沾湿。<br>惊鹊栖未定，飞萤卷帘入。<br>庭槐寒影疏，邻杵夜声急。<br>佳期旷何许！望望空伫立。</p><p>中秋待月<br>陆龟蒙<br>转缺霜输上转迟，好风偏似送佳期。<br>帘斜树隔情无限，烛暗香残坐不辞。<br>最爱笙调闻北里，渐看星潆失南箕。<br>何人为校清凉力，欲减初圆及午时。</p><p>倪庄中秋<br>元好问<br>强饭日逾瘦，狭衣秋已寒。<br>儿童漫相忆，行路岂知难。<br>露气入茅屋，溪声喧石滩。<br>山中夜来月，到晓不曾看。</p><p>八月十五夜桃源玩月<br>刘禹锡<br>尘中见月心亦闲，况是清秋仙府间。<br>凝光悠悠寒露坠，此时立在最高山。<br>碧虚无云风不起，山上长松山下水。<br>群动悠然一顾中，天高地平千万里。<br>少君引我升玉坛，礼空遥请真仙官。<br>云軿欲下星斗动，天乐一声肌骨寒。<br>金霞昕昕渐东上，轮欹影促犹频望。<br>绝景良时难再并，他年此日应惆怅。</p><p>中秋月<br>晏殊<br>十轮霜影转庭梧，此夕羁人独向隅。<br>未必素娥无怅恨，玉蟾清冷桂花孤。</p><p>中秋月<br>苏轼<br>暮云收尽溢清寒，银汉无声转玉盘。<br>此生此夜不长好，明月明年何处看。</p><p>八月十五日夜湓亭望月<br>白居易<br>昔年八月十五夜，曲江池畔杏园边。<br>今年八月十五夜，湓浦沙头水馆前。<br>西北望乡何处是，东南见月几回圆。<br>昨风一吹无人会，今夜清光似往年。</p><p>天竺寺八月十五日夜桂子<br>皮日休<br>玉颗珊珊下月轮，殿前拾得露华新。<br>至今不会天中事，应是嫦娥掷与人。</p><p>中秋见月和子由<br>苏轼<br>明月未出群山高，瑞光千丈生白毫。<br>一杯未尽银阙涌，乱云脱坏如崩涛。<br>谁为天公洗眸子，应费明河千斛水。<br>遂令冷看世间人，照我湛然心不起。<br>西南火星如弹丸，角尾奕奕苍龙蟠。<br>今宵注眼看不见，更许萤火争清寒。<br>何人舣舟昨古汴，千灯夜作鱼龙变。<br>曲折无心逐浪花，低昂赴节随歌板。<br>青荧灭没转山前，浪飐风回岂复坚。<br>明月易低人易散，归来呼酒更重看。<br>堂前月色愈清好，咽咽寒螀鸣露草。<br>卷帘推户寂无人，窗下咿哑唯楚老。<br>南都从事莫羞贫，对月题诗有几人。<br>明朝人事随日出，恍然一梦瑶台客。</p><p>中秋登楼望月<br>米芾<br>目穷淮海满如银，万道虹光育蚌珍。<br>天上若无修月户，桂枝撑损向西轮。</p><p>明月何皎皎<br>明月何皎皎，照我罗床帏。<br>夜愁不能寐，揽衣起徘徊。<br>客行虽云乐，不如早旋归。<br>出户独彷徨，愁思当告谁！<br>引领还入房，泪下沾裳衣。</p><p>水调歌头<br>苏轼<br>明月几时有，把酒问青天。<br>不知天上宫阙，今夕是何年。<br>我欲乘风归去，惟恐琼楼玉宇，高处不胜寒。<br>起舞弄清影，何似在人间。<br>转朱阁，低绮户，照无眠。<br>不应有恨，何事长向别时圆。<br>人有悲欢离合，月有阴晴圆缺，此事古难全。<br>但愿人长久，千里共婵娟。</p><p>西江月<br>苏轼<br>顷在黄州，春夜行蕲水中。过酒家饮酒，醉。乘月至一溪桥上，解鞍曲肱，醉卧少休。及觉已晓。乱山攒拥，流水铿然，疑非人世也。书此语桥柱上。<br>照野弥弥浅浪，横空隐隐层霄。障泥未解玉骢骄，我欲醉眠芳草。<br>可惜一溪风月，莫教踏碎琼瑶。解鞍欹枕绿杨桥，杜宇一声春晓。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;月下独酌&lt;br&gt;李白&lt;br&gt;花间一壶酒，独酌无相亲。&lt;br&gt;举杯邀明月，对影成三人。&lt;br&gt;月既不解饮，影徒随我身。&lt;br&gt;暂伴月将影，行乐须及春。&lt;br&gt;我歌月徘徊，我舞影零乱。&lt;br&gt;醒时同交欢，醉后各分散。&lt;br&gt;永结无情游，相期邈云汉。&lt;/p&gt;
&lt;p&gt;八月十五夜月&lt;br&gt;杜甫&lt;br&gt;满月飞明镜，归心折大刀。&lt;br&gt;转蓬行地远，攀桂仰天高。&lt;br&gt;水路疑霜雪，林栖见羽毛。&lt;br&gt;此时瞻白兔，直欲数秋毫。&lt;/p&gt;
&lt;p&gt;十五夜望月&lt;br&gt;王建&lt;br&gt;中庭地白树栖鸦，冷露无声湿桂花。&lt;br&gt;今夜月明人尽望，不知秋思落谁家！&lt;/p&gt;
&lt;p&gt;南斋玩月&lt;br&gt;王昌龄&lt;br&gt;高卧南斋时，开帷月初吐。&lt;br&gt;清辉澹水木，演漾在窗户。&lt;br&gt;荏苒几盈虚，澄澄变今古。&lt;br&gt;美人清江畔，是夜越吟苦。&lt;br&gt;千里共如何，微风吹兰杜。&lt;/p&gt;
&lt;p&gt;中秋月&lt;br&gt;苏轼&lt;br&gt;暮云收尽溢清寒，银汉无声转玉盘。&lt;br&gt;此生此夜不长好，明月明年何处看。&lt;/p&gt;
&lt;p&gt;中秋月&lt;br&gt;齐已&lt;br&gt;空碧无云露湿衣，众星光外涌清规。&lt;br&gt;东林莫碍渐高势，四海正看当路时。&lt;br&gt;还许分明吟皓魄，肯教幽暗取丹枝。&lt;br&gt;可怜关夜婵娟影，正对五候残酒卮。&lt;/p&gt;
    
    </summary>
    
      <category term="其他" scheme="https://zhangshuqiao.org/categories/%E5%85%B6%E4%BB%96/"/>
    
    
  </entry>
  
  <entry>
    <title>什么是物理？</title>
    <link href="https://zhangshuqiao.org/2018-09/%E4%BB%80%E4%B9%88%E6%98%AF%E7%89%A9%E7%90%86/"/>
    <id>https://zhangshuqiao.org/2018-09/什么是物理/</id>
    <published>2018-09-16T01:52:56.000Z</published>
    <updated>2018-09-30T11:11:06.101Z</updated>
    
    <content type="html"><![CDATA[<h2 id="当我们讨论物理时，我们在讨论什么？"><a href="#当我们讨论物理时，我们在讨论什么？" class="headerlink" title="当我们讨论物理时，我们在讨论什么？"></a>当我们讨论物理时，我们在讨论什么？</h2><p>根据某些百科上的描述：</p><blockquote><p>物理学，是研究物质世界最基本的结构、最普遍的相互作用、最⼀般的运动规律及所使⽤的实验手段和思维方法的自然科学。</p></blockquote><h2 id="物理学的研究范围"><a href="#物理学的研究范围" class="headerlink" title="物理学的研究范围"></a>物理学的研究范围</h2><p>物理学的研究范围，小到夸克、大到整个宇宙，跨越了数十个数量级。更为有趣的是，一些物理现象在很多不同的尺度下都具有相似性，例如湍流现象，无论是在水槽中还是在大气中，都会形成类似的卡尔曼涡街。这为我们研究物质最基本的规律提供了崭新的思路。</p><h2 id="物理学需要先验的假设吗？"><a href="#物理学需要先验的假设吗？" class="headerlink" title="物理学需要先验的假设吗？"></a>物理学需要先验的假设吗？</h2><p>在欧几里德几何中，需要平行公理，才能建立一套完备的逻辑体系。物理学需要这样的先验的假设吗？</p><h2 id="积极乐观主义"><a href="#积极乐观主义" class="headerlink" title="积极乐观主义"></a>积极乐观主义</h2><p>稍后填坑。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;当我们讨论物理时，我们在讨论什么？&quot;&gt;&lt;a href=&quot;#当我们讨论物理时，我们在讨论什么？&quot; class=&quot;headerlink&quot; title=&quot;当我们讨论物理时，我们在讨论什么？&quot;&gt;&lt;/a&gt;当我们讨论物理时，我们在讨论什么？&lt;/h2&gt;&lt;p&gt;根据某些百科上的描述
      
    
    </summary>
    
      <category term="其他" scheme="https://zhangshuqiao.org/categories/%E5%85%B6%E4%BB%96/"/>
    
    
  </entry>
  
  <entry>
    <title>入手信达小黑天文望远镜</title>
    <link href="https://zhangshuqiao.org/2018-08/%E5%85%A5%E6%89%8B%E4%BF%A1%E8%BE%BE%E5%B0%8F%E9%BB%91%E5%A4%A9%E6%96%87%E6%9C%9B%E8%BF%9C%E9%95%9C/"/>
    <id>https://zhangshuqiao.org/2018-08/入手信达小黑天文望远镜/</id>
    <published>2018-08-20T15:44:29.000Z</published>
    <updated>2018-09-28T17:57:47.765Z</updated>
    
    <content type="html"><![CDATA[<p>2018年的暑期，诸多天文奇观轮番上演：火星冲日、日偏食、英仙座流星雨，这对天文爱好者来说是绝佳的观测机会。在好基友的怂恿下，博主也正式踏入了天文摄影的巨坑。<br>博主在小学时曾拥有一台700/60入门级伽利略式天文望远镜，但是其使用的经纬仪是纯手动的，调节精度较差；且望远镜本身存在明显的色差，成像效果不佳。为了满足行星摄影的要求，需要入手一台更为可靠的天文望远镜。目前市面上常见的天文望远镜，一般由三部分组成：三脚架（底座），赤道仪（经纬仪），以及望远镜镜筒。镜筒主体根据成像原理划分，有牛顿反射式、马克苏托夫-卡塞格林式和复消色差（APO）式等等。基于其他成像原理的望远镜也能在市面上买到，不过从销量和评价上来看，前文提到的这三种望远镜占主流。在查阅了大量资料，并参考了天文相关贴吧、论坛后，博主决定入手信达小黑天文望远镜。这是一款入门级牛顿反射式望远镜，其焦距750mm，口径150mm，等效光圈较大，适合摄影；赤道仪采用EQ3D，搭配双轴电跟，在通过北极星校准极轴后，即可进行长时间曝光。<br>这是望远镜组装完成的状态：<br><img src="/images/2018-08/IMG_0272.jpg" alt=""><br>安装EF卡口转接环，就可以连接单反相机了：<br><img src="/images/2018-08/IMG_0199.jpg" alt=""><br>8月11日拍摄的日偏食：<br><img src="/images/2018-08/IMG_5639.jpg" alt=""><br>由于望远镜自带的巴罗镜只适用于目镜，为了增加拍照的放大率，博主还购买了一个EF卡口的增倍镜。这是使用增倍镜后拍摄的月球：<br><img src="/images/2018-08/IMG_5767.jpg" alt=""><br>由于视宁度不佳（以及可能的对焦问题），虽然也成功拍摄了土星，但是土星环的辨识度较差：<br><img src="/images/2018-08/IMG_5758.jpg" alt=""><br>仙后座（以及划过天空的飞机航行灯）：<br><img src="/images/2018-08/IMG_5680.jpg" alt=""></p><p>本文更新于2018年9月28日：<br>与学校的青年天文爱好者协会部分（矿里有家的）前辈交流后，发现EQ3D赤道仪和双轴电跟还是弱了一些。看上去，NEQ6搭配GOTO似乎才是天文摄影的入门标配，该赤道仪的稳定性与鲁棒性都更胜一筹（当然价格也略高）。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2018年的暑期，诸多天文奇观轮番上演：火星冲日、日偏食、英仙座流星雨，这对天文爱好者来说是绝佳的观测机会。在好基友的怂恿下，博主也正式踏入了天文摄影的巨坑。&lt;br&gt;博主在小学时曾拥有一台700/60入门级伽利略式天文望远镜，但是其使用的经纬仪是纯手动的，调节精度较差；且望
      
    
    </summary>
    
      <category term="技术" scheme="https://zhangshuqiao.org/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="摄影" scheme="https://zhangshuqiao.org/tags/%E6%91%84%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>盘点那些有必要的HTTP头</title>
    <link href="https://zhangshuqiao.org/2018-08/%E7%9B%98%E7%82%B9%E9%82%A3%E4%BA%9B%E6%9C%89%E5%BF%85%E8%A6%81%E7%9A%84HTTP%E5%A4%B4/"/>
    <id>https://zhangshuqiao.org/2018-08/盘点那些有必要的HTTP头/</id>
    <published>2018-08-11T13:35:23.000Z</published>
    <updated>2018-08-07T01:45:58.420Z</updated>
    
    <content type="html"><![CDATA[<p>这篇文章翻译自：<a href="https://www.fastly.com/blog/headers-we-want" target="_blank" rel="noopener">The headers we want</a></p><p>The headers we want</p><p>By <a href="https://www.fastly.com/blog/andrew-betts" target="_blank" rel="noopener">Andrew Betts</a> | May 17, 2018</p><p>Manipulating HTTP headers is one of the most common things that Fastly customers do. Using the right combination of headers is one of the best things you can do for the security of your site, and also a significant contributor to performance.</p><p>Most developers know about and depend on a variety of HTTP headers to make their content work. Those that are best known include <code>Content-Type</code> and <code>Content-Length</code>, which are both almost universal. But more recently, headers such as <code>Content-Security-Policy</code> and <code>Strict-Transport-Security</code> have started to improve security, and <code>Link rel=preload</code> headers to improve performance. Few sites use these, despite their wide support across browsers.</p><p>In the <a href="https://www.fastly.com/blog/headers-we-dont-want" target="_blank" rel="noopener">previous post</a> in this series, we looked at unnecessary headers. This time around, I’m going to help you figure out what headers you should be configuring for your site.</p><h2 id="Doing-some-homework"><a href="#Doing-some-homework" class="headerlink" title="Doing some homework"></a>Doing some homework</h2><p>There are multiple services around the web that will analyse your site and tell you what headers you should add. I looked at <a href="https://securityheaders.io/" target="_blank" rel="noopener">securityheaders.io</a> and <a href="https://observatory.mozilla.org/" target="_blank" rel="noopener">Observatory by Mozilla</a> to supplement my own research and data drawn from the Fastly network.</p><h2 id="The-headers-you-should-have-on-your-site"><a href="#The-headers-you-should-have-on-your-site" class="headerlink" title="The headers you should have on your site"></a>The headers you should have on your site</h2><p>So, what are the key headers you should have in responses from your servers? The bulk are responsible for improving security:</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP" target="_blank" rel="noopener">Content-Security-Policy</a>: Acts like a firewall in the browser. If your site is compromised, helps limit the damage by preventing connections to hosts you don’t approve. Essential. If you don’t have one, you should.</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy" target="_blank" rel="noopener">Referrer-Policy</a>: Configures the level of detail to include in the <code>Referer</code> header when navigating away from the page. Helps to prevent data leaking from your site to sites that you link to. Highly recommended.</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security" target="_blank" rel="noopener">Strict-Transport-Security</a>: Prevents any attempt to connect to your site over plain HTTP. Helps stop man-in-the-middle attacks, and upgrades your site’s security. Also highly recommended.</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection" target="_blank" rel="noopener">X-XSS-Protection</a>: Prevents some forms of cross site scripting attack, by preventing script from executing if any of the markup in the document is also present in the same form in the request. Basically if you load a page with url <code>/index.html?foo=&lt;script&gt;alert(‘foo’);&lt;/script&gt;</code> and the browser sees <code>&lt;script&gt;alert(‘foo’);&lt;/script&gt;</code> in the page source, the script is blocked. These days this is largely made redundant by CSP.</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options" target="_blank" rel="noopener">X-Content-Type-Options</a>: Set this to <code>nosniff</code> to prevent browsers allowing content that looks like JavaScript to execute even if it doesn’t have the right content-type. Prevents mime confusion attacks, and more recently is being used by Chrome to enable <a href="https://www.chromium.org/Home/chromium-security/site-isolation#TOC-Recommendations-for-Web-Developers" target="_blank" rel="noopener">site isolation</a>. It’s getting less necessary over time, due to better default behaviours, but this is currently still a best practice.</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS" target="_blank" rel="noopener">CORS</a>: Cross-Origin Resource Sharing headers allow your URL to be loaded by script operating on another origin. This one’s optional. These headers are permissive, not restrictive, so not having them at all gives you the highest level of security.</p><p>Others are for performance:</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Timing-Allow-Origin" target="_blank" rel="noopener">Timing-Allow-Origin</a>: Allows monitoring tools access to timing data for the request. It’s good to throw this in on pretty much anything, as it will allow you to get much richer data from services like Google Analytics or Speedcurve.</p><p><a href="https://www.smashingmagazine.com/2016/02/preload-what-is-it-good-for/" target="_blank" rel="noopener">Link rel=preload</a>: Tells the browser of critical resources that it should get downloading even though it hasn’t encountered the need for them yet. Use this for fonts and important CSS (and read on for how we’re going to make this technique even more effective in future).</p><p><a href="https://www.w3.org/TR/server-timing/" target="_blank" rel="noopener">Server-Timing</a>: Provides server-side timing information, which allows navigation and resource timing APIs to be supplemented with more granular information about individual tasks that make up the server side processing (eg. ‘how long did we spend in MySQL’). Great for monitoring performance data, in conjunction with RUM beacon tools.</p><p>Let’s look at a couple of these in more detail.</p><h3 id="Content-Security-Policy-keep-a-lid-on-it"><a href="#Content-Security-Policy-keep-a-lid-on-it" class="headerlink" title="Content Security Policy: keep a lid on it"></a>Content Security Policy: keep a lid on it</h3><p>Although <code>Content-Security-Policy</code> is one of the most important headers to include in your responses, it’s also one of the most verbose. The largest CSP header I found in HTTPArchive was 10KB in size. <em>Ten kilobytes</em>. For a single header value. Worse, while response bodies can be streamed, response <em>headers</em> are buffered by most servers and proxies, and only passed on when they are complete. HTTP/2 header compression helps a <em>bit</em> by remembering them between requests, but that doesn’t mean a 10KB header value is OK.</p><p>Also, by potentially filling up the entirety of the first packet of your response, you might force the browser to make two round trips to the server to get <strong>any content at all</strong>. So as well as trying to remove unnecessary headers, try to keep the values of the headers that you do include as short as possible.</p><h2 id="Referrer-Policy"><a href="#Referrer-Policy" class="headerlink" title="Referrer-Policy"></a>Referrer-Policy</h2><p>Since the dawn of time (which is approximately the late nineties, in the web world), browsers have been sending (and <a href="https://en.wikipedia.org/wiki/HTTP_referer" target="_blank" rel="noopener">mis-spelling</a>) the <code>Referer</code> header. For much of its life, it’s been one of the most important ways to track user journeys from one page to the next in analytics tools, and also understand the origin of incoming traffic. However, that last part comes with significant privacy concerns. If I click a link in an email, and I’m using a web based email client, the site I end up on might reasonably be able to guess my email domain, from the domain name of the referring site. Worse, knowledge of the full URL you came from, including the query arguments, might reveal the terms you used for your last search, or personal data like your email address.</p><p>You can choose a number of strategies from the available Referrer-Policy options, but my usual go-to is “origin-when-cross-origin” which will include the <code>Referer</code> header in all requests that would normally have one, but will truncate the value to just the origin (domain) if the link goes from one origin to another. Links within your own site will include the full referrer.</p><h3 id="Measuring-Server-Timing-at-the-edge"><a href="#Measuring-Server-Timing-at-the-edge" class="headerlink" title="Measuring Server-Timing at the edge"></a>Measuring Server-Timing at the edge</h3><p>There are lots of nice things about <code>Server-Timing</code>, and one of them is that you can add multiple instances to a response, and they should all be aggregated by the browser or RUM tool. That means if your request passes through multiple stages of server processing – as it does when you have Fastly in front of your site – each stage can add its own timing metrics and they don’t conflict. Here’s how to add Fastly metrics in a server timing header using VCL in your Fastly service configuration:</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">add resp.http.Server-Timing = fastly_info.<span class="keyword">state</span> &#123;<span class="string">", fastly;desc="</span>Edge time<span class="string">";dur="</span>&#125; time.elapsed.msec;</span><br></pre></td></tr></table></figure><p>This number will include the time we spend waiting on your backend so in cases where we retrieve content from origin, all your server timing metrics should be smaller than the Fastly number. However, in cases where we serve the document from Fastly cache, you’ll see your original timing metrics from when the page was generated originally, but the Fastly number will confirm that the overall time cost is actually very small.</p><p>Server timing metrics are available through the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Performance/" target="_blank" rel="noopener">performance object in JavaScript</a> and rendered in the Network panel of Chrome devtools:</p><p><img src="//www.fastly.com/cimages/6pk8mg3yh2ee/73QeLWdybCyAEIo262iEQo/9f52e752adf85a25323854fffcc1149a/Screen_Shot_2018-05-17_at_17.38.51.png" alt="Screen Shot 2018-05-17 at 17.38.51"></p><p>Currently, the visualisation of these metrics is rudimentary. But there’s a lot of work going into this and the UI will likely improve dramatically in the future.</p><h2 id="Adding-all-the-good-headers"><a href="#Adding-all-the-good-headers" class="headerlink" title="Adding all the good headers"></a>Adding all the good headers</h2><p>Fastly is a good place to add all the security and perf headers. Below is what it looks like when we put all the headers together. Add this code in the <strong>deliver</strong> stage of the request flow, changing the values to those that are appropriate for your site (though <strong>take care not to copy/paste</strong> without checking that the values are suitable for your site):</p><p>In the next post in this series, we’ll take a look at some of the more exotic headers that are starting to be standardised and appear in browsers.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这篇文章翻译自：&lt;a href=&quot;https://www.fastly.com/blog/headers-we-want&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;The headers we want&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The headers w
      
    
    </summary>
    
      <category term="技术" scheme="https://zhangshuqiao.org/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Nginx" scheme="https://zhangshuqiao.org/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>盘点那些不需要的HTTP头</title>
    <link href="https://zhangshuqiao.org/2018-08/%E7%9B%98%E7%82%B9%E9%82%A3%E4%BA%9B%E4%B8%8D%E9%9C%80%E8%A6%81%E7%9A%84HTTP%E5%A4%B4/"/>
    <id>https://zhangshuqiao.org/2018-08/盘点那些不需要的HTTP头/</id>
    <published>2018-08-07T03:38:28.000Z</published>
    <updated>2018-08-07T01:48:31.547Z</updated>
    
    <content type="html"><![CDATA[<p>这篇文章翻译自：<a href="https://www.fastly.com/blog/headers-we-dont-want" target="_blank" rel="noopener">The headers we don’t want</a></p><p>The headers we don’t want</p><p>By <a href="https://www.fastly.com/blog/andrew-betts" target="_blank" rel="noopener">Andrew Betts</a> | May 10, 2018</p><p><em>If you want to learn more about headers, don’t miss Andrew’s talk at <a href="https://www.fastly.com/altitude/2018/london" target="_blank" rel="noopener">Altitude London</a> on May 22.</em></p><p>HTTP headers are an important way of controlling how caches and browsers process your web content. But many are used incorrectly or pointlessly, which adds overhead at a critical time in the loading of your page, and may not work as you intended. In this first of a series of posts about header best practice, we’ll look at unnecessary headers.</p><p>Most developers know about and depend on a variety of HTTP headers to make their content work. Those that are best known include <code>Content-Type</code> and <code>Content-Length</code>, which are both almost universal. But more recently, headers such as <code>Content-Security-Policy</code> and <code>Strict-Transport-Security</code> have started to improve security, and <code>Link rel=preload</code> headers to improve performance. Few sites use these, despite their wide support across browsers.</p><p>At the same time, there are lots of headers that are hugely popular but aren’t new and aren’t actually all that useful. We can prove this using <a href="http://httparchive.org/" target="_blank" rel="noopener">HTTP Archive</a>, a project run by Google and sponsored by Fastly that loads 500,000 websites every month using <a href="https://www.webpagetest.org/" target="_blank" rel="noopener">WebPageTest</a>, and makes the results available in <a href="https://cloud.google.com/bigquery/" target="_blank" rel="noopener">BigQuery</a>.</p><p>From the HTTP Archive data, here are the 30 most popular response headers (based on the number of domains in the archive which are serving each header), and roughly how useful each one is:</p><table><thead><tr><th>Header name</th><th>Requests</th><th>Domains</th><th>Status</th></tr></thead><tbody><tr><td>date</td><td>48779277</td><td>535621</td><td>Required by protocol</td></tr><tr><td>content-type</td><td>47185627</td><td>533636</td><td>Usually required by browser</td></tr><tr><td><strong>server</strong></td><td><strong>43057807</strong></td><td><strong>519663</strong></td><td><strong>Unnecessary</strong></td></tr><tr><td>content-length</td><td>42388435</td><td>519118</td><td>Useful</td></tr><tr><td>last-modified</td><td>34424562</td><td>480294</td><td>Useful</td></tr><tr><td>cache-control</td><td>36490878</td><td>412943</td><td>Useful</td></tr><tr><td>etag</td><td>23620444</td><td>412370</td><td>Useful</td></tr><tr><td>content-encoding</td><td>16194121</td><td>409159</td><td>Required for compressed content</td></tr><tr><td><strong>expires</strong></td><td><strong>29869228</strong></td><td><strong>360311</strong></td><td><strong>Unnecessary</strong></td></tr><tr><td><strong>x-powered-by</strong></td><td><strong>4883204</strong></td><td><strong>211409</strong></td><td><strong>Unnecessary</strong></td></tr><tr><td><strong>pragma</strong></td><td><strong>7641647</strong></td><td><strong>188784</strong></td><td><strong>Unnecessary</strong></td></tr><tr><td><strong>x-frame-options</strong></td><td><strong>3670032</strong></td><td><strong>105846</strong></td><td><strong>Unnecessary</strong></td></tr><tr><td>access-control-allow-origin</td><td>11335681</td><td>103596</td><td>Useful</td></tr><tr><td>x-content-type-options</td><td>11071560</td><td>94590</td><td>Useful</td></tr><tr><td>link</td><td>1212329</td><td>87475</td><td>Useful</td></tr><tr><td>age</td><td>7401415</td><td>59242</td><td>Useful</td></tr><tr><td><strong>x-cache</strong></td><td><strong>5275343</strong></td><td><strong>56889</strong></td><td><strong>Unnecessary</strong></td></tr><tr><td>x-xss-protection</td><td>9773906</td><td>51810</td><td>Useful</td></tr><tr><td>strict-transport-security</td><td>4259121</td><td>51283</td><td>Useful</td></tr><tr><td><strong>via</strong></td><td><strong>4020117</strong></td><td><strong>47102</strong></td><td><strong>Unnecessary</strong></td></tr><tr><td><strong>p3p</strong></td><td><strong>8282840</strong></td><td><strong>44308</strong></td><td><strong>Unnecessary</strong></td></tr><tr><td>expect-ct</td><td>2685280</td><td>40465</td><td>Useful</td></tr><tr><td>content-language</td><td>334081</td><td>37927</td><td>Debatable</td></tr><tr><td><strong>x-aspnet-version</strong></td><td><strong>676128</strong></td><td><strong>33473</strong></td><td><strong>Unnecessary</strong></td></tr><tr><td>access-control-allow-credentials</td><td>2804382</td><td>30346</td><td>Useful</td></tr><tr><td>x-robots-tag</td><td>179177</td><td>24911</td><td>Not relevant to browsers</td></tr><tr><td><strong>x-ua-compatible</strong></td><td><strong>489056</strong></td><td><strong>24811</strong></td><td><strong>Unnecessary</strong></td></tr><tr><td>access-control-allow-methods</td><td>1626129</td><td>20791</td><td>Useful</td></tr><tr><td>access-control-allow-headers</td><td>1205735</td><td>19120</td><td>Useful</td></tr></tbody></table><p>Let’s look at the unnecessary headers and see why we don’t need them, and what we can do about it.</p><a id="more"></a><h2 id="Vanity-server-x-powered-by-via"><a href="#Vanity-server-x-powered-by-via" class="headerlink" title="Vanity (server, x-powered-by, via)"></a>Vanity (server, x-powered-by, via)</h2><p>You may be very proud of your choice of server software, but most people couldn’t care less. At worst, these headers might be divulging sensitive data that makes your site easier to attack.</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">Server:</span> apache</span><br><span class="line">X-Powered-<span class="string">By:</span> PHP/<span class="number">5.1</span><span class="number">.1</span></span><br><span class="line"><span class="string">Via:</span> <span class="number">1.1</span> varnish, <span class="number">1.1</span> squid</span><br></pre></td></tr></table></figure><p><a href="https://httpwg.org/specs/rfc7231.html#header.server" target="_blank" rel="noopener">RFC7231</a> allows for servers to include a <code>Server</code> header in the response, identifying the software used to serve the content. This is most commonly a string like “apache” or “nginx”. While it’s allowed, it’s not mandatory, and offers very little value to either developers or end users. Nevertheless, this is the third most popular HTTP response header on the web today.</p><p><code>X-Powered-By</code> is the most popular header in our list that is not defined in any standard, and has a similar purpose, though normally refers to the application platform that sits behind the web server. Common values include “ASP.net”, “PHP” and “Express”. Again this isn’t providing any tangible benefit and is taking up space.</p><p>More debatable perhaps is <code>Via</code>, which is required (<a href="https://httpwg.org/specs/rfc7230.html#header.via" target="_blank" rel="noopener">by RFC7230</a>) to be added to the <em>request</em> by any proxy through which it passes to identify the proxy. This can be the proxy’s hostname, but is more likely to be a generic identifier like “vegur”, “varnish”, or “squid”. Removing (or not setting) this header on a request can cause <a href="http://www.icir.org/vern/papers/cdn-loops.NDSS16.pdf" target="_blank" rel="noopener">proxy forwarding loops</a>. However, interestingly it is also copied into the response on the way back to the browser, and here it’s just informational and no browsers do anything with it, so it’s reasonably safe to get rid of it if you want to.</p><h2 id="Deprecated-standards-P3P-Expires-X-Frame-Options-X-UA-Compatible"><a href="#Deprecated-standards-P3P-Expires-X-Frame-Options-X-UA-Compatible" class="headerlink" title="Deprecated standards (P3P, Expires, X-Frame-Options, X-UA-Compatible)"></a>Deprecated standards (P3P, Expires, X-Frame-Options, X-UA-Compatible)</h2><p>Another category of headers is those that do have an effect in the browser but are not (or are no longer) the best way of achieving that effect.</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">P3P:</span> <span class="keyword">cp</span>=<span class="string">"this is not a p3p policy"</span></span><br><span class="line"><span class="symbol">Expires:</span> Thu, <span class="number">01</span> <span class="keyword">Dec</span> <span class="number">1994</span> <span class="number">16</span>:<span class="number">00</span>:<span class="number">00</span> GMT</span><br><span class="line"><span class="built_in">X</span>-Frame-Options: SAMEORIGIN</span><br><span class="line"><span class="built_in">X</span>-UA-Compatible: IE=edge</span><br></pre></td></tr></table></figure><p><code>P3P</code> is a curious animal. I had no idea what this was, and even more curiously, one of the most common values is “this is not a p3p policy”. Well, is it, or isn’t it?</p><p>The story here goes back to an <a href="https://en.wikipedia.org/wiki/P3P#User_agent_support" target="_blank" rel="noopener">attempt to standardise a machine readable privacy policy</a>. There was disagreement on how to surface the data in browsers, and only one browser ever implemented the header - Internet Explorer. Even in IE though, <code>P3P</code> didn’t trigger any visual effect to the user; it just needs to be present to permit access to third party cookies in iframes. Some sites even set a non-conforming P3P policy like the one above – even though doing so is on <a href="https://www.cylab.cmu.edu/_files/pdfs/tech_reports/CMUCyLab10014.pdf" target="_blank" rel="noopener">shaky legal ground</a>.</p><p>Needless to say, reading third party cookies is generally a bad idea, so if you don’t do it, then you won’t need to set a <code>P3P</code> header!</p><p><code>Expires</code> is almost unbelievably popular, considering that <code>Cache-Control</code> has been preferred over <code>Expires</code> for 20 years. Where a <code>Cache-Control</code> header includes a <code>max-age</code> directive, any <code>Expires</code> header on the same response will be ignored. But there are a massive number of sites setting both, and the <code>Expires</code> header is most commonly set to <code>Thu, 01 Dec 1994 16:00:00</code> GMT, because you want your content to not be cached and copy-pasting the example date <a href="https://www.ietf.org/rfc/rfc2616.txt" target="_blank" rel="noopener">from the spec</a> is certainly one way of doing that.</p><p><img src="//www.fastly.com/cimages/6pk8mg3yh2ee/63zsHXNxp6YmWacesKYgwy/e3f1040e2d948b0655667aaa86d5310f/Screen_Shot_2018-05-10_at_21.49.25.png" alt="Screen Shot 2018-05-10 at 21.49.25"></p><p>But there is simply no reason to do this. If you have an <code>Expires</code> header with a date in the past, replace it with:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Cache</span>-Control: <span class="keyword">no</span>-<span class="keyword">store</span>, <span class="keyword">private</span></span><br></pre></td></tr></table></figure><p>(<code>no-store</code> is a very strong directive not to write the content to persistent storage, so depending on your use case you might actually prefer <code>no-cache</code> for better performance, for example when using back/forward navigation or resuming hibernated tabs)</p><p>Some of the tools that audit your site will tell you to add an <code>X-Frame-Options</code> header with a value of ‘SAMEORIGIN’. This tells browsers that you are refusing to be framed by another site, and is generally a good defense against <a href="https://en.wikipedia.org/wiki/Clickjacking" target="_blank" rel="noopener">clickjacking</a>. However, the same effect can be achieved, with more consistent support and more robust definition of behaviour, by doing:</p><figure class="highlight csp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Content-Security-Policy</span>: <span class="keyword">frame-ancestors</span> <span class="string">'self'</span></span><br></pre></td></tr></table></figure><p>This has the additional benefit of being part of a header (CSP) which you should have anyway for other reasons (more on that later). So you can probably do without <code>X-Frame-Options</code> these days.</p><p>Finally, back in their IE9 days, Microsoft introduced ‘compatibility view’, and would potentially render a page using the IE8 or IE7 engine, even when the user was browsing with IE9, if the browser thought that the page might require the earlier version to work properly. Those heuristics were not always correct, and developers were able to override them by using an <code>X-UA-Compatible</code> header or meta tag. In fact, this increasingly became a standard part of frameworks like Bootstrap. These days, this header achieves very little - very few people are using browsers that would understand it, and if you are actively maintaining your site it’s very unlikely that you are using technologies that would trigger compatibility view.</p><h2 id="Debug-data-X-ASPNet-Version-X-Cache"><a href="#Debug-data-X-ASPNet-Version-X-Cache" class="headerlink" title="Debug data (X-ASPNet-Version, X-Cache)"></a>Debug data (X-ASPNet-Version, X-Cache)</h2><p>It’s kind of astonishing that some of the most popular headers in common use are not in any standard. Essentially this means that somehow, thousands of websites seem to have spontaneously agreed to use a particular header in a particular way.</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">X-Cache: HIT</span><br><span class="line">X-Request-ID: 45a336c7<span class="string">-1</span>bd5<span class="string">-4</span>a06<span class="string">-9647</span>-c5aab6d5facf</span><br><span class="line">X-ASPNet-Version: 3.2.32</span><br><span class="line">X-AMZN-RequestID: 0d6e39e2<span class="string">-4</span>ecb<span class="string">-11</span>e8<span class="string">-9</span>c2d-fa7ae01bbebc</span><br></pre></td></tr></table></figure><p>In reality, these ‘unknown’ headers are not separately and independently minted by website developers. They are typically artefacts of using particular server frameworks, software or specific vendors’ services (in this example set, the last header is a common AWS header).</p><p><code>X-Cache</code>, in particular, is actually added by Fastly (other CDNs also do this), along with other Fastly-related headers like <code>X-Cache-Hits</code> and <code>X-Served-By</code>. When debugging is enabled, we add even more, such as <code>Fastly-Debug-Path</code> and <code>Fastly-Debug-TTL</code>.</p><p>These headers are not recognised by any browser, and removing them makes no difference to how your pages are rendered. However, since these headers might provide you, the developer, with useful information, you might like to keep a way to turning them on.</p><h2 id="Misunderstandings-Pragma"><a href="#Misunderstandings-Pragma" class="headerlink" title="Misunderstandings (Pragma)"></a>Misunderstandings (Pragma)</h2><p>I didn’t expect to be in 2018 writing a post about the <code>Pragma</code> header, but according to our HTTP Archive data it’s still the 11th most popular. Not only was Pragma deprecated as long ago as 1997, but it was never intended to be a response header anyway - as specified, it only has meaning as part of a request.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Pragma</span>: <span class="keyword">no</span>-<span class="keyword">cache</span></span><br></pre></td></tr></table></figure><p>Nevertheless it’s use as a response header is so widespread that some browsers recognise it in this context as well. Today the probability that your response will transit a cache that understands <code>Pragma</code> in a response context, and doesn’t understand <code>Cache-Control</code>, is vanishingly small. If you want to make sure that something isn’t cached, <code>Cache-Control: no-store, private</code> is all you need.</p><h2 id="Non-Browser-X-Robots-Tag"><a href="#Non-Browser-X-Robots-Tag" class="headerlink" title="Non-Browser (X-Robots-Tag)"></a>Non-Browser (X-Robots-Tag)</h2><p>One header in our top 30 is a non-browser header. <code>X-Robots-Tag</code> is intended to be consumed by a crawler, such as Google or Bing’s bots. Since it has no meaning to a browser, you could choose to only set it when the requesting user-agent is a crawler. Equally, you might decide that this makes testing harder, or perhaps that it violates the terms of service of the search engine.</p><h2 id="Bugs"><a href="#Bugs" class="headerlink" title="Bugs"></a>Bugs</h2><p>Finally, it’s worth finishing on an honourable mention for simple bugs. In a <em>request</em>, a <code>Host</code> header makes sense, but seeing it on a response probably means your server is misconfigured somehow (I’d love to know how, exactly). Nevertheless, 68 domains in HTTP archive are returning a <code>Host</code> header in their responses.</p><h2 id="Removing-headers-at-the-edge"><a href="#Removing-headers-at-the-edge" class="headerlink" title="Removing headers at the edge"></a>Removing headers at the edge</h2><p>Fortunately, if your site is behind Fastly, removing headers is pretty easy using <a href="https://docs.fastly.com/guides/vcl/" target="_blank" rel="noopener">VCL</a>. It makes sense that you might want to keep the genuinely useful debug data available to your dev team, but hide it for public users, so that’s easily done by detecting a cookie or inbound HTTP header:</p><p>In the next post in this series, I’ll be talking about best practices for headers that you should be setting, and how to enable them at the edge.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这篇文章翻译自：&lt;a href=&quot;https://www.fastly.com/blog/headers-we-dont-want&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;The headers we don’t want&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The headers we don’t want&lt;/p&gt;
&lt;p&gt;By &lt;a href=&quot;https://www.fastly.com/blog/andrew-betts&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Andrew Betts&lt;/a&gt; | May 10, 2018&lt;/p&gt;
&lt;p&gt;&lt;em&gt;If you want to learn more about headers, don’t miss Andrew’s talk at &lt;a href=&quot;https://www.fastly.com/altitude/2018/london&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Altitude London&lt;/a&gt; on May 22.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;HTTP headers are an important way of controlling how caches and browsers process your web content. But many are used incorrectly or pointlessly, which adds overhead at a critical time in the loading of your page, and may not work as you intended. In this first of a series of posts about header best practice, we’ll look at unnecessary headers.&lt;/p&gt;
&lt;p&gt;Most developers know about and depend on a variety of HTTP headers to make their content work. Those that are best known include &lt;code&gt;Content-Type&lt;/code&gt; and &lt;code&gt;Content-Length&lt;/code&gt;, which are both almost universal. But more recently, headers such as &lt;code&gt;Content-Security-Policy&lt;/code&gt; and &lt;code&gt;Strict-Transport-Security&lt;/code&gt; have started to improve security, and &lt;code&gt;Link rel=preload&lt;/code&gt; headers to improve performance. Few sites use these, despite their wide support across browsers.&lt;/p&gt;
&lt;p&gt;At the same time, there are lots of headers that are hugely popular but aren’t new and aren’t actually all that useful. We can prove this using &lt;a href=&quot;http://httparchive.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;HTTP Archive&lt;/a&gt;, a project run by Google and sponsored by Fastly that loads 500,000 websites every month using &lt;a href=&quot;https://www.webpagetest.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;WebPageTest&lt;/a&gt;, and makes the results available in &lt;a href=&quot;https://cloud.google.com/bigquery/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;BigQuery&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;From the HTTP Archive data, here are the 30 most popular response headers (based on the number of domains in the archive which are serving each header), and roughly how useful each one is:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Header name&lt;/th&gt;
&lt;th&gt;Requests&lt;/th&gt;
&lt;th&gt;Domains&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;date&lt;/td&gt;
&lt;td&gt;48779277&lt;/td&gt;
&lt;td&gt;535621&lt;/td&gt;
&lt;td&gt;Required by protocol&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;content-type&lt;/td&gt;
&lt;td&gt;47185627&lt;/td&gt;
&lt;td&gt;533636&lt;/td&gt;
&lt;td&gt;Usually required by browser&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;server&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;43057807&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;519663&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Unnecessary&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;content-length&lt;/td&gt;
&lt;td&gt;42388435&lt;/td&gt;
&lt;td&gt;519118&lt;/td&gt;
&lt;td&gt;Useful&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;last-modified&lt;/td&gt;
&lt;td&gt;34424562&lt;/td&gt;
&lt;td&gt;480294&lt;/td&gt;
&lt;td&gt;Useful&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cache-control&lt;/td&gt;
&lt;td&gt;36490878&lt;/td&gt;
&lt;td&gt;412943&lt;/td&gt;
&lt;td&gt;Useful&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;etag&lt;/td&gt;
&lt;td&gt;23620444&lt;/td&gt;
&lt;td&gt;412370&lt;/td&gt;
&lt;td&gt;Useful&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;content-encoding&lt;/td&gt;
&lt;td&gt;16194121&lt;/td&gt;
&lt;td&gt;409159&lt;/td&gt;
&lt;td&gt;Required for compressed content&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;expires&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;29869228&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;360311&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Unnecessary&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;x-powered-by&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;4883204&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;211409&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Unnecessary&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;pragma&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;7641647&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;188784&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Unnecessary&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;x-frame-options&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;3670032&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;105846&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Unnecessary&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;access-control-allow-origin&lt;/td&gt;
&lt;td&gt;11335681&lt;/td&gt;
&lt;td&gt;103596&lt;/td&gt;
&lt;td&gt;Useful&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x-content-type-options&lt;/td&gt;
&lt;td&gt;11071560&lt;/td&gt;
&lt;td&gt;94590&lt;/td&gt;
&lt;td&gt;Useful&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;link&lt;/td&gt;
&lt;td&gt;1212329&lt;/td&gt;
&lt;td&gt;87475&lt;/td&gt;
&lt;td&gt;Useful&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;age&lt;/td&gt;
&lt;td&gt;7401415&lt;/td&gt;
&lt;td&gt;59242&lt;/td&gt;
&lt;td&gt;Useful&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;x-cache&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;5275343&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;56889&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Unnecessary&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x-xss-protection&lt;/td&gt;
&lt;td&gt;9773906&lt;/td&gt;
&lt;td&gt;51810&lt;/td&gt;
&lt;td&gt;Useful&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;strict-transport-security&lt;/td&gt;
&lt;td&gt;4259121&lt;/td&gt;
&lt;td&gt;51283&lt;/td&gt;
&lt;td&gt;Useful&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;via&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;4020117&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;47102&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Unnecessary&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;p3p&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;8282840&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;44308&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Unnecessary&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;expect-ct&lt;/td&gt;
&lt;td&gt;2685280&lt;/td&gt;
&lt;td&gt;40465&lt;/td&gt;
&lt;td&gt;Useful&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;content-language&lt;/td&gt;
&lt;td&gt;334081&lt;/td&gt;
&lt;td&gt;37927&lt;/td&gt;
&lt;td&gt;Debatable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;x-aspnet-version&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;676128&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;33473&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Unnecessary&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;access-control-allow-credentials&lt;/td&gt;
&lt;td&gt;2804382&lt;/td&gt;
&lt;td&gt;30346&lt;/td&gt;
&lt;td&gt;Useful&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x-robots-tag&lt;/td&gt;
&lt;td&gt;179177&lt;/td&gt;
&lt;td&gt;24911&lt;/td&gt;
&lt;td&gt;Not relevant to browsers&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;x-ua-compatible&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;489056&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;24811&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Unnecessary&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;access-control-allow-methods&lt;/td&gt;
&lt;td&gt;1626129&lt;/td&gt;
&lt;td&gt;20791&lt;/td&gt;
&lt;td&gt;Useful&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;access-control-allow-headers&lt;/td&gt;
&lt;td&gt;1205735&lt;/td&gt;
&lt;td&gt;19120&lt;/td&gt;
&lt;td&gt;Useful&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Let’s look at the unnecessary headers and see why we don’t need them, and what we can do about it.&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="https://zhangshuqiao.org/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Nginx" scheme="https://zhangshuqiao.org/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>自己打造一台恩尼格玛密码机</title>
    <link href="https://zhangshuqiao.org/2018-08/%E8%87%AA%E5%B7%B1%E6%89%93%E9%80%A0%E4%B8%80%E5%8F%B0%E6%81%A9%E5%B0%BC%E6%A0%BC%E7%8E%9B%E5%AF%86%E7%A0%81%E6%9C%BA/"/>
    <id>https://zhangshuqiao.org/2018-08/自己打造一台恩尼格玛密码机/</id>
    <published>2018-08-05T05:18:39.000Z</published>
    <updated>2018-08-10T13:06:24.117Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/2018-08/F5YSP9KHMF6R1PD.LARGE.jpg" alt=""></p><p>这篇文章翻译自：<a href="https://www.instructables.com/id/Make-your-own-Enigma-Replica" target="_blank" rel="noopener">MAKE YOUR OWN ENIGMA REPLICA</a><br>在对称加密学当中，恩尼格玛机绝对是承前启后的存在。它将密码学研究从以前的语言文字学中心完全转移到了数学身上。在这里牵涉的密码并不是我们平时邮箱、银行帐号那种狭义概念，那种顶多叫做口令。这里说的密码就是通过某种映射方式，把一篇文章变得面目全非，以达到保密效果；只有特定的转换规律才能将其解密。这篇文章适于电脑控、军事控、历史控、数学控阅读，请做好烧脑准备。</p><p>EDIT: This Instructable has won Second prize in the 2013 Radio Shack Microcontroller Contest. Thank You to all who voted!<br>按：这个作品是2013年无线电单片机竞赛的亚军。感谢所有支持这个作品的你们！<br>EDIT2: An Open Enigma with fake Standup Nixie Tubes like the ones pictured in this Instructable will soon be available as a Special Kickstarter edition.</p><p>This is our very first Instructable and this step by step guide will show you how to build a fully functional electronic replica of the world famous German Enigma machine. This Arduino based Open Source project is able to encrypt &amp; decrypt any Enigma M4 encoded message.<br>这是我们的初号机。以下教程将手把手教你如何完美复刻史上著名的德国恩尼格玛密码机。这个基于Arduino的开源程序能够加解密任何Enigma机M4型（海军型）的信息。<br>This first ever fully functional Open Source Enigma “exact” Replica was inspired by the Kid’s Game to Arduino Enigma Machine by sketchsk3tch.<br>这个第一台全功能开源完美Enigma机复制品是根据sketchsk3tch写的《Kid’s Game to Arduino Enigma Machine（从儿童玩具到Arduino恩尼格玛机）》所作。<br>Using Multiplexing for the LEDs, this circuit with 115 light emitting diodes uses only 38 pins and the 36 push buttons use only 4 pins total thanks to properly placed resistors (and the P-Channel MOSFETs) in the keyboard loop. These 4 16-Segment displays &amp; an LED for each keyboard button would add up quickly the total number of pins required and even the Arduino Mega would have ran out of pins without the 2 methods mentioned above….<br>采用多路复用LED电路，仅用38个针脚的115个发光二极管和4个针脚的36个按键所连接的整个电路，全靠在键盘回路里准确放置的电阻以及P沟道场效应晶体管得以实现。要不然，4个16段显示器，以及每个按键上的LED将大幅增加所需针脚总量——即使用了Arduino Mega板，但如果没用上述两个方法，电路也不能如此简洁。<br>In response to the overwhelming demand, we designed the PCB and made it available through <a href="http://www.stgeotronics.com" target="_blank" rel="noopener">www.stgeotronics.com</a>. Skip to Step 10 &amp; beyond for more info. We also offer it as a complete electronics kit &amp; an assembled &amp; tested complete product.<br>面对电路的超额需求，我们在 <a href="http://www.stgeotronics.com" target="_blank" rel="noopener">http://www.stgeotronics.com</a> 设计了专用的PCB板。直接跳到第10步和以后的步骤可以找到更多信息。同时，我们也发布了测试过的完整电子组装套装。</p><h2 id="Step-1-Proof-of-Concept-on-Breadboard"><a href="#Step-1-Proof-of-Concept-on-Breadboard" class="headerlink" title="Step 1: Proof of Concept on Breadboard"></a>Step 1: Proof of Concept on Breadboard</h2><p>第一步：面包板上的论证<br><img src="/images/2018-08/F3ULXLHHMEXSREA.LARGE.jpg" alt=""><br><img src="/images/2018-08/FQHGSW5HMF6R1XF.LARGE.jpg" alt=""></p><p>Before going all out on the development of this electronic Enigma replica, we wanted to make sure we could properly drive the 16 Segment LEDs. If we can do that, than we will be able to do everything as the rest is only Math…<br>在开始制作电子Enigma机之前，我们先要确保能驱动16段LED显示。如果成功，我们就能做接下来的所有步骤——除了数学上的问题，一切都是浮云。</p><a id="more"></a><h2 id="Step-2-Gather-the-Raw-Materials…"><a href="#Step-2-Gather-the-Raw-Materials…" class="headerlink" title="Step 2: Gather the Raw Materials…"></a>Step 2: Gather the Raw Materials…</h2><p>第二步：万事具备<br><img src="/images/2018-08/FCU4XAXHMEXSQH3.LARGE.jpg" alt=""></p><p>You will need:</p><ul><li>1 Arduino Mega</li><li>26 Alpha Buttons</li><li>26 1/4” Jacks Mono</li><li>10 1/4” Plugs Mono</li><li>36 Pushbuttons</li><li>1 On/Off/On Switch</li><li>4 16Segment Orange</li><li>4 Injection molded 2-Liter Soda Bottle preform (test tubes)</li><li>1 Case Plywood</li><li>1 Hinge &amp; Hooks</li><li>1 Half-Mortise Lock</li><li>1 Perfboard</li><li>38 Resistors 470 Ohms</li><li>40 Resistors 1K Ohms</li><li>7 IRF9Z24N P-Channel MOSFET</li><li>1 Piece of Metal &amp; Spray paint</li></ul><p>你所需要的是：</p><ul><li>1个Arduino Mega 2560板</li><li>26个字母按键</li><li>26个1/4英寸单通道母接口</li><li>10个1/4英寸单通道公接口</li><li>36个机械按钮</li><li>1个单刀三掷开关</li><li>4个16段橙色LED显示</li><li>4个注塑2升汽水瓶罩子</li><li>1个胶合板盒子</li><li>一个铰链</li><li>一个半榫接锁</li><li>一个接线盘</li><li>38个470欧电阻</li><li>40个1千欧电阻</li><li>7个IRF9Z24N P沟道场效应晶体管</li><li>1块金属片以及喷漆。</li></ul><p>Optional:</p><ul><li>Battery Case</li><li>Rechargeable Batteries</li><li>Battery Charger/Connectors</li></ul><p>可选项：</p><ul><li>电池盒</li><li>充电电池</li><li>充电器/充电接头</li></ul><p>If we were to do it again, we wouldn’t use 1/4” Jacks &amp; Plugs as these are pretty big and tend to overwhelm the whole Enigma. Banana plugs &amp; jacks are smaller &amp; closer to the original connectors used by the real German Enigmas.<br>我们真要做的时候，是不会用1/4英寸接口的。它们太大的体积几乎要超过整个恩尼格玛机。香蕉插头体积较小，而且比原版德国Enigma机结合得更紧密些。</p><h2 id="Step-3-Lay-the-Components-Down"><a href="#Step-3-Lay-the-Components-Down" class="headerlink" title="Step 3: Lay the Components Down"></a>Step 3: Lay the Components Down</h2><p>第三步：布置零件<br><img src="/images/2018-08/FVPK1ITHMEXSQHU.LARGE.jpg" alt=""><br><img src="/images/2018-08/FG3UNNCHMEXWMFY.LARGE.jpg" alt=""><br><img src="/images/2018-08/F177H22HM8CXMUF.LARGE.jpg" alt=""><br><img src="/images/2018-08/F5QWPPFHMFQJEKZ.LARGE.jpg" alt=""><br><img src="/images/2018-08/FJ4B8MDHM8CVVF4.LARGE.jpg" alt=""><br><img src="/images/2018-08/FSSAE2EHM8CVVF3.LARGE.jpg" alt=""></p><p>The Radio Shack 6” x 8” Micro Perboard is the perfect size to host all components as it provides just the right amount of space to fit everything on &amp; will fit perfectly inside the Enigma box.<br>6*8寸无线电面包版是最适合放置所有元件的，既不多余也不拥挤，而且和Enigma机盒子内部完美吻合。<br>We started dividing the space on the Perfboard equally between the 3 regions, but realized soon that this would make the electonic Enigma longer than the real one, so we compressed everything down to the proper spacing.<br>最初我们将面包板等分为三块区域，但很快意识到，如此一来，电子版Enigma机将比原版的机械Enigma机长。于是我们将所有零件缩放到正好够占用的空间。<br>Once satisfied with the positioning of each components, next step is soldering.<br>每个元件位置就绪，下一步就是焊接。</p><h2 id="Step-4-Soldering-Soldering-amp-a-Little-More-Soldering"><a href="#Step-4-Soldering-Soldering-amp-a-Little-More-Soldering" class="headerlink" title="Step 4: Soldering, Soldering &amp; a Little More Soldering"></a>Step 4: Soldering, Soldering &amp; a Little More Soldering</h2><p>第四步：我焊，我焊，我焊焊焊……<br><img src="/images/2018-08/FL8IEWNHMFQJENI.LARGE.jpg" alt=""><br><img src="/images/2018-08/F1UE3SZHMFQJENK.LARGE.jpg" alt=""><br><img src="/images/2018-08/F5B1IDKHM8D0839.LARGE.jpg" alt=""><br><img src="/images/2018-08/FCJKFP3HMEXWMPC.LARGE.jpg" alt=""><br><img src="/images/2018-08/FB9KU3WHM8CXMUR.LARGE.jpg" alt=""><br><img src="/images/2018-08/F6ZOVZKHMF6R1YM.LARGE.jpg" alt=""></p><p>OK, this proved to be the most solder I have used on a single project ever. With 18 pins per 16 Segment, times 4 plus 26 keyboard keys + 26 keyboard lamps + a few LEDs &amp; 1 SPDT on/off/on switch, that was a lot of solder.<br>好吧，在单一作品身上，我从没焊接如此多次。16段显示的18个针脚，还有26个字母键乘以每个4个脚，外加26个键盘灯，一些其他LED，一个三掷开关，真乃“成吉思焊”。<br>Our decision to raise the 16 Segment displays up to make them look like old-time Nixie tubes certainly added a lot of solder points!<br>当初我们的决定是使这些16段LED显示看起来像老式电子管的感觉，增加了不少焊点，“巨焊”！<br>Our Arduino Mega Pin assignment:<br>Arduino Mega板上针脚的分配：</p><p>17 Segments:<br>Seg Pin Wire DuinoPin<br>a   2   blue  24<br>b   1   white 22<br>c   16  wh-bl 25<br>d   13  green 31<br>e   9   wh-br 38<br>f   8   brown 36<br>g   6   green 32<br>h   5   wh-or 30<br>k   4   orang 28<br>m   3   wh-bl 26<br>n   17  blue  23<br>p   15  orang 27<br>r   12  wh-gr 33<br>s   11  brown 35<br>t   7   wh-gr 34<br>u   14  wh-or 29<br>dp  10  wh-br 37<br>anode1 18 red 39<br>anode2 18 red 41<br>anode3 18 red 43<br>anode4 18 red 45</p><p>LEDs:<br>1  40<br>2  42<br>3  44<br>4  46<br>5  48</p><p>Lamps:<br>QAP 10<br>WSY 9<br>EDX 8<br>RFC 7<br>TGV 6<br>ZHB 5<br>UJN 4<br>IKM 3<br>OL  2<br>anode1 (First Row)  11<br>anode2 (Second Row) 12<br>anode3 (Third Row)  13</p><p>Function Keys:<br>A0</p><p>Keyboard:<br>First Row A1<br>Second Row A2<br>Third Row A3</p><h2 id="Step-5-Make-a-Box-and-Cut-amp-Drill-the-Top-Plate"><a href="#Step-5-Make-a-Box-and-Cut-amp-Drill-the-Top-Plate" class="headerlink" title="Step 5: Make a Box and Cut &amp; Drill the Top Plate."></a>Step 5: Make a Box and Cut &amp; Drill the Top Plate.</h2><p>第五步：门面工夫——做个盒子钻出面板<br><img src="/images/2018-08/FDK4HNYHMF6R1Z8.LARGE.jpg" alt=""><br><img src="/images/2018-08/FDHCE6MHM8CXMUW.LARGE.jpg" alt=""><br><img src="/images/2018-08/FOTHEI2HM8D527O.LARGE.jpg" alt=""><br><img src="/images/2018-08/FNLRDOJHMEXWMW4.LARGE.jpg" alt=""></p><p>After obtaining the exact dimensions of the original M4 wooden box, we purchased a sheet of plywood &amp; cut it in pieces so we could assemble our case.<br>在原版M4型木盒内得到确定位置数据后，我们买了一块胶合板，将它切块，然后砌盒子。<br>We decided to cut a steel plate from an obsolete rack mounted server as it had just the right thickness of metal for our needs. After making a transparency that showed where every button/lamp was located &amp; cutting it out, we were able to superimpose it on the metal piece and draw each required hole with a sharpie.<br>我们从旧服务器机架上卸了一块钢板，厚度正合需要。将模具（上面早已画好每个按键和灯位，并切好了洞洞）盖在钢板上，然后用记号笔画出需要切出的洞洞。<br>We then spray painted it textured black to look like the real Enigma.<br>接着，我们用喷漆把它涂黑，就像真的Enigma机那样。</p><h2 id="Step-6-Integration-Tests"><a href="#Step-6-Integration-Tests" class="headerlink" title="Step 6: Integration Tests"></a>Step 6: Integration Tests</h2><p>第六步：组装测试<br><img src="/images/2018-08/F9FF43UHMEXWN47.LARGE.jpg" alt=""><br><img src="/images/2018-08/FIITQ0JHM8D083S.LARGE.jpg" alt=""><br><img src="/images/2018-08/F7CENKBHM8D8Z2S.LARGE.jpg" alt=""><br><img src="/images/2018-08/FB7E7EEHM8CVVHM.LARGE.jpg" alt=""><br><img src="/images/2018-08/FHT2F7HHM8D8Z2M.LARGE.jpg" alt=""><br><img src="/images/2018-08/FGQWASPHMFQJERA.LARGE.jpg" alt=""><br><img src="/images/2018-08/FIPCQX8HM8CVVHJ.LARGE.jpg" alt=""></p><p>First is the permanent fitting of the metal plate on top of the perfboard making sure every button is working and every LED can shine.<br>首先把金属板在面包版上永久固定，确保所有按键正常工作，所有LED都能发光。<br>Then is the fitting of this solid assembly into the wooden case ensuring we didn’t introduce a short anywhere.<br>接着就是把这一大坨东东装入木盒，确保没有空隙位置。</p><h2 id="Step-7-Software-Ohhhh…-Ouch"><a href="#Step-7-Software-Ohhhh…-Ouch" class="headerlink" title="Step 7: Software - Ohhhh…. Ouch!"></a>Step 7: Software - Ohhhh…. Ouch!</h2><p>第七步：软件啊，日完软啊！<br><img src="/images/2018-08/FFJ9BVGHMEXSRM6.LARGE.jpg" alt=""><br><img src="/images/2018-08/FHM5VLKHM8D6Q8D.LARGE.jpg" alt=""></p><p>During each hardware assembly phase, we had created small Arduino sketches that would test the specific individual section we were working on:<br>在组装硬件过程中，我们也写了个小型Arduino程序框架，用以测试特定几个需要关注的部分：<br>A code that tests that each keyboard button is read accurately.<br>A second code that tests each of the 10 function buttons.<br>用来测试每个按键信号能准确读取，还有测试10个功能按键的代码。<br>An Enigma_POST (Power On Self Test) sketch that tests that each keyboard lamp can be lit precisely and move each LED through each mode, with some modifications to the original breadboard code to ensure each segment of the 4 16-Segment LEDs is working perfectly.<br>Enigma_POST（上电自检）确保在每种模式下所有键盘等都能准确亮起，在每种模式下每个LED信号都能传送。我们对原本面包板上的代码做了修正，确保4个16段LED显示的每个部件无懈可击。<br>But, even with all these sample codes on hand that tested every piece of hardware on the machine, the task of reproducing the encrypting/decrypting functionality of a real M4 Enigma was a Mathematics tour-de-force!<br>但，即使所有手上的程序片段都说明机器状态完好，重现M4海军型Enigma机加解密功能，数学方面居功至伟。<br>All Arduino sketches will be available on our Github that we are currently setting up.<br>所有的Arduino程序片段即将在我们刚刚建好的<a href="https://github.com/ST-Geotronics" target="_blank" rel="noopener">Github组织</a>中发布。<br>Here is the Enigma_POST sketch:<br>以下是Enigma_POST程序片段（上电自检）：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Enigma Development Code to Test each of the 4 Nixies, the 5 LEDs,</span></span><br><span class="line"><span class="comment">   then Turn On each Lamp in sequence.</span></span><br><span class="line"><span class="comment">   Written by Marc Tessier &amp; James Sanderson 9/8/13</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Define the 16-Segments Pins</span></span><br><span class="line"><span class="keyword">int</span> segment[<span class="number">17</span>] = &#123; <span class="number">24</span>,<span class="number">22</span>,<span class="number">25</span>,<span class="number">31</span>,<span class="number">38</span>,<span class="number">36</span>,<span class="number">32</span>,<span class="number">30</span>,<span class="number">28</span>,<span class="number">26</span>,<span class="number">23</span>,<span class="number">27</span>,<span class="number">33</span>,<span class="number">35</span>,<span class="number">34</span>,<span class="number">29</span>,<span class="number">37</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> anode[<span class="number">4</span>] = &#123; <span class="number">39</span>,<span class="number">41</span>,<span class="number">43</span>,<span class="number">45</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Define the 9 lamps Pins</span></span><br><span class="line"><span class="keyword">int</span> lamp[<span class="number">9</span>] = &#123; <span class="number">10</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> lanode[<span class="number">3</span>] = &#123; <span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// LTP587P Segments: A,B,C,D,E,F,G,H,K,M,N,P,R,S,T,U,dp              </span></span><br><span class="line">boolean segmentvals[<span class="number">39</span>][<span class="number">17</span>] = &#123;</span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span> &#125;, <span class="comment">// = A</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = B</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = C</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = D</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span> &#125;, <span class="comment">// = E</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span> &#125;, <span class="comment">// = F</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = G</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span> &#125;, <span class="comment">// = H</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = I</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = J</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span> &#125;, <span class="comment">// = K</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = L</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = M</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = N</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = O</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span> &#125;, <span class="comment">// = P</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = Q</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span> &#125;, <span class="comment">// = R</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span> &#125;, <span class="comment">// = S</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = T</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = U</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = V</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = W</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = X</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = Y</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = Z</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = 0</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = 1</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span> &#125;, <span class="comment">// = 2</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = 3</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span> &#125;, <span class="comment">// = 4</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span> &#125;, <span class="comment">// = 5</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span> &#125;, <span class="comment">// = 6</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = 7</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span> &#125;, <span class="comment">// = 8</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span> &#125;, <span class="comment">// = 9</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = Space</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span> &#125;, <span class="comment">// = Full Lit</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span> &#125;  <span class="comment">// = SS</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// LTP587P Segments: A,B,C,D,E,F,G,H,K,M,N,P,R,S,T,U,dp</span></span><br><span class="line"></span><br><span class="line">boolean lampvals[<span class="number">9</span>][<span class="number">9</span>] = &#123;</span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = Q or A or P</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = W or S or Y</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = E or D or X</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = R or F or C</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = T or G or V</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = Z or H or B</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = U or J or N</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span> &#125;, <span class="comment">// = I or K or M</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span> &#125;  <span class="comment">// = O or L</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> value_row1 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> value_row2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> value_row3 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> key = <span class="number">91</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> led1 = <span class="number">40</span>;</span><br><span class="line"><span class="keyword">int</span> led2 = <span class="number">42</span>;</span><br><span class="line"><span class="keyword">int</span> led3 = <span class="number">44</span>;</span><br><span class="line"><span class="keyword">int</span> led4 = <span class="number">46</span>;</span><br><span class="line"><span class="keyword">int</span> led5 = <span class="number">48</span>;</span><br><span class="line"><span class="keyword">int</span> wait = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt;= <span class="number">3</span>; index++) &#123;</span><br><span class="line">        pinMode(anode[index], OUTPUT);</span><br><span class="line">        digitalWrite(anode[index], <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt;= <span class="number">16</span>; index++) &#123;</span><br><span class="line">        pinMode(segment[index], OUTPUT);</span><br><span class="line">        digitalWrite(segment[index], <span class="number">1</span>);</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="comment">// initialize the digital pins as an output.</span></span><br><span class="line">    pinMode(led1, OUTPUT);</span><br><span class="line">    pinMode(led2, OUTPUT);</span><br><span class="line">    pinMode(led3, OUTPUT);</span><br><span class="line">    pinMode(led4, OUTPUT);</span><br><span class="line">    pinMode(led5, OUTPUT);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt;= <span class="number">2</span>; index++) &#123;</span><br><span class="line">        pinMode (lanode[index], OUTPUT);</span><br><span class="line">        digitalWrite (lanode[index], <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt;= <span class="number">8</span>; index++) &#123;</span><br><span class="line">        pinMode(lamp[index], OUTPUT);</span><br><span class="line">        digitalWrite(lamp[index], <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    sixteenSegWrite(<span class="number">0</span>, <span class="number">38</span>);</span><br><span class="line">    sixteenSegWrite(<span class="number">1</span>, <span class="number">38</span>);</span><br><span class="line">    sixteenSegWrite(<span class="number">2</span>, <span class="number">38</span>);</span><br><span class="line">    sixteenSegWrite(<span class="number">3</span>, <span class="number">38</span>);</span><br><span class="line"></span><br><span class="line">    digitalWrite(led1, HIGH); <span class="comment">// turn the LED on (HIGH is the voltage level)</span></span><br><span class="line">    delay(<span class="number">200</span>);               <span class="comment">// wait for a second</span></span><br><span class="line">    digitalWrite(led1, LOW);  <span class="comment">// turn the LED off by making the voltage LOW</span></span><br><span class="line">    delay(wait);              <span class="comment">// wait for a second</span></span><br><span class="line">    digitalWrite(led2, HIGH); <span class="comment">// turn the LED on (HIGH is the voltage level)</span></span><br><span class="line">    delay(<span class="number">200</span>);               <span class="comment">// wait for a second</span></span><br><span class="line">    digitalWrite(led2, LOW);  <span class="comment">// turn the LED off by making the voltage LOW</span></span><br><span class="line">    delay(wait);              <span class="comment">// wait for a second</span></span><br><span class="line">    digitalWrite(led3, HIGH); <span class="comment">// turn the LED on (HIGH is the voltage level)</span></span><br><span class="line">    delay(<span class="number">200</span>);               <span class="comment">// wait for a second</span></span><br><span class="line">    digitalWrite(led3, LOW);  <span class="comment">// turn the LED off by making the voltage LOW</span></span><br><span class="line">    delay(wait);              <span class="comment">// wait for a second</span></span><br><span class="line">    digitalWrite(led4, HIGH); <span class="comment">// turn the LED on (HIGH is the voltage level)</span></span><br><span class="line">    delay(<span class="number">200</span>);               <span class="comment">// wait for a second</span></span><br><span class="line">    digitalWrite(led4, LOW);  <span class="comment">// turn the LED off by making the voltage LOW</span></span><br><span class="line">    delay(wait);              <span class="comment">// wait for a second</span></span><br><span class="line">    digitalWrite(led5, HIGH); <span class="comment">// turn the LED on (HIGH is the voltage level)</span></span><br><span class="line">    delay(<span class="number">200</span>);               <span class="comment">// wait for a second</span></span><br><span class="line">    digitalWrite(led5, LOW);  <span class="comment">// turn the LED off by making the voltage LOW</span></span><br><span class="line">    delay(wait);              <span class="comment">// wait for a second</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt;= <span class="number">2</span>; index++) &#123;</span><br><span class="line">        digitalWrite(lanode[index], <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> mychar = <span class="number">0</span>; mychar &lt; <span class="number">9</span>; mychar++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> sindex = <span class="number">0</span>; sindex &lt; <span class="number">9</span>; sindex++) &#123;</span><br><span class="line">                digitalWrite(lamp[sindex], lampvals[mychar][sindex]);</span><br><span class="line">                delay(<span class="number">30</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        digitalWrite(lanode[index], <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sixteenSegWrite</span><span class="params">(<span class="keyword">int</span> digit, <span class="keyword">int</span> character)</span> </span>&#123;</span><br><span class="line">    digitalWrite(anode[digit],<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; <span class="number">17</span>; index++) &#123;</span><br><span class="line">        digitalWrite(segment[index], segmentvals[character][index]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Step-8-More-Software"><a href="#Step-8-More-Software" class="headerlink" title="Step 8: More Software!"></a>Step 8: More Software!</h2><p>第八步：再多一些软件！<br><img src="/images/2018-08/FE72PL9HMFQJEWD.LARGE.jpg" alt=""><br><img src="/images/2018-08/FV4474FHMF6R23U.LARGE.jpg" alt=""><br><img src="/images/2018-08/F0WOJNDHM8D085H.LARGE.jpg" alt=""><br><img src="/images/2018-08/FNWA7V2HMEXWNHT.LARGE.jpg" alt=""><br><img src="/images/2018-08/FXVDU5LHMEXSRP2.LARGE.jpg" alt=""><br><img src="/images/2018-08/FEM6HKTHMF6R23W.LARGE.jpg" alt=""><br><img src="/images/2018-08/F0LV9DXHMFQJEWH.LARGE.jpg" alt=""><br><img src="/images/2018-08/F3FLAQIHMF6R23V.LARGE.jpg" alt=""><br><img src="/images/2018-08/FS9DTJ4HMEXSROL.LARGE.jpg" alt=""></p><p>So we first created a function for each mode the Enigma operates in:<br>首先，我们写了个函数，给每个Enigma机工作模式用。<br>In Mode 0, Default Mode, the Enigma is nothing but a simple typewriter with a Marquee that displays its Model Number.<br>在模式0、默认模式，Enigma机仅仅是一台普通打字机，以跑马灯方式显示它的型号。<br>Mode 1 allows the user to select the 3 (out of 8) Rotors he will use along with which one (of the 2) Reflector he wants to use.<br>模式1下，允许用户从八个转子中选取三个，两个反射器中选择一个进行使用。<br>In Mode 2, the user can select the Internal position of each Rotor.<br>模式2下，允许用户排列转子次序。<br>Mode 3 is used to specify the starting (external) position of each Rotor.<br>模式3用于自定义转子初始字母排列。<br>In Mode 4, a user can enter up to 10 Swapped pairs of letters.<br>选择模式4，用户最多可以使用接线板上10对交换字母排列。<br>Mode 5 is Run mode and at that point, the Enigma will encrypt or decrypt any letter typed on the keyboard.<br>模式5是运行模式，此时Enigma机能加解密任何从键盘录入的信息。<br>Here is the Complete sketch that runs the whole Enigma:<br>以下是整个Enigma机工作流程完整程序片段：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* S&amp;T GeoTronics Enigma Code. This Arduino Mega custom shield is programmed to replicate</span></span><br><span class="line"><span class="comment">   exactly the behavior of a true German M4 Enigma machine.</span></span><br><span class="line"><span class="comment">   It uses 4 16-Segment units, 5 LEDs, 26 Lamps setup as keyboard, 26 keyboard buttons</span></span><br><span class="line"><span class="comment">   &amp; 10 Function keys. The 115 light emitting diodes are charlie-plexed to minimize the</span></span><br><span class="line"><span class="comment">   amount of pins needed down to 38 and all 36 pushbuttons keys are sharing a total of 4 pins.</span></span><br><span class="line"><span class="comment">   Designed, assembled &amp; programmed by Marc Tessier &amp; James Sanderson 9/20/13</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">// Define the variables</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> time = millis();</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> otime = time;</span><br><span class="line"><span class="keyword">int</span> inpin[<span class="number">4</span>] = &#123; A0, A1, A2, A3 &#125;;</span><br><span class="line"><span class="keyword">int</span> inval[<span class="number">4</span>] = &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> keyval = <span class="number">100</span>;</span><br><span class="line">boolean windex = <span class="number">0</span>;</span><br><span class="line">boolean windex1 = <span class="number">0</span>;</span><br><span class="line">boolean windex2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> lampval = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">int</span> procesval = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> procesvala = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> mode = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> mtime;</span><br><span class="line"><span class="keyword">int</span> mdex = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Define each Nixie character</span></span><br><span class="line"><span class="keyword">int</span> dig1 = <span class="number">37</span>;</span><br><span class="line"><span class="keyword">int</span> dig2 = <span class="number">37</span>;</span><br><span class="line"><span class="keyword">int</span> dig3 = <span class="number">37</span>;</span><br><span class="line"><span class="keyword">int</span> dig4 = <span class="number">37</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> data[<span class="number">36</span>] = &#123; <span class="number">36</span>,<span class="number">36</span>,<span class="number">36</span>,<span class="number">36</span>,<span class="number">18</span>,<span class="number">39</span>,<span class="number">19</span>,<span class="number">36</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">14</span>,<span class="number">19</span>,<span class="number">17</span>,<span class="number">14</span>,<span class="number">13</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">18</span>,<span class="number">36</span>,<span class="number">4</span>,<span class="number">13</span>,<span class="number">8</span>,<span class="number">6</span>,<span class="number">12</span>,<span class="number">0</span>,<span class="number">36</span>,<span class="number">12</span>,<span class="number">0</span>,<span class="number">17</span>,<span class="number">10</span>,<span class="number">36</span>,<span class="number">30</span>,<span class="number">36</span>,<span class="number">36</span>,<span class="number">36</span>,<span class="number">36</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Define the 16-Segments Pins as 2 Arrays</span></span><br><span class="line"><span class="keyword">int</span> segment[<span class="number">17</span>] = &#123; <span class="number">24</span>,<span class="number">22</span>,<span class="number">25</span>,<span class="number">31</span>,<span class="number">38</span>,<span class="number">36</span>,<span class="number">32</span>,<span class="number">30</span>,<span class="number">28</span>,<span class="number">26</span>,<span class="number">23</span>,<span class="number">27</span>,<span class="number">33</span>,<span class="number">35</span>,<span class="number">34</span>,<span class="number">29</span>,<span class="number">37</span> &#125;; <span class="comment">//cathode array</span></span><br><span class="line"><span class="keyword">int</span> anode[<span class="number">4</span>] = &#123; <span class="number">39</span>,<span class="number">41</span>,<span class="number">43</span>,<span class="number">45</span> &#125;; <span class="comment">//annode array commin annode</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Define the 26 Lamps as a 2D Array</span></span><br><span class="line"><span class="keyword">int</span> lamparray[<span class="number">26</span>][<span class="number">2</span>] = &#123;</span><br><span class="line">    &#123;<span class="number">12</span>,<span class="number">10</span>&#125;, &#123;<span class="number">13</span>,<span class="number">5</span>&#125;, &#123;<span class="number">13</span>,<span class="number">7</span>&#125;, &#123;<span class="number">12</span>,<span class="number">8</span>&#125;, &#123;<span class="number">11</span>,<span class="number">8</span>&#125;, &#123;<span class="number">12</span>,<span class="number">7</span>,&#125;, &#123;<span class="number">12</span>,<span class="number">6</span>&#125;, &#123;<span class="number">12</span>,<span class="number">5</span>&#125;, &#123;<span class="number">11</span>,<span class="number">3</span>&#125;,</span><br><span class="line">    &#123;<span class="number">12</span>,<span class="number">4</span>&#125;, &#123;<span class="number">12</span>,<span class="number">3</span>&#125;, &#123;<span class="number">13</span>,<span class="number">2</span>&#125;, &#123;<span class="number">13</span>,<span class="number">3</span>&#125;, &#123;<span class="number">13</span>,<span class="number">4</span>&#125;, &#123;<span class="number">11</span>,<span class="number">2</span>&#125;, &#123;<span class="number">13</span>,<span class="number">10</span>&#125;, &#123;<span class="number">11</span>,<span class="number">10</span>&#125;, &#123;<span class="number">11</span>,<span class="number">7</span>&#125;,</span><br><span class="line">    &#123;<span class="number">12</span>,<span class="number">9</span>&#125;, &#123;<span class="number">11</span>,<span class="number">6</span>&#125;, &#123;<span class="number">11</span>,<span class="number">4</span>&#125;, &#123;<span class="number">13</span>,<span class="number">6</span>&#125;, &#123;<span class="number">11</span>,<span class="number">9</span>&#125;, &#123;<span class="number">13</span>,<span class="number">8</span>&#125;, &#123;<span class="number">13</span>,<span class="number">9</span>&#125;, &#123;<span class="number">11</span>,<span class="number">5</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  Define the 12 Lamp Pins for initialization</span></span><br><span class="line"><span class="keyword">int</span> lamppin[<span class="number">12</span>] = &#123; <span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span> &#125;; <span class="comment">//2 to 10 cathode, 11 to 13 common annode</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Define each LTP587P Segments: A,B,C,D,E,F,G,H,K,M,N,P,R,S,T,U,dp              </span></span><br><span class="line">boolean segmentvals[<span class="number">40</span>][<span class="number">17</span>] = &#123;</span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span> &#125;, <span class="comment">// = A 0</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = B 1</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = C 2</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = D 3</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span> &#125;, <span class="comment">// = E 4</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span> &#125;, <span class="comment">// = F 5</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = G 6</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span> &#125;, <span class="comment">// = H 7</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = I 8</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = J 9</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span> &#125;, <span class="comment">// = K 10</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = L 11</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = M 12</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = N 13</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = O 14</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span> &#125;, <span class="comment">// = P 15</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = Q 16</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span> &#125;, <span class="comment">// = R 17</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span> &#125;, <span class="comment">// = S 18</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = T 19</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = U 20</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = V 21</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = W 22</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = X 23</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = Y 24</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = Z 25</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = 0 26</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = 1 27</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span> &#125;, <span class="comment">// = 2 28</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = 3 29</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span> &#125;, <span class="comment">// = 4 30</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span> &#125;, <span class="comment">// = 5 31</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span> &#125;, <span class="comment">// = 6 32</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = 7 33</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span> &#125;, <span class="comment">// = 8 34</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span> &#125;, <span class="comment">// = 9 35</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> &#125;, <span class="comment">// = Space 36</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span> &#125;, <span class="comment">// = Full Lit 37</span></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span> &#125;, <span class="comment">// = SS 38</span></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span> &#125;  <span class="comment">// = &amp; 39</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// LTP587P Segments: A,B,C,D,E,F,G,H,K,M,N,P,R,S,T,U,dp</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Define the 5 Mode LEDs</span></span><br><span class="line"><span class="keyword">int</span> led1 = <span class="number">40</span>;</span><br><span class="line"><span class="keyword">int</span> led2 = <span class="number">42</span>;</span><br><span class="line"><span class="keyword">int</span> led3 = <span class="number">44</span>;</span><br><span class="line"><span class="keyword">int</span> led4 = <span class="number">46</span>;</span><br><span class="line"><span class="keyword">int</span> led5 = <span class="number">48</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//4,10,12,5,11,6,3,16,21,25,13,19,14,22,24,7,23,20,18,15,0,8,1,17,2,9</span></span><br><span class="line"><span class="comment">//Define the rotor values A B C D E F G H I J K L M N O P Q</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> rotorvals[<span class="number">12</span>][<span class="number">78</span>] = &#123;</span><br><span class="line">    &#123; <span class="number">4</span>,<span class="number">10</span>,<span class="number">12</span>,<span class="number">5</span>,<span class="number">11</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">16</span>,<span class="number">21</span>,<span class="number">25</span>,<span class="number">13</span>,<span class="number">19</span>,<span class="number">14</span>,<span class="number">22</span>,<span class="number">24</span>,<span class="number">7</span>,<span class="number">123</span>,<span class="number">20</span>,<span class="number">18</span>,<span class="number">15</span>,<span class="number">0</span>,<span class="number">8</span>,<span class="number">1</span>,<span class="number">17</span>,<span class="number">2</span>,<span class="number">9</span>,</span><br><span class="line">      <span class="number">4</span>,<span class="number">10</span>,<span class="number">12</span>,<span class="number">5</span>,<span class="number">11</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">16</span>,<span class="number">21</span>,<span class="number">25</span>,<span class="number">13</span>,<span class="number">19</span>,<span class="number">14</span>,<span class="number">22</span>,<span class="number">24</span>,<span class="number">7</span>,<span class="number">123</span>,<span class="number">20</span>,<span class="number">18</span>,<span class="number">15</span>,<span class="number">0</span>,<span class="number">8</span>,<span class="number">1</span>,<span class="number">17</span>,<span class="number">2</span>,<span class="number">9</span>,</span><br><span class="line">      <span class="number">4</span>,<span class="number">10</span>,<span class="number">12</span>,<span class="number">5</span>,<span class="number">11</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">16</span>,<span class="number">21</span>,<span class="number">25</span>,<span class="number">13</span>,<span class="number">19</span>,<span class="number">14</span>,<span class="number">22</span>,<span class="number">24</span>,<span class="number">7</span>,<span class="number">123</span>,<span class="number">20</span>,<span class="number">18</span>,<span class="number">15</span>,<span class="number">0</span>,<span class="number">8</span>,<span class="number">1</span>,<span class="number">17</span>,<span class="number">2</span>,<span class="number">9</span> &#125;, <span class="comment">// wheel 1</span></span><br><span class="line"></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">10</span>,<span class="number">118</span>,<span class="number">8</span>,<span class="number">17</span>,<span class="number">20</span>,<span class="number">23</span>,<span class="number">1</span>,<span class="number">11</span>,<span class="number">7</span>,<span class="number">22</span>,<span class="number">19</span>,<span class="number">12</span>,<span class="number">2</span>,<span class="number">16</span>,<span class="number">6</span>,<span class="number">25</span>,<span class="number">13</span>,<span class="number">15</span>,<span class="number">24</span>,<span class="number">5</span>,<span class="number">21</span>,<span class="number">14</span>,<span class="number">4</span>,</span><br><span class="line">      <span class="number">0</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">10</span>,<span class="number">118</span>,<span class="number">8</span>,<span class="number">17</span>,<span class="number">20</span>,<span class="number">23</span>,<span class="number">1</span>,<span class="number">11</span>,<span class="number">7</span>,<span class="number">22</span>,<span class="number">19</span>,<span class="number">12</span>,<span class="number">2</span>,<span class="number">16</span>,<span class="number">6</span>,<span class="number">25</span>,<span class="number">13</span>,<span class="number">15</span>,<span class="number">24</span>,<span class="number">5</span>,<span class="number">21</span>,<span class="number">14</span>,<span class="number">4</span>,</span><br><span class="line">      <span class="number">0</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">10</span>,<span class="number">118</span>,<span class="number">8</span>,<span class="number">17</span>,<span class="number">20</span>,<span class="number">23</span>,<span class="number">1</span>,<span class="number">11</span>,<span class="number">7</span>,<span class="number">22</span>,<span class="number">19</span>,<span class="number">12</span>,<span class="number">2</span>,<span class="number">16</span>,<span class="number">6</span>,<span class="number">25</span>,<span class="number">13</span>,<span class="number">15</span>,<span class="number">24</span>,<span class="number">5</span>,<span class="number">21</span>,<span class="number">14</span>,<span class="number">4</span> &#125;, <span class="comment">// wheel 2</span></span><br><span class="line"></span><br><span class="line">    &#123; <span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">11</span>,<span class="number">2</span>,<span class="number">15</span>,<span class="number">17</span>,<span class="number">19</span>,<span class="number">23</span>,<span class="number">21</span>,<span class="number">25</span>,<span class="number">13</span>,<span class="number">24</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">22</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">10</span>,<span class="number">112</span>,<span class="number">20</span>,<span class="number">18</span>,<span class="number">16</span>,<span class="number">14</span>,</span><br><span class="line">      <span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">11</span>,<span class="number">2</span>,<span class="number">15</span>,<span class="number">17</span>,<span class="number">19</span>,<span class="number">23</span>,<span class="number">21</span>,<span class="number">25</span>,<span class="number">13</span>,<span class="number">24</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">22</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">10</span>,<span class="number">112</span>,<span class="number">20</span>,<span class="number">18</span>,<span class="number">16</span>,<span class="number">14</span>,</span><br><span class="line">      <span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">11</span>,<span class="number">2</span>,<span class="number">15</span>,<span class="number">17</span>,<span class="number">19</span>,<span class="number">23</span>,<span class="number">21</span>,<span class="number">25</span>,<span class="number">13</span>,<span class="number">24</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">22</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">10</span>,<span class="number">112</span>,<span class="number">20</span>,<span class="number">18</span>,<span class="number">16</span>,<span class="number">14</span> &#125;, <span class="comment">// wheel 3</span></span><br><span class="line"></span><br><span class="line">    &#123; <span class="number">4</span>,<span class="number">18</span>,<span class="number">14</span>,<span class="number">21</span>,<span class="number">15</span>,<span class="number">25</span>,<span class="number">9</span>,<span class="number">0</span>,<span class="number">24</span>,<span class="number">116</span>,<span class="number">20</span>,<span class="number">8</span>,<span class="number">17</span>,<span class="number">7</span>,<span class="number">23</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">5</span>,<span class="number">19</span>,<span class="number">6</span>,<span class="number">10</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">12</span>,<span class="number">22</span>,<span class="number">1</span>,</span><br><span class="line">      <span class="number">4</span>,<span class="number">18</span>,<span class="number">14</span>,<span class="number">21</span>,<span class="number">15</span>,<span class="number">25</span>,<span class="number">9</span>,<span class="number">0</span>,<span class="number">24</span>,<span class="number">116</span>,<span class="number">20</span>,<span class="number">8</span>,<span class="number">17</span>,<span class="number">7</span>,<span class="number">23</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">5</span>,<span class="number">19</span>,<span class="number">6</span>,<span class="number">10</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">12</span>,<span class="number">22</span>,<span class="number">1</span>,</span><br><span class="line">      <span class="number">4</span>,<span class="number">18</span>,<span class="number">14</span>,<span class="number">21</span>,<span class="number">15</span>,<span class="number">25</span>,<span class="number">9</span>,<span class="number">0</span>,<span class="number">24</span>,<span class="number">116</span>,<span class="number">20</span>,<span class="number">8</span>,<span class="number">17</span>,<span class="number">7</span>,<span class="number">23</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">5</span>,<span class="number">19</span>,<span class="number">6</span>,<span class="number">10</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">12</span>,<span class="number">22</span>,<span class="number">1</span> &#125;, <span class="comment">// wheel 4</span></span><br><span class="line"></span><br><span class="line">    &#123; <span class="number">21</span>,<span class="number">25</span>,<span class="number">1</span>,<span class="number">17</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">19</span>,<span class="number">24</span>,<span class="number">20</span>,<span class="number">15</span>,<span class="number">18</span>,<span class="number">3</span>,<span class="number">13</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">23</span>,<span class="number">0</span>,<span class="number">22</span>,<span class="number">12</span>,<span class="number">9</span>,<span class="number">16</span>,<span class="number">14</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">110</span>,</span><br><span class="line">      <span class="number">21</span>,<span class="number">25</span>,<span class="number">1</span>,<span class="number">17</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">19</span>,<span class="number">24</span>,<span class="number">20</span>,<span class="number">15</span>,<span class="number">18</span>,<span class="number">3</span>,<span class="number">13</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">23</span>,<span class="number">0</span>,<span class="number">22</span>,<span class="number">12</span>,<span class="number">9</span>,<span class="number">16</span>,<span class="number">14</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">110</span>,</span><br><span class="line">      <span class="number">21</span>,<span class="number">25</span>,<span class="number">1</span>,<span class="number">17</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">19</span>,<span class="number">24</span>,<span class="number">20</span>,<span class="number">15</span>,<span class="number">18</span>,<span class="number">3</span>,<span class="number">13</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">23</span>,<span class="number">0</span>,<span class="number">22</span>,<span class="number">12</span>,<span class="number">9</span>,<span class="number">16</span>,<span class="number">14</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">110</span> &#125;, <span class="comment">// wheel 5</span></span><br><span class="line"></span><br><span class="line">    &#123; <span class="number">9</span>,<span class="number">15</span>,<span class="number">6</span>,<span class="number">21</span>,<span class="number">14</span>,<span class="number">20</span>,<span class="number">12</span>,<span class="number">5</span>,<span class="number">24</span>,<span class="number">16</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">113</span>,<span class="number">7</span>,<span class="number">25</span>,<span class="number">17</span>,<span class="number">3</span>,<span class="number">10</span>,<span class="number">0</span>,<span class="number">18</span>,<span class="number">23</span>,<span class="number">11</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">19</span>,<span class="number">122</span>,</span><br><span class="line">      <span class="number">9</span>,<span class="number">15</span>,<span class="number">6</span>,<span class="number">21</span>,<span class="number">14</span>,<span class="number">20</span>,<span class="number">12</span>,<span class="number">5</span>,<span class="number">24</span>,<span class="number">16</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">113</span>,<span class="number">7</span>,<span class="number">25</span>,<span class="number">17</span>,<span class="number">3</span>,<span class="number">10</span>,<span class="number">0</span>,<span class="number">18</span>,<span class="number">23</span>,<span class="number">11</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">19</span>,<span class="number">122</span>,</span><br><span class="line">      <span class="number">9</span>,<span class="number">15</span>,<span class="number">6</span>,<span class="number">21</span>,<span class="number">14</span>,<span class="number">20</span>,<span class="number">12</span>,<span class="number">5</span>,<span class="number">24</span>,<span class="number">16</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">113</span>,<span class="number">7</span>,<span class="number">25</span>,<span class="number">17</span>,<span class="number">3</span>,<span class="number">10</span>,<span class="number">0</span>,<span class="number">18</span>,<span class="number">23</span>,<span class="number">11</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">19</span>,<span class="number">122</span> &#125;, <span class="comment">// wheel 6</span></span><br><span class="line"></span><br><span class="line">    &#123; <span class="number">13</span>,<span class="number">25</span>,<span class="number">9</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">17</span>,<span class="number">2</span>,<span class="number">23</span>,<span class="number">12</span>,<span class="number">24</span>,<span class="number">18</span>,<span class="number">22</span>,<span class="number">101</span>,<span class="number">14</span>,<span class="number">20</span>,<span class="number">5</span>,<span class="number">0</span>,<span class="number">8</span>,<span class="number">21</span>,<span class="number">11</span>,<span class="number">15</span>,<span class="number">4</span>,<span class="number">10</span>,<span class="number">16</span>,<span class="number">3</span>,<span class="number">119</span>,</span><br><span class="line">      <span class="number">13</span>,<span class="number">25</span>,<span class="number">9</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">17</span>,<span class="number">2</span>,<span class="number">23</span>,<span class="number">12</span>,<span class="number">24</span>,<span class="number">18</span>,<span class="number">22</span>,<span class="number">101</span>,<span class="number">14</span>,<span class="number">20</span>,<span class="number">5</span>,<span class="number">0</span>,<span class="number">8</span>,<span class="number">21</span>,<span class="number">11</span>,<span class="number">15</span>,<span class="number">4</span>,<span class="number">10</span>,<span class="number">16</span>,<span class="number">3</span>,<span class="number">119</span>,</span><br><span class="line">      <span class="number">13</span>,<span class="number">25</span>,<span class="number">9</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">17</span>,<span class="number">2</span>,<span class="number">23</span>,<span class="number">12</span>,<span class="number">24</span>,<span class="number">18</span>,<span class="number">22</span>,<span class="number">101</span>,<span class="number">14</span>,<span class="number">20</span>,<span class="number">5</span>,<span class="number">0</span>,<span class="number">8</span>,<span class="number">21</span>,<span class="number">11</span>,<span class="number">15</span>,<span class="number">4</span>,<span class="number">10</span>,<span class="number">16</span>,<span class="number">3</span>,<span class="number">119</span> &#125;, <span class="comment">// wheel 7</span></span><br><span class="line"></span><br><span class="line">    &#123; <span class="number">5</span>,<span class="number">10</span>,<span class="number">16</span>,<span class="number">7</span>,<span class="number">19</span>,<span class="number">11</span>,<span class="number">23</span>,<span class="number">14</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">9</span>,<span class="number">18</span>,<span class="number">115</span>,<span class="number">3</span>,<span class="number">25</span>,<span class="number">17</span>,<span class="number">0</span>,<span class="number">12</span>,<span class="number">4</span>,<span class="number">22</span>,<span class="number">13</span>,<span class="number">8</span>,<span class="number">20</span>,<span class="number">24</span>,<span class="number">6</span>,<span class="number">121</span>,</span><br><span class="line">      <span class="number">5</span>,<span class="number">10</span>,<span class="number">16</span>,<span class="number">7</span>,<span class="number">19</span>,<span class="number">11</span>,<span class="number">23</span>,<span class="number">14</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">9</span>,<span class="number">18</span>,<span class="number">115</span>,<span class="number">3</span>,<span class="number">25</span>,<span class="number">17</span>,<span class="number">0</span>,<span class="number">12</span>,<span class="number">4</span>,<span class="number">22</span>,<span class="number">13</span>,<span class="number">8</span>,<span class="number">20</span>,<span class="number">24</span>,<span class="number">6</span>,<span class="number">121</span>,</span><br><span class="line">      <span class="number">5</span>,<span class="number">10</span>,<span class="number">16</span>,<span class="number">7</span>,<span class="number">19</span>,<span class="number">11</span>,<span class="number">23</span>,<span class="number">14</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">9</span>,<span class="number">18</span>,<span class="number">115</span>,<span class="number">3</span>,<span class="number">25</span>,<span class="number">17</span>,<span class="number">0</span>,<span class="number">12</span>,<span class="number">4</span>,<span class="number">22</span>,<span class="number">13</span>,<span class="number">8</span>,<span class="number">20</span>,<span class="number">24</span>,<span class="number">6</span>,<span class="number">121</span> &#125;, <span class="comment">// wheel 8</span></span><br><span class="line"></span><br><span class="line">    &#123; <span class="number">11</span>,<span class="number">4</span>,<span class="number">24</span>,<span class="number">9</span>,<span class="number">21</span>,<span class="number">2</span>,<span class="number">13</span>,<span class="number">8</span>,<span class="number">23</span>,<span class="number">22</span>,<span class="number">15</span>,<span class="number">1</span>,<span class="number">16</span>,<span class="number">12</span>,<span class="number">3</span>,<span class="number">17</span>,<span class="number">19</span>,<span class="number">0</span>,<span class="number">10</span>,<span class="number">25</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">20</span>,<span class="number">7</span>,<span class="number">14</span>,<span class="number">18</span>,</span><br><span class="line">      <span class="number">11</span>,<span class="number">4</span>,<span class="number">24</span>,<span class="number">9</span>,<span class="number">21</span>,<span class="number">2</span>,<span class="number">13</span>,<span class="number">8</span>,<span class="number">23</span>,<span class="number">22</span>,<span class="number">15</span>,<span class="number">1</span>,<span class="number">16</span>,<span class="number">12</span>,<span class="number">3</span>,<span class="number">17</span>,<span class="number">19</span>,<span class="number">0</span>,<span class="number">10</span>,<span class="number">25</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">20</span>,<span class="number">7</span>,<span class="number">14</span>,<span class="number">18</span>,</span><br><span class="line">      <span class="number">11</span>,<span class="number">4</span>,<span class="number">24</span>,<span class="number">9</span>,<span class="number">21</span>,<span class="number">2</span>,<span class="number">13</span>,<span class="number">8</span>,<span class="number">23</span>,<span class="number">22</span>,<span class="number">15</span>,<span class="number">1</span>,<span class="number">16</span>,<span class="number">12</span>,<span class="number">3</span>,<span class="number">17</span>,<span class="number">19</span>,<span class="number">0</span>,<span class="number">10</span>,<span class="number">25</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">20</span>,<span class="number">7</span>,<span class="number">14</span>,<span class="number">18</span> &#125;, <span class="comment">// Beta</span></span><br><span class="line"></span><br><span class="line">    &#123; <span class="number">5</span>,<span class="number">18</span>,<span class="number">14</span>,<span class="number">10</span>,<span class="number">0</span>,<span class="number">13</span>,<span class="number">20</span>,<span class="number">4</span>,<span class="number">17</span>,<span class="number">7</span>,<span class="number">12</span>,<span class="number">1</span>,<span class="number">19</span>,<span class="number">8</span>,<span class="number">24</span>,<span class="number">2</span>,<span class="number">22</span>,<span class="number">11</span>,<span class="number">16</span>,<span class="number">15</span>,<span class="number">25</span>,<span class="number">23</span>,<span class="number">21</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">3</span>,</span><br><span class="line">      <span class="number">5</span>,<span class="number">18</span>,<span class="number">14</span>,<span class="number">10</span>,<span class="number">0</span>,<span class="number">13</span>,<span class="number">20</span>,<span class="number">4</span>,<span class="number">17</span>,<span class="number">7</span>,<span class="number">12</span>,<span class="number">1</span>,<span class="number">19</span>,<span class="number">8</span>,<span class="number">24</span>,<span class="number">2</span>,<span class="number">22</span>,<span class="number">11</span>,<span class="number">16</span>,<span class="number">15</span>,<span class="number">25</span>,<span class="number">23</span>,<span class="number">21</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">3</span>,</span><br><span class="line">      <span class="number">5</span>,<span class="number">18</span>,<span class="number">14</span>,<span class="number">10</span>,<span class="number">0</span>,<span class="number">13</span>,<span class="number">20</span>,<span class="number">4</span>,<span class="number">17</span>,<span class="number">7</span>,<span class="number">12</span>,<span class="number">1</span>,<span class="number">19</span>,<span class="number">8</span>,<span class="number">24</span>,<span class="number">2</span>,<span class="number">22</span>,<span class="number">11</span>,<span class="number">16</span>,<span class="number">15</span>,<span class="number">25</span>,<span class="number">23</span>,<span class="number">21</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">3</span> &#125;, <span class="comment">// Gamma</span></span><br><span class="line"></span><br><span class="line">    &#123; <span class="number">4</span>,<span class="number">13</span>,<span class="number">10</span>,<span class="number">16</span>,<span class="number">0</span>,<span class="number">20</span>,<span class="number">24</span>,<span class="number">22</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">1</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">3</span>,<span class="number">23</span>,<span class="number">25</span>,<span class="number">21</span>,<span class="number">5</span>,<span class="number">19</span>,<span class="number">7</span>,<span class="number">17</span>,<span class="number">6</span>,<span class="number">18</span>,</span><br><span class="line">      <span class="number">4</span>,<span class="number">13</span>,<span class="number">10</span>,<span class="number">16</span>,<span class="number">0</span>,<span class="number">20</span>,<span class="number">24</span>,<span class="number">22</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">1</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">3</span>,<span class="number">23</span>,<span class="number">25</span>,<span class="number">21</span>,<span class="number">5</span>,<span class="number">19</span>,<span class="number">7</span>,<span class="number">17</span>,<span class="number">6</span>,<span class="number">18</span>,</span><br><span class="line">      <span class="number">4</span>,<span class="number">13</span>,<span class="number">10</span>,<span class="number">16</span>,<span class="number">0</span>,<span class="number">20</span>,<span class="number">24</span>,<span class="number">22</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">1</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">3</span>,<span class="number">23</span>,<span class="number">25</span>,<span class="number">21</span>,<span class="number">5</span>,<span class="number">19</span>,<span class="number">7</span>,<span class="number">17</span>,<span class="number">6</span>,<span class="number">18</span>&#125;, <span class="comment">// = UKW-B</span></span><br><span class="line"></span><br><span class="line">    &#123; <span class="number">17</span>,<span class="number">3</span>,<span class="number">14</span>,<span class="number">1</span>,<span class="number">9</span>,<span class="number">13</span>,<span class="number">19</span>,<span class="number">10</span>,<span class="number">21</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">12</span>,<span class="number">11</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">22</span>,<span class="number">25</span>,<span class="number">0</span>,<span class="number">23</span>,<span class="number">6</span>,<span class="number">24</span>,<span class="number">8</span>,<span class="number">15</span>,<span class="number">18</span>,<span class="number">20</span>,<span class="number">16</span>,</span><br><span class="line">      <span class="number">17</span>,<span class="number">3</span>,<span class="number">14</span>,<span class="number">1</span>,<span class="number">9</span>,<span class="number">13</span>,<span class="number">19</span>,<span class="number">10</span>,<span class="number">21</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">12</span>,<span class="number">11</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">22</span>,<span class="number">25</span>,<span class="number">0</span>,<span class="number">23</span>,<span class="number">6</span>,<span class="number">24</span>,<span class="number">8</span>,<span class="number">15</span>,<span class="number">18</span>,<span class="number">20</span>,<span class="number">16</span>,</span><br><span class="line">      <span class="number">17</span>,<span class="number">3</span>,<span class="number">14</span>,<span class="number">1</span>,<span class="number">9</span>,<span class="number">13</span>,<span class="number">19</span>,<span class="number">10</span>,<span class="number">21</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">12</span>,<span class="number">11</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">22</span>,<span class="number">25</span>,<span class="number">0</span>,<span class="number">23</span>,<span class="number">6</span>,<span class="number">24</span>,<span class="number">8</span>,<span class="number">15</span>,<span class="number">18</span>,<span class="number">20</span>,<span class="number">16</span> &#125; <span class="comment">// = UKW-C</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> rotorvali[<span class="number">10</span>][<span class="number">78</span>] = &#123;</span><br><span class="line">    &#123; <span class="number">20</span>,<span class="number">22</span>,<span class="number">24</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">15</span>,<span class="number">21</span>,<span class="number">25</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">10</span>,<span class="number">12</span>,<span class="number">19</span>,<span class="number">7</span>,<span class="number">23</span>,<span class="number">18</span>,<span class="number">11</span>,<span class="number">17</span>,<span class="number">8</span>,<span class="number">13</span>,<span class="number">16</span>,<span class="number">14</span>,<span class="number">9</span>,</span><br><span class="line">      <span class="number">20</span>,<span class="number">22</span>,<span class="number">24</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">15</span>,<span class="number">21</span>,<span class="number">25</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">10</span>,<span class="number">12</span>,<span class="number">19</span>,<span class="number">7</span>,<span class="number">23</span>,<span class="number">18</span>,<span class="number">11</span>,<span class="number">17</span>,<span class="number">8</span>,<span class="number">13</span>,<span class="number">16</span>,<span class="number">14</span>,<span class="number">9</span>,</span><br><span class="line">      <span class="number">20</span>,<span class="number">22</span>,<span class="number">24</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">15</span>,<span class="number">21</span>,<span class="number">25</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">10</span>,<span class="number">12</span>,<span class="number">19</span>,<span class="number">7</span>,<span class="number">23</span>,<span class="number">18</span>,<span class="number">11</span>,<span class="number">17</span>,<span class="number">8</span>,<span class="number">13</span>,<span class="number">16</span>,<span class="number">14</span>,<span class="number">9</span> &#125;, <span class="comment">//wheel 1 i</span></span><br><span class="line"></span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">9</span>,<span class="number">15</span>,<span class="number">2</span>,<span class="number">25</span>,<span class="number">22</span>,<span class="number">17</span>,<span class="number">11</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">10</span>,<span class="number">14</span>,<span class="number">19</span>,<span class="number">24</span>,<span class="number">20</span>,<span class="number">16</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">13</span>,<span class="number">7</span>,<span class="number">23</span>,<span class="number">12</span>,<span class="number">8</span>,<span class="number">21</span>,<span class="number">18</span>,</span><br><span class="line">      <span class="number">0</span>,<span class="number">9</span>,<span class="number">15</span>,<span class="number">2</span>,<span class="number">25</span>,<span class="number">22</span>,<span class="number">17</span>,<span class="number">11</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">10</span>,<span class="number">14</span>,<span class="number">19</span>,<span class="number">24</span>,<span class="number">20</span>,<span class="number">16</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">13</span>,<span class="number">7</span>,<span class="number">23</span>,<span class="number">12</span>,<span class="number">8</span>,<span class="number">21</span>,<span class="number">18</span>,</span><br><span class="line">      <span class="number">0</span>,<span class="number">9</span>,<span class="number">15</span>,<span class="number">2</span>,<span class="number">25</span>,<span class="number">22</span>,<span class="number">17</span>,<span class="number">11</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">10</span>,<span class="number">14</span>,<span class="number">19</span>,<span class="number">24</span>,<span class="number">20</span>,<span class="number">16</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">13</span>,<span class="number">7</span>,<span class="number">23</span>,<span class="number">12</span>,<span class="number">8</span>,<span class="number">21</span>,<span class="number">18</span> &#125;, <span class="comment">//wheel 2 i</span></span><br><span class="line"></span><br><span class="line">    &#123; <span class="number">19</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">15</span>,<span class="number">2</span>,<span class="number">18</span>,<span class="number">3</span>,<span class="number">16</span>,<span class="number">4</span>,<span class="number">20</span>,<span class="number">5</span>,<span class="number">21</span>,<span class="number">13</span>,<span class="number">25</span>,<span class="number">7</span>,<span class="number">24</span>,<span class="number">8</span>,<span class="number">23</span>,<span class="number">9</span>,<span class="number">22</span>,<span class="number">11</span>,<span class="number">17</span>,<span class="number">10</span>,<span class="number">14</span>,<span class="number">12</span>,</span><br><span class="line">      <span class="number">19</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">15</span>,<span class="number">2</span>,<span class="number">18</span>,<span class="number">3</span>,<span class="number">16</span>,<span class="number">4</span>,<span class="number">20</span>,<span class="number">5</span>,<span class="number">21</span>,<span class="number">13</span>,<span class="number">25</span>,<span class="number">7</span>,<span class="number">24</span>,<span class="number">8</span>,<span class="number">23</span>,<span class="number">9</span>,<span class="number">22</span>,<span class="number">11</span>,<span class="number">17</span>,<span class="number">10</span>,<span class="number">14</span>,<span class="number">12</span>,</span><br><span class="line">      <span class="number">19</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">15</span>,<span class="number">2</span>,<span class="number">18</span>,<span class="number">3</span>,<span class="number">16</span>,<span class="number">4</span>,<span class="number">20</span>,<span class="number">5</span>,<span class="number">21</span>,<span class="number">13</span>,<span class="number">25</span>,<span class="number">7</span>,<span class="number">24</span>,<span class="number">8</span>,<span class="number">23</span>,<span class="number">9</span>,<span class="number">22</span>,<span class="number">11</span>,<span class="number">17</span>,<span class="number">10</span>,<span class="number">14</span>,<span class="number">12</span> &#125;, <span class="comment">//wheel 3 i</span></span><br><span class="line"></span><br><span class="line">    &#123; <span class="number">7</span>,<span class="number">25</span>,<span class="number">22</span>,<span class="number">21</span>,<span class="number">0</span>,<span class="number">17</span>,<span class="number">19</span>,<span class="number">13</span>,<span class="number">11</span>,<span class="number">6</span>,<span class="number">20</span>,<span class="number">15</span>,<span class="number">23</span>,<span class="number">16</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">12</span>,<span class="number">1</span>,<span class="number">18</span>,<span class="number">10</span>,<span class="number">3</span>,<span class="number">24</span>,<span class="number">14</span>,<span class="number">8</span>,<span class="number">5</span>,</span><br><span class="line">      <span class="number">7</span>,<span class="number">25</span>,<span class="number">22</span>,<span class="number">21</span>,<span class="number">0</span>,<span class="number">17</span>,<span class="number">19</span>,<span class="number">13</span>,<span class="number">11</span>,<span class="number">6</span>,<span class="number">20</span>,<span class="number">15</span>,<span class="number">23</span>,<span class="number">16</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">12</span>,<span class="number">1</span>,<span class="number">18</span>,<span class="number">10</span>,<span class="number">3</span>,<span class="number">24</span>,<span class="number">14</span>,<span class="number">8</span>,<span class="number">5</span>,</span><br><span class="line">      <span class="number">7</span>,<span class="number">25</span>,<span class="number">22</span>,<span class="number">21</span>,<span class="number">0</span>,<span class="number">17</span>,<span class="number">19</span>,<span class="number">13</span>,<span class="number">11</span>,<span class="number">6</span>,<span class="number">20</span>,<span class="number">15</span>,<span class="number">23</span>,<span class="number">16</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">12</span>,<span class="number">1</span>,<span class="number">18</span>,<span class="number">10</span>,<span class="number">3</span>,<span class="number">24</span>,<span class="number">14</span>,<span class="number">8</span>,<span class="number">5</span> &#125;, <span class="comment">//wheel 4 i</span></span><br><span class="line"></span><br><span class="line">    &#123; <span class="number">16</span>,<span class="number">2</span>,<span class="number">24</span>,<span class="number">11</span>,<span class="number">23</span>,<span class="number">22</span>,<span class="number">4</span>,<span class="number">13</span>,<span class="number">5</span>,<span class="number">19</span>,<span class="number">25</span>,<span class="number">14</span>,<span class="number">18</span>,<span class="number">12</span>,<span class="number">21</span>,<span class="number">9</span>,<span class="number">20</span>,<span class="number">3</span>,<span class="number">10</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">17</span>,<span class="number">15</span>,<span class="number">7</span>,<span class="number">1</span>,</span><br><span class="line">      <span class="number">16</span>,<span class="number">2</span>,<span class="number">24</span>,<span class="number">11</span>,<span class="number">23</span>,<span class="number">22</span>,<span class="number">4</span>,<span class="number">13</span>,<span class="number">5</span>,<span class="number">19</span>,<span class="number">25</span>,<span class="number">14</span>,<span class="number">18</span>,<span class="number">12</span>,<span class="number">21</span>,<span class="number">9</span>,<span class="number">20</span>,<span class="number">3</span>,<span class="number">10</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">17</span>,<span class="number">15</span>,<span class="number">7</span>,<span class="number">1</span>,</span><br><span class="line">      <span class="number">16</span>,<span class="number">2</span>,<span class="number">24</span>,<span class="number">11</span>,<span class="number">23</span>,<span class="number">22</span>,<span class="number">4</span>,<span class="number">13</span>,<span class="number">5</span>,<span class="number">19</span>,<span class="number">25</span>,<span class="number">14</span>,<span class="number">18</span>,<span class="number">12</span>,<span class="number">21</span>,<span class="number">9</span>,<span class="number">20</span>,<span class="number">3</span>,<span class="number">10</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">17</span>,<span class="number">15</span>,<span class="number">7</span>,<span class="number">1</span> &#125;, <span class="comment">//wheel 5 i</span></span><br><span class="line"></span><br><span class="line">    &#123; <span class="number">18</span>,<span class="number">10</span>,<span class="number">23</span>,<span class="number">16</span>,<span class="number">11</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">13</span>,<span class="number">22</span>,<span class="number">0</span>,<span class="number">17</span>,<span class="number">21</span>,<span class="number">06</span>,<span class="number">12</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">9</span>,<span class="number">15</span>,<span class="number">19</span>,<span class="number">24</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">25</span>,<span class="number">20</span>,<span class="number">8</span>,<span class="number">14</span>,</span><br><span class="line">      <span class="number">18</span>,<span class="number">10</span>,<span class="number">23</span>,<span class="number">16</span>,<span class="number">11</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">13</span>,<span class="number">22</span>,<span class="number">0</span>,<span class="number">17</span>,<span class="number">21</span>,<span class="number">06</span>,<span class="number">12</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">9</span>,<span class="number">15</span>,<span class="number">19</span>,<span class="number">24</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">25</span>,<span class="number">20</span>,<span class="number">8</span>,<span class="number">14</span>,</span><br><span class="line">      <span class="number">18</span>,<span class="number">10</span>,<span class="number">23</span>,<span class="number">16</span>,<span class="number">11</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">13</span>,<span class="number">22</span>,<span class="number">0</span>,<span class="number">17</span>,<span class="number">21</span>,<span class="number">06</span>,<span class="number">12</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">9</span>,<span class="number">15</span>,<span class="number">19</span>,<span class="number">24</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">25</span>,<span class="number">20</span>,<span class="number">8</span>,<span class="number">14</span> &#125;, <span class="comment">//wheel 6 i</span></span><br><span class="line"></span><br><span class="line">    &#123; <span class="number">16</span>,<span class="number">12</span>,<span class="number">6</span>,<span class="number">24</span>,<span class="number">21</span>,<span class="number">15</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">17</span>,<span class="number">2</span>,<span class="number">22</span>,<span class="number">19</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">13</span>,<span class="number">20</span>,<span class="number">23</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">25</span>,<span class="number">14</span>,<span class="number">18</span>,<span class="number">11</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">1</span>,</span><br><span class="line">      <span class="number">16</span>,<span class="number">12</span>,<span class="number">6</span>,<span class="number">24</span>,<span class="number">21</span>,<span class="number">15</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">17</span>,<span class="number">2</span>,<span class="number">22</span>,<span class="number">19</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">13</span>,<span class="number">20</span>,<span class="number">23</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">25</span>,<span class="number">14</span>,<span class="number">18</span>,<span class="number">11</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">1</span>,</span><br><span class="line">      <span class="number">16</span>,<span class="number">12</span>,<span class="number">6</span>,<span class="number">24</span>,<span class="number">21</span>,<span class="number">15</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">17</span>,<span class="number">2</span>,<span class="number">22</span>,<span class="number">19</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">13</span>,<span class="number">20</span>,<span class="number">23</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">25</span>,<span class="number">14</span>,<span class="number">18</span>,<span class="number">11</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">1</span> &#125;, <span class="comment">//wheel 7 i</span></span><br><span class="line"></span><br><span class="line">    &#123; <span class="number">16</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">13</span>,<span class="number">18</span>,<span class="number">0</span>,<span class="number">24</span>,<span class="number">3</span>,<span class="number">21</span>,<span class="number">10</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">17</span>,<span class="number">20</span>,<span class="number">7</span>,<span class="number">12</span>,<span class="number">2</span>,<span class="number">15</span>,<span class="number">11</span>,<span class="number">4</span>,<span class="number">22</span>,<span class="number">25</span>,<span class="number">19</span>,<span class="number">6</span>,<span class="number">23</span>,<span class="number">14</span>,</span><br><span class="line">      <span class="number">16</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">13</span>,<span class="number">18</span>,<span class="number">0</span>,<span class="number">24</span>,<span class="number">3</span>,<span class="number">21</span>,<span class="number">10</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">17</span>,<span class="number">20</span>,<span class="number">7</span>,<span class="number">12</span>,<span class="number">2</span>,<span class="number">15</span>,<span class="number">11</span>,<span class="number">4</span>,<span class="number">22</span>,<span class="number">25</span>,<span class="number">19</span>,<span class="number">6</span>,<span class="number">23</span>,<span class="number">14</span>,</span><br><span class="line">      <span class="number">16</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">13</span>,<span class="number">18</span>,<span class="number">0</span>,<span class="number">24</span>,<span class="number">3</span>,<span class="number">21</span>,<span class="number">10</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">17</span>,<span class="number">20</span>,<span class="number">7</span>,<span class="number">12</span>,<span class="number">2</span>,<span class="number">15</span>,<span class="number">11</span>,<span class="number">4</span>,<span class="number">22</span>,<span class="number">25</span>,<span class="number">19</span>,<span class="number">6</span>,<span class="number">23</span>,<span class="number">14</span> &#125;, <span class="comment">//wheel 8 i</span></span><br><span class="line"></span><br><span class="line">    &#123; <span class="number">17</span>,<span class="number">11</span>,<span class="number">5</span>,<span class="number">14</span>,<span class="number">1</span>,<span class="number">21</span>,<span class="number">20</span>,<span class="number">23</span>,<span class="number">7</span>,<span class="number">3</span>,<span class="number">18</span>,<span class="number">0</span>,<span class="number">13</span>,<span class="number">6</span>,<span class="number">24</span>,<span class="number">10</span>,<span class="number">12</span>,<span class="number">15</span>,<span class="number">25</span>,<span class="number">16</span>,<span class="number">22</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">19</span>,</span><br><span class="line">      <span class="number">17</span>,<span class="number">11</span>,<span class="number">5</span>,<span class="number">14</span>,<span class="number">1</span>,<span class="number">21</span>,<span class="number">20</span>,<span class="number">23</span>,<span class="number">7</span>,<span class="number">3</span>,<span class="number">18</span>,<span class="number">0</span>,<span class="number">13</span>,<span class="number">6</span>,<span class="number">24</span>,<span class="number">10</span>,<span class="number">12</span>,<span class="number">15</span>,<span class="number">25</span>,<span class="number">16</span>,<span class="number">22</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">19</span>,</span><br><span class="line">      <span class="number">17</span>,<span class="number">11</span>,<span class="number">5</span>,<span class="number">14</span>,<span class="number">1</span>,<span class="number">21</span>,<span class="number">20</span>,<span class="number">23</span>,<span class="number">7</span>,<span class="number">3</span>,<span class="number">18</span>,<span class="number">0</span>,<span class="number">13</span>,<span class="number">6</span>,<span class="number">24</span>,<span class="number">10</span>,<span class="number">12</span>,<span class="number">15</span>,<span class="number">25</span>,<span class="number">16</span>,<span class="number">22</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">19</span> &#125;, <span class="comment">//Beta i</span></span><br><span class="line"></span><br><span class="line">    &#123; <span class="number">4</span>,<span class="number">11</span>,<span class="number">15</span>,<span class="number">25</span>,<span class="number">7</span>,<span class="number">0</span>,<span class="number">23</span>,<span class="number">9</span>,<span class="number">13</span>,<span class="number">24</span>,<span class="number">3</span>,<span class="number">17</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">19</span>,<span class="number">18</span>,<span class="number">8</span>,<span class="number">1</span>,<span class="number">12</span>,<span class="number">6</span>,<span class="number">22</span>,<span class="number">16</span>,<span class="number">21</span>,<span class="number">14</span>,<span class="number">20</span>,</span><br><span class="line">      <span class="number">4</span>,<span class="number">11</span>,<span class="number">15</span>,<span class="number">25</span>,<span class="number">7</span>,<span class="number">0</span>,<span class="number">23</span>,<span class="number">9</span>,<span class="number">13</span>,<span class="number">24</span>,<span class="number">3</span>,<span class="number">17</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">19</span>,<span class="number">18</span>,<span class="number">8</span>,<span class="number">1</span>,<span class="number">12</span>,<span class="number">6</span>,<span class="number">22</span>,<span class="number">16</span>,<span class="number">21</span>,<span class="number">14</span>,<span class="number">20</span>,</span><br><span class="line">      <span class="number">4</span>,<span class="number">11</span>,<span class="number">15</span>,<span class="number">25</span>,<span class="number">7</span>,<span class="number">0</span>,<span class="number">23</span>,<span class="number">9</span>,<span class="number">13</span>,<span class="number">24</span>,<span class="number">3</span>,<span class="number">17</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">19</span>,<span class="number">18</span>,<span class="number">8</span>,<span class="number">1</span>,<span class="number">12</span>,<span class="number">6</span>,<span class="number">22</span>,<span class="number">16</span>,<span class="number">21</span>,<span class="number">14</span>,<span class="number">20</span> &#125; <span class="comment">//Gamma i</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Define a 2D Array for keeping the wheel locations &amp; positions</span></span><br><span class="line"><span class="keyword">int</span> wheel[<span class="number">3</span>][<span class="number">3</span>] = &#123;</span><br><span class="line">    &#123;<span class="number">26</span>,<span class="number">0</span>,<span class="number">0</span>&#125;, &#123;<span class="number">26</span>,<span class="number">0</span>,<span class="number">0</span>&#125;, &#123;<span class="number">26</span>,<span class="number">0</span>,<span class="number">0</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> reflect[<span class="number">2</span>] = &#123;<span class="number">1</span>, <span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Define Array for plugbord values 25 x2 position 0 holds use position 1 holds value int plugu holds the total nomber of plugs used (10 max)</span></span><br><span class="line"><span class="keyword">int</span> plugval[<span class="number">2</span>][<span class="number">26</span>] = &#123;</span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span> &#125;,</span><br><span class="line">    &#123; <span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="number">22</span>,<span class="number">23</span>,<span class="number">24</span>,<span class="number">25</span> &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> pluguse = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> paindex = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> pbindex = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// Initialize all 38 LED pins as Output </span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt;= <span class="number">11</span>; index++) &#123;</span><br><span class="line">        pinMode(lamppin[index], OUTPUT);</span><br><span class="line">        digitalWrite(lamppin[index],<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt;= <span class="number">3</span>; index++) &#123;</span><br><span class="line">        pinMode(anode[index], OUTPUT);</span><br><span class="line">        digitalWrite(anode[index], <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt;= <span class="number">16</span>; index++) &#123;</span><br><span class="line">        pinMode(segment[index], OUTPUT);</span><br><span class="line">        digitalWrite(segment[index], <span class="number">1</span>);</span><br><span class="line">    &#125; </span><br><span class="line">    pinMode(led1, OUTPUT);</span><br><span class="line">    pinMode(led2, OUTPUT);</span><br><span class="line">    pinMode(led3, OUTPUT);</span><br><span class="line">    pinMode(led4, OUTPUT);</span><br><span class="line">    pinMode(led5, OUTPUT);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Serial.begin(9600);</span></span><br><span class="line"><span class="comment">// Initialize all 4 pusbutton pins as Input   </span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt;= <span class="number">3</span>; index++) &#123;</span><br><span class="line">        pinMode(inpin[index], INPUT);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// Keyboard debounce &amp; test for new key pressed </span></span><br><span class="line">    time = millis();</span><br><span class="line">    <span class="keyword">if</span> (time &gt; otime + <span class="number">500</span>) keyval = readkbde();</span><br><span class="line">    <span class="keyword">if</span> ((keyval == <span class="number">45</span>) &amp;&amp; (windex == <span class="number">1</span>)) modeselect();</span><br><span class="line"><span class="comment">// The whole Enigma machine operation revolves around which Operating Mode is current </span></span><br><span class="line">    <span class="keyword">if</span> (mode == <span class="number">0</span>) mode0();</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (mode == <span class="number">1</span>) mode1();</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (mode == <span class="number">2</span>) mode2();</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (mode == <span class="number">3</span>) mode3();</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (mode == <span class="number">4</span>) mode4();</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (mode == <span class="number">5</span>) mode5();</span><br><span class="line">    <span class="keyword">else</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Serial.println(keyval); // for debuging prints keybord value to serial monitor// for run or del</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// This function takes care of figuring out which key has been pressed &amp; returns a unique Integer</span></span><br><span class="line"><span class="keyword">int</span> readkbde() &#123;</span><br><span class="line">    <span class="keyword">int</span> kval = <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt;= <span class="number">3</span>; index++) &#123;</span><br><span class="line">        inval[index] = analogRead(inpin[index]);</span><br><span class="line">    &#125; <span class="comment">//Reads analog input values</span></span><br><span class="line">    <span class="keyword">if</span> ((inval[<span class="number">0</span>] &gt; <span class="number">925</span>) &amp;&amp; (inval[<span class="number">1</span>] &gt; <span class="number">828</span>) &amp;&amp; (inval[<span class="number">2</span>] &gt; <span class="number">730</span>) &amp;&amp; (inval[<span class="number">3</span>] &gt; <span class="number">828</span>)) kval = <span class="number">100</span>; <span class="comment">// no key press</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((inval[<span class="number">0</span>] &lt; <span class="number">924</span>) &amp;&amp; (inval[<span class="number">0</span>] &gt; <span class="number">915</span>)) kval = <span class="number">49</span>; <span class="comment">//up arrow 4</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((inval[<span class="number">0</span>] &lt; <span class="number">914</span>) &amp;&amp; (inval[<span class="number">0</span>] &gt; <span class="number">903</span>)) kval = <span class="number">48</span>; <span class="comment">//up arrow 3</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((inval[<span class="number">0</span>] &lt; <span class="number">902</span>) &amp;&amp; (inval[<span class="number">0</span>] &gt; <span class="number">887</span>)) kval = <span class="number">47</span>; <span class="comment">//up arrow 2</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((inval[<span class="number">0</span>] &lt; <span class="number">886</span>) &amp;&amp; (inval[<span class="number">0</span>] &gt; <span class="number">865</span>)) kval = <span class="number">46</span>; <span class="comment">//up arrow 1</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((inval[<span class="number">0</span>] &lt; <span class="number">864</span>) &amp;&amp; (inval[<span class="number">0</span>] &gt; <span class="number">836</span>)) kval = <span class="number">45</span>; <span class="comment">//mode</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((inval[<span class="number">0</span>] &lt; <span class="number">834</span>) &amp;&amp; (inval[<span class="number">0</span>] &gt; <span class="number">793</span>)) kval = <span class="number">44</span>; <span class="comment">//enter</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((inval[<span class="number">0</span>] &lt; <span class="number">792</span>) &amp;&amp; (inval[<span class="number">0</span>] &gt; <span class="number">724</span>)) kval = <span class="number">43</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((inval[<span class="number">0</span>] &lt; <span class="number">723</span>) &amp;&amp; (inval[<span class="number">0</span>] &gt; <span class="number">594</span>)) kval = <span class="number">42</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((inval[<span class="number">0</span>] &lt; <span class="number">593</span>) &amp;&amp; (inval[<span class="number">0</span>] &gt; <span class="number">260</span>)) kval = <span class="number">41</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (inval[<span class="number">0</span>] &lt; <span class="number">259</span>) kval = <span class="number">40</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((inval[<span class="number">1</span>] &lt; <span class="number">827</span>) &amp;&amp; (inval[<span class="number">1</span>] &gt; <span class="number">807</span>)) kval = <span class="number">14</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((inval[<span class="number">1</span>] &lt; <span class="number">806</span>) &amp;&amp; (inval[<span class="number">1</span>] &gt; <span class="number">781</span>)) kval = <span class="number">8</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((inval[<span class="number">1</span>] &lt; <span class="number">780</span>) &amp;&amp; (inval[<span class="number">1</span>] &gt; <span class="number">749</span>)) kval = <span class="number">20</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((inval[<span class="number">1</span>] &lt; <span class="number">748</span>) &amp;&amp; (inval[<span class="number">1</span>] &gt; <span class="number">706</span>)) kval = <span class="number">25</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((inval[<span class="number">1</span>] &lt; <span class="number">705</span>) &amp;&amp; (inval[<span class="number">1</span>] &gt; <span class="number">647</span>)) kval = <span class="number">19</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((inval[<span class="number">1</span>] &lt; <span class="number">646</span>) &amp;&amp; (inval[<span class="number">1</span>] &gt; <span class="number">555</span>)) kval = <span class="number">17</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((inval[<span class="number">1</span>] &lt; <span class="number">554</span>) &amp;&amp; (inval[<span class="number">1</span>] &gt; <span class="number">418</span>)) kval = <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((inval[<span class="number">1</span>] &lt; <span class="number">417</span>) &amp;&amp; (inval[<span class="number">1</span>] &gt; <span class="number">169</span>)) kval = <span class="number">22</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (inval[<span class="number">1</span>] &lt; <span class="number">168</span>) kval = <span class="number">16</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((inval[<span class="number">2</span>] &lt; <span class="number">729</span>) &amp;&amp; (inval[<span class="number">2</span>] &gt; <span class="number">699</span>)) kval = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((inval[<span class="number">2</span>] &lt; <span class="number">698</span>) &amp;&amp; (inval[<span class="number">2</span>] &gt; <span class="number">660</span>)) kval = <span class="number">9</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((inval[<span class="number">2</span>] &lt; <span class="number">659</span>) &amp;&amp; (inval[<span class="number">2</span>] &gt; <span class="number">611</span>)) kval = <span class="number">7</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((inval[<span class="number">2</span>] &lt; <span class="number">610</span>) &amp;&amp; (inval[<span class="number">2</span>] &gt; <span class="number">547</span>)) kval = <span class="number">6</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((inval[<span class="number">2</span>] &lt; <span class="number">546</span>) &amp;&amp; (inval[<span class="number">2</span>] &gt; <span class="number">455</span>)) kval = <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((inval[<span class="number">2</span>] &lt; <span class="number">454</span>) &amp;&amp; (inval[<span class="number">2</span>] &gt; <span class="number">331</span>)) kval = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((inval[<span class="number">2</span>] &lt; <span class="number">330</span>) &amp;&amp; (inval[<span class="number">2</span>] &gt; <span class="number">127</span>)) kval = <span class="number">18</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (inval[<span class="number">2</span>] &lt; <span class="number">126</span>) kval = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((inval[<span class="number">3</span>] &lt; <span class="number">827</span>) &amp;&amp; (inval[<span class="number">3</span>] &gt; <span class="number">807</span>)) kval = <span class="number">11</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((inval[<span class="number">3</span>] &lt; <span class="number">806</span>) &amp;&amp; (inval[<span class="number">3</span>] &gt; <span class="number">781</span>)) kval = <span class="number">12</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((inval[<span class="number">3</span>] &lt; <span class="number">780</span>) &amp;&amp; (inval[<span class="number">3</span>] &gt; <span class="number">749</span>)) kval = <span class="number">13</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((inval[<span class="number">3</span>] &lt; <span class="number">748</span>) &amp;&amp; (inval[<span class="number">3</span>] &gt; <span class="number">706</span>)) kval = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((inval[<span class="number">3</span>] &lt; <span class="number">705</span>) &amp;&amp; (inval[<span class="number">3</span>] &gt; <span class="number">647</span>)) kval = <span class="number">21</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((inval[<span class="number">3</span>] &lt; <span class="number">646</span>) &amp;&amp; (inval[<span class="number">3</span>] &gt; <span class="number">555</span>)) kval = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((inval[<span class="number">3</span>] &lt; <span class="number">554</span>) &amp;&amp; (inval[<span class="number">3</span>] &gt; <span class="number">418</span>)) kval = <span class="number">23</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ((inval[<span class="number">3</span>] &lt; <span class="number">417</span>) &amp;&amp; (inval[<span class="number">3</span>] &gt; <span class="number">169</span>)) kval = <span class="number">24</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (inval[<span class="number">3</span>] &lt; <span class="number">169</span>) kval = <span class="number">15</span>;</span><br><span class="line">    <span class="keyword">else</span> kval = <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">if</span> (kval &lt; <span class="number">99</span>) otime = millis(); <span class="comment">// Starts key debounce timer</span></span><br><span class="line">    <span class="keyword">if</span> ((kval &gt;= <span class="number">0</span>) &amp;&amp; (kval &lt;= <span class="number">99</span>)) windex = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// windex showing true (1) indicates the return of a fresh key stroke</span></span><br><span class="line">    <span class="keyword">return</span> kval;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Function to change operating Mode</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modeselect</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    mode++;</span><br><span class="line">    <span class="keyword">if</span> (mode &gt;= <span class="number">6</span>) mode = <span class="number">0</span>;</span><br><span class="line">    windex = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Default Mode: Enigma is a Typewriter</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mode0</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ((keyval &gt;= <span class="number">0</span>) &amp;&amp; (keyval &lt;= <span class="number">25</span>)) lampval = keyval;</span><br><span class="line">    lampita();</span><br><span class="line">    marquee();</span><br><span class="line">    lampitb();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Select the Rotors &amp; the Reflector </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mode1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> index;</span><br><span class="line">    digitalWrite(led1, HIGH);</span><br><span class="line">    <span class="keyword">if</span> (windex == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((keyval == <span class="number">43</span>) || (keyval == <span class="number">46</span>)) &#123;</span><br><span class="line">            reflect[<span class="number">0</span>]++;</span><br><span class="line">            <span class="keyword">if</span> (reflect[<span class="number">0</span>] &gt; <span class="number">2</span>) &#123;</span><br><span class="line">                reflect[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            windex = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (windex == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (keyval == <span class="number">47</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (index = wheel[<span class="number">2</span>][<span class="number">0</span>]; (index == wheel[<span class="number">1</span>][<span class="number">0</span>]) || (index == wheel[<span class="number">0</span>][<span class="number">0</span>]) || (index == wheel[<span class="number">2</span>][<span class="number">0</span>]); index++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (index &gt; <span class="number">33</span>) index = <span class="number">26</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            wheel[<span class="number">2</span>][<span class="number">0</span>] = index;</span><br><span class="line">            windex = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (windex == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (keyval == <span class="number">48</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (index = wheel[<span class="number">1</span>][<span class="number">0</span>]; (index == wheel[<span class="number">2</span>][<span class="number">0</span>]) || (index == wheel[<span class="number">0</span>][<span class="number">0</span>]) || (index == wheel[<span class="number">1</span>][<span class="number">0</span>]); index++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (index &gt; <span class="number">33</span>) index = <span class="number">26</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            wheel[<span class="number">1</span>][<span class="number">0</span>] = index;</span><br><span class="line">            windex = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (windex == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (keyval == <span class="number">49</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (index = wheel[<span class="number">0</span>][<span class="number">0</span>]; (index == wheel[<span class="number">2</span>][<span class="number">0</span>]) || (index == wheel[<span class="number">1</span>][<span class="number">0</span>]) || (index == wheel[<span class="number">0</span>][<span class="number">0</span>]); index++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (index &gt; <span class="number">33</span>) index = <span class="number">26</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            wheel[<span class="number">0</span>][<span class="number">0</span>] = index;</span><br><span class="line">            windex = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (windex == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (keyval == <span class="number">42</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (index = wheel[<span class="number">2</span>][<span class="number">0</span>]; (index == wheel[<span class="number">1</span>][<span class="number">0</span>]) || (index == wheel[<span class="number">0</span>][<span class="number">0</span>]) || (index == wheel[<span class="number">2</span>][<span class="number">0</span>]); index--) &#123;</span><br><span class="line">                <span class="keyword">if</span> (index &lt; <span class="number">28</span>) index = <span class="number">35</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            wheel[<span class="number">2</span>][<span class="number">0</span>] = index;</span><br><span class="line">            windex = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (windex == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (keyval == <span class="number">41</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (index = wheel[<span class="number">1</span>][<span class="number">0</span>]; (index == wheel[<span class="number">2</span>][<span class="number">0</span>]) || (index == wheel[<span class="number">0</span>][<span class="number">0</span>]) || (index == wheel[<span class="number">1</span>][<span class="number">0</span>]); index--) &#123;</span><br><span class="line">                <span class="keyword">if</span> (index &lt; <span class="number">28</span>) index = <span class="number">35</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            wheel[<span class="number">1</span>][<span class="number">0</span>] = index;</span><br><span class="line">            windex = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (windex == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (keyval == <span class="number">40</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (index = wheel[<span class="number">0</span>][<span class="number">0</span>]; (index == wheel[<span class="number">2</span>][<span class="number">0</span>]) || (index == wheel[<span class="number">1</span>][<span class="number">0</span>]) || (index == wheel[<span class="number">0</span>][<span class="number">0</span>]); index--) &#123;</span><br><span class="line">                <span class="keyword">if</span> (index &lt; <span class="number">28</span>) index = <span class="number">35</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            wheel[<span class="number">0</span>][<span class="number">0</span>] = index;</span><br><span class="line">            windex = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    dig1 = reflect[<span class="number">0</span>]; dig2 = wheel[<span class="number">2</span>][<span class="number">0</span>];  dig3 = wheel[<span class="number">1</span>][<span class="number">0</span>]; dig4 = wheel[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">    nixisend();</span><br><span class="line">    dig1 = <span class="number">37</span>; dig2 = <span class="number">37</span>; dig3 = <span class="number">37</span>; dig4 = <span class="number">37</span>;</span><br><span class="line">    digitalWrite(led1, LOW);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Position the Inner setting of each Rotor </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mode2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    digitalWrite(led2, HIGH);</span><br><span class="line">    <span class="keyword">if</span> (windex == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (keyval == <span class="number">47</span>) &#123; wheel[<span class="number">2</span>][<span class="number">1</span>]++; <span class="keyword">if</span> (wheel[<span class="number">2</span>][<span class="number">1</span>] &gt; <span class="number">25</span>) wheel[<span class="number">2</span>][<span class="number">1</span>] = <span class="number">0</span>; &#125;</span><br><span class="line">        <span class="keyword">if</span> (keyval == <span class="number">48</span>) &#123; wheel[<span class="number">1</span>][<span class="number">1</span>]++; <span class="keyword">if</span> (wheel[<span class="number">1</span>][<span class="number">1</span>] &gt; <span class="number">25</span>) wheel[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">0</span>; &#125;</span><br><span class="line">        <span class="keyword">if</span> (keyval == <span class="number">49</span>) &#123; wheel[<span class="number">0</span>][<span class="number">1</span>]++; <span class="keyword">if</span> (wheel[<span class="number">0</span>][<span class="number">1</span>] &gt; <span class="number">25</span>) wheel[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">0</span>; &#125;</span><br><span class="line">        <span class="keyword">if</span> (keyval == <span class="number">42</span>) &#123; wheel[<span class="number">2</span>][<span class="number">1</span>]--; <span class="keyword">if</span> (wheel[<span class="number">2</span>][<span class="number">1</span>] &lt; <span class="number">0</span>) wheel[<span class="number">2</span>][<span class="number">1</span>] = <span class="number">25</span>; &#125;</span><br><span class="line">        <span class="keyword">if</span> (keyval == <span class="number">41</span>) &#123; wheel[<span class="number">1</span>][<span class="number">1</span>]--; <span class="keyword">if</span> (wheel[<span class="number">1</span>][<span class="number">1</span>] &lt; <span class="number">0</span>) wheel[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">25</span>; &#125;</span><br><span class="line">        <span class="keyword">if</span> (keyval == <span class="number">40</span>) &#123; wheel[<span class="number">0</span>][<span class="number">1</span>]--; <span class="keyword">if</span> (wheel[<span class="number">0</span>][<span class="number">1</span>] &lt; <span class="number">0</span>) wheel[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">25</span>; &#125;</span><br><span class="line">        windex = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    dig2 = wheel[<span class="number">2</span>][<span class="number">1</span>]; dig3 = wheel[<span class="number">1</span>][<span class="number">1</span>]; dig4 = wheel[<span class="number">0</span>][<span class="number">1</span>]; dig1 = <span class="number">0</span>;</span><br><span class="line">    nixisend();</span><br><span class="line">    dig1 = <span class="number">37</span>; dig2 = <span class="number">37</span>; dig3 = <span class="number">37</span>; dig4 = <span class="number">37</span>;</span><br><span class="line">    digitalWrite(led2, LOW);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Position the Start character of each Wheel </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mode3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    digitalWrite(led3, HIGH);</span><br><span class="line">    <span class="keyword">if</span> (windex == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (keyval == <span class="number">46</span>) &#123; reflect[<span class="number">1</span>]++; <span class="keyword">if</span> (reflect[<span class="number">1</span>] &gt; <span class="number">25</span>) reflect[<span class="number">1</span>] = <span class="number">0</span>; &#125;</span><br><span class="line">        <span class="keyword">if</span> (keyval == <span class="number">47</span>) &#123; wheel[<span class="number">2</span>][<span class="number">2</span>]++; <span class="keyword">if</span> (wheel[<span class="number">2</span>][<span class="number">2</span>] &gt; <span class="number">25</span>) wheel[<span class="number">2</span>][<span class="number">2</span>] = <span class="number">0</span>; &#125;</span><br><span class="line">        <span class="keyword">if</span> (keyval == <span class="number">48</span>) &#123; wheel[<span class="number">1</span>][<span class="number">2</span>]++; <span class="keyword">if</span> (wheel[<span class="number">1</span>][<span class="number">2</span>] &gt; <span class="number">25</span>) wheel[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">0</span>; &#125;</span><br><span class="line">        <span class="keyword">if</span> (keyval == <span class="number">49</span>) &#123; wheel[<span class="number">0</span>][<span class="number">2</span>]++; <span class="keyword">if</span> (wheel[<span class="number">0</span>][<span class="number">2</span>] &gt; <span class="number">25</span>) wheel[<span class="number">0</span>][<span class="number">2</span>] = <span class="number">0</span>; &#125;</span><br><span class="line">        <span class="keyword">if</span> (keyval == <span class="number">43</span>) &#123; reflect[<span class="number">1</span>]--; <span class="keyword">if</span> (reflect[<span class="number">1</span>] &lt; <span class="number">0</span>) reflect[<span class="number">1</span>] = <span class="number">25</span>; &#125;</span><br><span class="line">        <span class="keyword">if</span> (keyval == <span class="number">42</span>) &#123; wheel[<span class="number">2</span>][<span class="number">2</span>]--; <span class="keyword">if</span> (wheel[<span class="number">2</span>][<span class="number">2</span>] &lt; <span class="number">0</span>) wheel[<span class="number">2</span>][<span class="number">2</span>] = <span class="number">25</span>; &#125;</span><br><span class="line">        <span class="keyword">if</span> (keyval == <span class="number">41</span>) &#123; wheel[<span class="number">1</span>][<span class="number">2</span>]--; <span class="keyword">if</span> (wheel[<span class="number">1</span>][<span class="number">2</span>] &lt; <span class="number">0</span>) wheel[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">25</span>; &#125;</span><br><span class="line">        <span class="keyword">if</span> (keyval == <span class="number">40</span>) &#123; wheel[<span class="number">0</span>][<span class="number">2</span>]--; <span class="keyword">if</span> (wheel[<span class="number">0</span>][<span class="number">2</span>] &lt; <span class="number">0</span>) wheel[<span class="number">0</span>][<span class="number">2</span>] = <span class="number">25</span>; &#125;</span><br><span class="line">        windex = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    dig1 = reflect[<span class="number">1</span>]; dig2 = wheel[<span class="number">2</span>][<span class="number">2</span>]; dig3 = wheel[<span class="number">1</span>][<span class="number">2</span>]; dig4 = wheel[<span class="number">0</span>][<span class="number">2</span>];</span><br><span class="line">    nixisend();</span><br><span class="line">    dig1 = <span class="number">37</span>; dig2 = <span class="number">37</span>; dig3 = <span class="number">37</span>; dig4 = <span class="number">37</span>;</span><br><span class="line">    digitalWrite(led3, LOW);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Define the Plugboard pairs </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mode4</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">    digitalWrite(led4, HIGH);</span><br><span class="line">    <span class="keyword">if</span> (pluguse &lt;= <span class="number">9</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (plugval[<span class="number">0</span>][paindex] == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (index = paindex;(index == paindex) || (index == pbindex) || (plugval[<span class="number">0</span>][index] == <span class="number">1</span>); index++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (index &gt; <span class="number">24</span>) index = <span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            paindex = index;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (plugval[<span class="number">0</span>][pbindex] == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (index = pbindex;(index == pbindex) || (index == paindex) || (plugval[<span class="number">0</span>][index] == <span class="number">1</span>); index++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (index &gt; <span class="number">24</span>) index = <span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            pbindex = index;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (windex == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (keyval == <span class="number">46</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (index = paindex;(index == paindex) || (index == pbindex) || (plugval[<span class="number">0</span>][index] == <span class="number">1</span>); index++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (index &gt; <span class="number">24</span>) index = <span class="number">-1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                paindex = index;</span><br><span class="line">                windex = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (keyval == <span class="number">43</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (index = paindex;(index == paindex) || (index == pbindex) || (plugval[<span class="number">0</span>][index] == <span class="number">1</span>); index--) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (index &lt; <span class="number">1</span>) index = <span class="number">26</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                paindex = index;</span><br><span class="line">                windex = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (keyval == <span class="number">49</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (index = pbindex;(index == pbindex) || (index == paindex) || (plugval[<span class="number">0</span>][index] == <span class="number">1</span>); index++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (index &gt; <span class="number">24</span>) index = <span class="number">-1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                pbindex = index;</span><br><span class="line">                windex = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (keyval == <span class="number">40</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (index = pbindex;(index == pbindex) || (index == paindex) || (plugval[<span class="number">0</span>][index] == <span class="number">1</span>); index--) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (index &lt; <span class="number">1</span>) index = <span class="number">26</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                pbindex = index;</span><br><span class="line">                windex = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (keyval == <span class="number">44</span>) &#123;</span><br><span class="line">                plugval[<span class="number">0</span>][paindex] = <span class="number">1</span>;</span><br><span class="line">                plugval[<span class="number">1</span>][paindex] = pbindex;</span><br><span class="line">                plugval[<span class="number">0</span>][pbindex] = <span class="number">1</span>;</span><br><span class="line">                plugval[<span class="number">1</span>][pbindex] = paindex;</span><br><span class="line">                windex = <span class="number">0</span>;</span><br><span class="line">                pluguse++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        dig1 = paindex; dig2 = <span class="number">19</span>; dig3 = <span class="number">14</span>; dig4 = pbindex;</span><br><span class="line">        nixisend();</span><br><span class="line">        dig1 = <span class="number">37</span>; dig2 = <span class="number">37</span>; dig3 = <span class="number">37</span>; dig4 = <span class="number">37</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> done();</span><br><span class="line">    digitalWrite(led4, LOW);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// This is Normal Operation Mode to Encrypt/Decrypt </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mode5</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> pv = <span class="number">0</span>;</span><br><span class="line">    digitalWrite(led5, HIGH);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((keyval &gt;= <span class="number">0</span>) &amp;&amp; (keyval &lt;= <span class="number">25</span>) &amp;&amp; (windex == <span class="number">1</span>)) &#123;</span><br><span class="line">        procesvala = keyval;</span><br><span class="line">        indexwheels();</span><br><span class="line">    &#125;</span><br><span class="line">    windex = <span class="number">0</span>;</span><br><span class="line">    procesval = procesvala;</span><br><span class="line">    procesval = plugval[<span class="number">1</span>][procesval];</span><br><span class="line">    <span class="comment">//Serial.print(procesval); Serial.print("   ");</span></span><br><span class="line"></span><br><span class="line">    pv = procesval + (wheel[<span class="number">0</span>][<span class="number">2</span>] - wheel[<span class="number">0</span>][<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">if</span> (pv &lt; <span class="number">0</span>) pv += <span class="number">26</span>; </span><br><span class="line">    procesval = rotorvals[wheel[<span class="number">0</span>][<span class="number">0</span>] - <span class="number">27</span>][pv];</span><br><span class="line">    <span class="keyword">if</span> (procesval &gt;= <span class="number">100</span>) procesval -= <span class="number">100</span>;</span><br><span class="line">    procesval = (procesval - (wheel[<span class="number">0</span>][<span class="number">2</span>] - wheel[<span class="number">0</span>][<span class="number">1</span>]));</span><br><span class="line">    <span class="keyword">if</span> (procesval &lt; <span class="number">0</span>) procesval += <span class="number">26</span>;</span><br><span class="line">    <span class="keyword">if</span> (procesval &gt; <span class="number">25</span>) procesval -= <span class="number">26</span>;</span><br><span class="line">    <span class="comment">//Serial.print(procesval); Serial.print("   ");</span></span><br><span class="line"></span><br><span class="line">    pv = procesval + (wheel[<span class="number">1</span>][<span class="number">2</span>] - wheel[<span class="number">1</span>][<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">if</span> (pv &lt; <span class="number">0</span>) pv += pv + <span class="number">26</span>;</span><br><span class="line">    procesval = rotorvals[wheel[<span class="number">1</span>][<span class="number">0</span>] - <span class="number">27</span>][pv];</span><br><span class="line">    <span class="keyword">if</span> (procesval &gt;= <span class="number">100</span>) procesval -= <span class="number">100</span>;</span><br><span class="line">    procesval = (procesval - (wheel[<span class="number">1</span>][<span class="number">2</span>] - wheel[<span class="number">1</span>][<span class="number">1</span>]));</span><br><span class="line">    <span class="keyword">if</span> (procesval &lt; <span class="number">0</span>) procesval += <span class="number">26</span>;</span><br><span class="line">    <span class="keyword">if</span> (procesval &gt; <span class="number">25</span>) procesval -= <span class="number">26</span>;</span><br><span class="line">    <span class="comment">//Serial.print(procesval); Serial.print("   ");</span></span><br><span class="line"></span><br><span class="line">    pv = procesval + (wheel[<span class="number">2</span>][<span class="number">2</span>] - wheel[<span class="number">2</span>][<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">if</span> (pv &lt; <span class="number">0</span>) pv += <span class="number">26</span>;</span><br><span class="line">    procesval = rotorvals[wheel[<span class="number">2</span>][<span class="number">0</span>] - <span class="number">27</span>][pv];</span><br><span class="line">    <span class="keyword">if</span> (procesval &gt;= <span class="number">100</span>) procesval -= <span class="number">100</span>;</span><br><span class="line">    procesval = (procesval - (wheel[<span class="number">2</span>][<span class="number">2</span>] - wheel[<span class="number">2</span>][<span class="number">1</span>]));</span><br><span class="line">    <span class="keyword">if</span> (procesval &lt; <span class="number">0</span>) procesval += <span class="number">26</span>;</span><br><span class="line">    <span class="keyword">if</span> (procesval &gt; <span class="number">25</span>) procesval -= <span class="number">26</span>;</span><br><span class="line">    <span class="comment">//Serial.print(procesval); Serial.print("   ");</span></span><br><span class="line"></span><br><span class="line">    pv = procesval;</span><br><span class="line">    procesval = rotorvals[reflect[<span class="number">0</span>] + <span class="number">7</span>][pv];</span><br><span class="line">    <span class="keyword">if</span> (procesval &gt;= <span class="number">100</span>) procesval -= <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">if</span> (procesval &lt; <span class="number">0</span>) procesval += <span class="number">26</span>;</span><br><span class="line">    <span class="keyword">if</span> (procesval &gt; <span class="number">25</span>) procesval -= <span class="number">26</span>;</span><br><span class="line">    <span class="comment">//Serial.print(procesval); Serial.print("   ");</span></span><br><span class="line"></span><br><span class="line">    procesval = rotorvals[reflect[<span class="number">0</span>] + <span class="number">9</span>][procesval];</span><br><span class="line">    <span class="comment">//Serial.print(procesval); Serial.print("   ");</span></span><br><span class="line"></span><br><span class="line">    pv = procesval + <span class="number">26</span>;</span><br><span class="line">    procesval = rotorvali[reflect[<span class="number">0</span>] + <span class="number">7</span>][pv];</span><br><span class="line">    <span class="keyword">if</span> (procesval &gt;= <span class="number">100</span>) procesval -= <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">if</span> (procesval &lt; <span class="number">0</span>) procesval += <span class="number">26</span>;</span><br><span class="line">    <span class="keyword">if</span> (procesval &gt; <span class="number">25</span>) procesval -= <span class="number">26</span>;</span><br><span class="line">    <span class="comment">//Serial.print(procesval); Serial.print("   ");</span></span><br><span class="line"></span><br><span class="line">    pv = procesval + (wheel[<span class="number">2</span>][<span class="number">2</span>] - wheel[<span class="number">2</span>][<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">if</span> (pv &lt; <span class="number">0</span>) pv += <span class="number">26</span>;</span><br><span class="line">    procesval = rotorvali[wheel[<span class="number">2</span>][<span class="number">0</span>] - <span class="number">27</span>][pv];</span><br><span class="line">    <span class="keyword">if</span> (procesval &gt;= <span class="number">100</span>) procesval -= <span class="number">100</span>;</span><br><span class="line">    procesval = (procesval - (wheel[<span class="number">2</span>][<span class="number">2</span>] - wheel[<span class="number">2</span>][<span class="number">1</span>]));</span><br><span class="line">    <span class="keyword">if</span> (procesval &lt; <span class="number">0</span>) procesval += <span class="number">26</span>;</span><br><span class="line">    <span class="keyword">if</span> (procesval &gt; <span class="number">25</span>) procesval -= <span class="number">26</span>;</span><br><span class="line">    <span class="comment">//Serial.print(procesval); Serial.print("   ");</span></span><br><span class="line"></span><br><span class="line">    pv = procesval + (wheel[<span class="number">1</span>][<span class="number">2</span>] - wheel[<span class="number">1</span>][<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">if</span> (pv &lt; <span class="number">0</span>) pv += <span class="number">26</span>;</span><br><span class="line">    procesval = rotorvali[wheel[<span class="number">1</span>][<span class="number">0</span>] - <span class="number">27</span>][pv];</span><br><span class="line">    <span class="keyword">if</span> (procesval &gt;= <span class="number">100</span>) procesval -= <span class="number">100</span>;</span><br><span class="line">    procesval = (procesval - (wheel[<span class="number">1</span>][<span class="number">2</span>] - wheel[<span class="number">1</span>][<span class="number">1</span>]));</span><br><span class="line">    <span class="keyword">if</span> (procesval &lt; <span class="number">0</span>) procesval += <span class="number">26</span>;</span><br><span class="line">    <span class="keyword">if</span> (procesval &gt; <span class="number">25</span>) procesval -= <span class="number">26</span>;</span><br><span class="line">    <span class="comment">//Serial.print(procesval); Serial.print("   ");</span></span><br><span class="line"></span><br><span class="line">    pv = procesval + (wheel[<span class="number">0</span>][<span class="number">2</span>] - wheel[<span class="number">0</span>][<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">if</span> (pv &lt; <span class="number">0</span>) pv += <span class="number">26</span>;</span><br><span class="line">    procesval = rotorvali[wheel[<span class="number">0</span>][<span class="number">0</span>] - <span class="number">27</span>][pv];</span><br><span class="line">    <span class="keyword">if</span> (procesval &gt;= <span class="number">100</span>) procesval -= <span class="number">100</span>;</span><br><span class="line">    procesval = (procesval - (wheel[<span class="number">0</span>][<span class="number">2</span>] - wheel[<span class="number">0</span>][<span class="number">1</span>]));</span><br><span class="line">    <span class="keyword">if</span> (procesval &lt; <span class="number">0</span>) procesval += <span class="number">26</span>;</span><br><span class="line">    <span class="keyword">if</span> (procesval &gt; <span class="number">25</span>) procesval -= <span class="number">26</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Serial.print(procesval); Serial.print("   ");</span></span><br><span class="line">    procesval = plugval[<span class="number">1</span>][procesval];</span><br><span class="line"></span><br><span class="line">    lampval = procesval;</span><br><span class="line">    <span class="comment">//Serial.println(lampval);</span></span><br><span class="line">    dig1 = reflect[<span class="number">1</span>]; dig2 = wheel[<span class="number">2</span>][<span class="number">2</span>]; dig3 = wheel[<span class="number">1</span>][<span class="number">2</span>]; dig4 = wheel[<span class="number">0</span>][<span class="number">2</span>];</span><br><span class="line">    lampita();</span><br><span class="line">    nixisend();</span><br><span class="line">    lampitb();</span><br><span class="line">    dig1 = <span class="number">37</span>; dig2 = <span class="number">37</span>; dig3 = <span class="number">37</span>; dig4 = <span class="number">37</span>;</span><br><span class="line">    digitalWrite(led5, LOW);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Helper Function to light the proper key</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lampita</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    digitalWrite(lamparray[lampval][<span class="number">0</span>], <span class="number">0</span>);</span><br><span class="line">    digitalWrite(lamparray[lampval][<span class="number">1</span>], <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lampitb</span><span class="params">()</span></span>&#123;</span><br><span class="line">    digitalWrite(lamparray[lampval][<span class="number">0</span>], <span class="number">1</span>);</span><br><span class="line">    digitalWrite(lamparray[lampval][<span class="number">1</span>], <span class="number">1</span>); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Help Function to illuminate "Nixies"</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">nixisend</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    sixteenSegWrite(<span class="number">0</span>, dig1);</span><br><span class="line">    sixteenSegWrite(<span class="number">1</span>, dig2);</span><br><span class="line">    sixteenSegWrite(<span class="number">2</span>, dig3);</span><br><span class="line">    sixteenSegWrite(<span class="number">3</span>, dig4);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">marquee</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    time = millis();</span><br><span class="line">    <span class="keyword">if</span> (mtime &lt; time) &#123;</span><br><span class="line">        mtime = time + <span class="number">400</span>;</span><br><span class="line">        mdex++;</span><br><span class="line">    &#125;</span><br><span class="line">    dig1 = data[mdex];</span><br><span class="line">    dig2 = data[mdex + <span class="number">1</span>];</span><br><span class="line">    dig3 = data[mdex + <span class="number">2</span>];</span><br><span class="line">    dig4 = data[mdex + <span class="number">3</span>];</span><br><span class="line">    <span class="keyword">if</span> (mdex &gt;= <span class="number">31</span>) mdex = <span class="number">0</span>;</span><br><span class="line">    nixisend();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Function that actually turns on each of 17 appropriate segments on each "Nixie"</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sixteenSegWrite</span><span class="params">(<span class="keyword">int</span> digit, <span class="keyword">int</span> character)</span> </span>&#123;</span><br><span class="line">    digitalWrite(anode[digit],<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; <span class="number">17</span>; index++) &#123;</span><br><span class="line">        digitalWrite(segment[index], segmentvals[character][index]);</span><br><span class="line">    &#125;</span><br><span class="line">    delay(<span class="number">7</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt;= <span class="number">16</span>; index++) &#123;</span><br><span class="line">        digitalWrite(segment[index], <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    digitalWrite(anode[digit], <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">done</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    dig1 = <span class="number">3</span>; dig2 = <span class="number">14</span>; dig3 = <span class="number">13</span>; dig4 = <span class="number">4</span>;</span><br><span class="line">    nixisend();</span><br><span class="line">    dig1 = <span class="number">37</span>; dig2 = <span class="number">37</span>; dig3 = <span class="number">37</span>; dig4 = <span class="number">37</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">indexwheels</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//Serial.print(rotorvals[wheel[0][0]-27][wheel[0][2]]);</span></span><br><span class="line">    <span class="comment">//Serial.print("    "); Serial.print(wheel[0][0]-27); Serial.print("    "); Serial.println(wheel[0][2]);</span></span><br><span class="line">    <span class="keyword">if</span> (rotorvals[wheel[<span class="number">0</span>][<span class="number">0</span>] - <span class="number">27</span>][wheel[<span class="number">0</span>][<span class="number">2</span>]] &gt;= <span class="number">100</span>) windex1 = <span class="number">1</span>;</span><br><span class="line">    wheel[<span class="number">0</span>][<span class="number">2</span>]++;</span><br><span class="line">    <span class="keyword">if</span> (wheel[<span class="number">0</span>][<span class="number">2</span>] &gt; <span class="number">25</span>) wheel[<span class="number">0</span>][<span class="number">2</span>] = <span class="number">0</span>;</span><br><span class="line">    windex = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (windex1 == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (rotorvals[wheel[<span class="number">1</span>][<span class="number">0</span>] - <span class="number">27</span>][wheel[<span class="number">1</span>][<span class="number">2</span>]] &gt;= <span class="number">100</span>) windex2 = <span class="number">1</span>;</span><br><span class="line">        wheel[<span class="number">1</span>][<span class="number">2</span>]++;</span><br><span class="line">        <span class="keyword">if</span> (wheel[<span class="number">1</span>][<span class="number">2</span>] &gt; <span class="number">25</span>) wheel[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    windex1 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (windex2 == <span class="number">1</span>) &#123;</span><br><span class="line">        wheel[<span class="number">2</span>][<span class="number">2</span>]++;</span><br><span class="line">        <span class="keyword">if</span> (wheel[<span class="number">2</span>][<span class="number">2</span>] &gt; <span class="number">25</span>) wheel[<span class="number">2</span>][<span class="number">2</span>] = <span class="number">0</span>;</span><br><span class="line">        windex2 = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>IF there is enough interest, we plan on are creating a PCB that would will allow for a much easier assembly of this wonderful fully functional Enigma replica. Please visit <a href="http://www.stgeotronics.com" target="_blank" rel="noopener">http://www.stgeotronics.com</a> to find out about availability, pricing &amp; to place your order or pre-order now. The Circuit schematics are published, so the PCB has entered it’s development stage. Soon to be tested.<br>如果有足够的利润，我们将研发能够使全功能Enigma机复制品装载更为容易的印刷电路板。请登陆 <a href="http://www.stgeotronics.com" target="_blank" rel="noopener">http://www.stgeotronics.com</a> 查询商品上架与否、价格、下单或预订吧。电路图已经发布了，印刷电路也已进入开发阶段，即将内测。</p><h2 id="Step-9-Circuit-Schematics"><a href="#Step-9-Circuit-Schematics" class="headerlink" title="Step 9: Circuit Schematics"></a>Step 9: Circuit Schematics</h2><p>第九步：电路图<br><img src="/images/2018-08/FEWJUCNHMMFCNPV.LARGE.jpg" alt=""><br><img src="/images/2018-08/FFCPWADHMMF8FRX.LARGE.jpg" alt=""></p><p>In response to the popular demand, here are the two Circuit Schematics.<br>徇众要求，电路图两份在此。<br>The first one shows how our fake nixie tubes (the 4 elevated 16-Segment units) are wired in order to provide the response that the rotors provide on a real Enigma machine. They are also used in each setup mode to provide feedback on the setting up of the machine.<br>第一个是仿电子管（4个16段显示单元）如何布线，用于显示转子在Enigma机上的输出信号。同时，它们也用于每种调试模式，反馈用户机器设定信息。<br>The second one shows how each of the 26 keyboard buttons and 10 function keys, the 26 key lamps &amp; the 5 LEDS are all wired.<br>第二幅电路图显示26个字母按键及10个功能键、26个键盘灯和5个LED是如何布线的。<br>All LED resistors are 470 Ohms and all Pushbutton resistors are 1KOhm.<br>所有LED电阻都是470欧，而开关电阻则都是1千欧。<br>Stay tuned for the PCB design file…<br>印刷电路设计档仍在修正中。<br>We hope you enjoyed our first Instructable!<br>希望您享受我们第一份制作教程!<br>Thank You for your time.<br>感谢您抽出宝贵时间阅读！</p><h2 id="Step-10-Prototype-Boards"><a href="#Step-10-Prototype-Boards" class="headerlink" title="Step 10: Prototype Boards"></a>Step 10: Prototype Boards</h2><p>第十步：PCB样机版<br><img src="/images/2018-08/F7E23SFHOHYMQIY.LARGE.jpg" alt=""><br><img src="/images/2018-08/FRVNOESHOPQDW25.LARGE.jpg" alt=""></p><p>Due to popular demand, we designed &amp; ordered some Printed Circuit Boards. Well, our PCBs are finally in and at first glance, they look beautiful! We have been busy populating &amp; testing one to make sure it performs as good as it looks and more importantly, as well as our proof-of-concept device.<br>徇众要求，我们设计及定制了一些印刷电路板。它们终于面世了，如此清纯可爱！我们忙于组装，并测试其中一块样品，确保它在功能上与外观一样完美无暇。更重要的是，能实现和那台原型测试机一样的功能。<br>The boards we ordered are almost perfect: they each need a little jumper wire to fix a small design flaw. This small flaw does not affect behavior or functionality and is an easy fix.<br>订购回来的底板几乎完美，只需一点引脚线去修补设计瑕疵。而这些瑕疵对功能没有影响，修理它们是小菜一碟。<br>With this jumper in place, you can now make your own Enigma Replica much easier &amp; faster than running all wires this instructable shows. So, we are now happy to report that testing is completed &amp; the new boards work just fine!<br>有了这些引脚，你能更容易制作自己的Enigma复刻机，比起教程里的布线方便多了。我们在此很高兴宣布，测试完成，新型板一样给力！<br>We are now accepting orders at <a href="http://www.stgeotronics.com" target="_blank" rel="noopener">www.stgeotronics.com</a> &amp; have started shipping.<br>Pictures of the assembly have been added as Step 11.<br>下单订购请登陆 <a href="http://www.stgeotronics.com" target="_blank" rel="noopener">http://www.stgeotronics.com</a> ，已发货热卖中。组装图片请见第十一步。<br>Thank You for your overwhelming support &amp; wonderful feedback!<br>感谢大家的不懈支持和宝贵反馈意见！</p><h2 id="Step-11-Assembled-Kits"><a href="#Step-11-Assembled-Kits" class="headerlink" title="Step 11: Assembled Kits"></a>Step 11: Assembled Kits</h2><p>第十一步：组装完成的作品<br><img src="/images/2018-08/FGKWVNEHP8PLOCX.LARGE.jpg" alt=""><br><img src="/images/2018-08/FVGEWVMHP989E1R.LARGE.jpg" alt=""><br><img src="/images/2018-08/FMICFEUHP989E1T.LARGE.jpg" alt=""></p><p>更多图片可以前往<a href="https://www.instructables.com/id/Make-your-own-Enigma-Replica/#step11" target="_blank" rel="noopener">原文</a>查看。<br>This assembly took one evening &amp; you can look at assembly pictures above for an overview of the process.<br>花了一晚上组装完成，全过程的概览如上图所示。<br>Thank You for the support &amp; feedback!<br>感谢您的支持与反馈！</p><h2 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h2><p>博主在深入了解Enigma机后，制作了一个JavaScript版本的虚拟机，实现了几乎全部功能，可以点击下方链接前往。<br>本站的JavaScript版本：<a href="https://galaxymimi.com/app/enigma" target="_blank" rel="noopener">主站&gt;应用&gt;原创游戏&gt;Enigma</a><br>这个版本暂未针对移动端进行优化，请使用桌面端打开。<br>而原文中基于Arduino开发的实体机器，由于制作过于复杂，博主还在进行研究，看上去所有的代码都是功能正常的。</p><p>参考文章：<br><a href="https://zh.wikipedia.org/wiki/恩尼格玛密码机" target="_blank" rel="noopener">恩尼格玛密码机 - 维基百科</a><br><a href="http://web.archive.org/web/20150730050426/http://oszine.com/enigma/" target="_blank" rel="noopener">自己打造一台恩尼格码密码机</a><br><a href="https://www.bletchleypark.org.uk" target="_blank" rel="noopener">Bletchley Park</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/2018-08/F5YSP9KHMF6R1PD.LARGE.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;这篇文章翻译自：&lt;a href=&quot;https://www.instructables.com/id/Make-your-own-Enigma-Replica&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;MAKE YOUR OWN ENIGMA REPLICA&lt;/a&gt;&lt;br&gt;在对称加密学当中，恩尼格玛机绝对是承前启后的存在。它将密码学研究从以前的语言文字学中心完全转移到了数学身上。在这里牵涉的密码并不是我们平时邮箱、银行帐号那种狭义概念，那种顶多叫做口令。这里说的密码就是通过某种映射方式，把一篇文章变得面目全非，以达到保密效果；只有特定的转换规律才能将其解密。这篇文章适于电脑控、军事控、历史控、数学控阅读，请做好烧脑准备。&lt;/p&gt;
&lt;p&gt;EDIT: This Instructable has won Second prize in the 2013 Radio Shack Microcontroller Contest. Thank You to all who voted!&lt;br&gt;按：这个作品是2013年无线电单片机竞赛的亚军。感谢所有支持这个作品的你们！&lt;br&gt;EDIT2: An Open Enigma with fake Standup Nixie Tubes like the ones pictured in this Instructable will soon be available as a Special Kickstarter edition.&lt;/p&gt;
&lt;p&gt;This is our very first Instructable and this step by step guide will show you how to build a fully functional electronic replica of the world famous German Enigma machine. This Arduino based Open Source project is able to encrypt &amp;amp; decrypt any Enigma M4 encoded message.&lt;br&gt;这是我们的初号机。以下教程将手把手教你如何完美复刻史上著名的德国恩尼格玛密码机。这个基于Arduino的开源程序能够加解密任何Enigma机M4型（海军型）的信息。&lt;br&gt;This first ever fully functional Open Source Enigma “exact” Replica was inspired by the Kid’s Game to Arduino Enigma Machine by sketchsk3tch.&lt;br&gt;这个第一台全功能开源完美Enigma机复制品是根据sketchsk3tch写的《Kid’s Game to Arduino Enigma Machine（从儿童玩具到Arduino恩尼格玛机）》所作。&lt;br&gt;Using Multiplexing for the LEDs, this circuit with 115 light emitting diodes uses only 38 pins and the 36 push buttons use only 4 pins total thanks to properly placed resistors (and the P-Channel MOSFETs) in the keyboard loop. These 4 16-Segment displays &amp;amp; an LED for each keyboard button would add up quickly the total number of pins required and even the Arduino Mega would have ran out of pins without the 2 methods mentioned above….&lt;br&gt;采用多路复用LED电路，仅用38个针脚的115个发光二极管和4个针脚的36个按键所连接的整个电路，全靠在键盘回路里准确放置的电阻以及P沟道场效应晶体管得以实现。要不然，4个16段显示器，以及每个按键上的LED将大幅增加所需针脚总量——即使用了Arduino Mega板，但如果没用上述两个方法，电路也不能如此简洁。&lt;br&gt;In response to the overwhelming demand, we designed the PCB and made it available through &lt;a href=&quot;http://www.stgeotronics.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;www.stgeotronics.com&lt;/a&gt;. Skip to Step 10 &amp;amp; beyond for more info. We also offer it as a complete electronics kit &amp;amp; an assembled &amp;amp; tested complete product.&lt;br&gt;面对电路的超额需求，我们在 &lt;a href=&quot;http://www.stgeotronics.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.stgeotronics.com&lt;/a&gt; 设计了专用的PCB板。直接跳到第10步和以后的步骤可以找到更多信息。同时，我们也发布了测试过的完整电子组装套装。&lt;/p&gt;
&lt;h2 id=&quot;Step-1-Proof-of-Concept-on-Breadboard&quot;&gt;&lt;a href=&quot;#Step-1-Proof-of-Concept-on-Breadboard&quot; class=&quot;headerlink&quot; title=&quot;Step 1: Proof of Concept on Breadboard&quot;&gt;&lt;/a&gt;Step 1: Proof of Concept on Breadboard&lt;/h2&gt;&lt;p&gt;第一步：面包板上的论证&lt;br&gt;&lt;img src=&quot;/images/2018-08/F3ULXLHHMEXSREA.LARGE.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/images/2018-08/FQHGSW5HMF6R1XF.LARGE.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Before going all out on the development of this electronic Enigma replica, we wanted to make sure we could properly drive the 16 Segment LEDs. If we can do that, than we will be able to do everything as the rest is only Math…&lt;br&gt;在开始制作电子Enigma机之前，我们先要确保能驱动16段LED显示。如果成功，我们就能做接下来的所有步骤——除了数学上的问题，一切都是浮云。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="https://zhangshuqiao.org/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Arduino" scheme="https://zhangshuqiao.org/tags/Arduino/"/>
    
  </entry>
  
  <entry>
    <title>武功山游记</title>
    <link href="https://zhangshuqiao.org/2018-08/%E6%AD%A6%E5%8A%9F%E5%B1%B1%E6%B8%B8%E8%AE%B0/"/>
    <id>https://zhangshuqiao.org/2018-08/武功山游记/</id>
    <published>2018-08-01T03:06:49.000Z</published>
    <updated>2018-08-05T06:23:12.989Z</updated>
    
    <content type="html"><![CDATA[<p>在7月下旬，博主和同学前往江西萍乡的武功山露营，计划观看火星冲日、月全食等天文现象。博主携带了Canon EOS 50D相机，搭配17-40mm f/4L镜头，用以记录登山过程中的美景；还向朋友借了一个70-200mm f/2.8的长焦镜头，以备不时之需。下面就来用照片分享这次旅途的经历，每张照片的具体参数都附在后面。<br>先上三组“<a href="https://zh.moegirl.org/%E6%98%BE%E5%8D%A1%E5%AF%B9%E6%AF%94%E5%9B%BE" target="_blank" rel="noopener">AN对比图</a>”。</p><p>优胜美地国家公园 vs 武功山金顶<br><img src="/images/2018-08/Yosemite.jpg" alt=""><br><img src="/images/2018-08/IMG_5604.jpg" alt=""></p><p><em>40mm f/4.0 1/400s</em></p><p>Mac Sky壁纸 vs 日出前的云海<br><img src="/images/2018-08/Sky.jpg" alt=""><br><img src="/images/2018-08/IMG_5485.jpg" alt=""></p><p><em>19mm f/4.0 4s</em></p><a id="more"></a><p>Win XP壁纸（北加州Sonoma） vs 武功山“空中草原”<br><img src="/images/2018-08/Mascaloona-Bliss.jpg" alt=""><br><img src="/images/2018-08/IMG_5341.jpg" alt=""></p><p><em>17mm f/4.0 1/500s</em></p><p>虽然提前查看了天气预报，但天数有变，博主到达的那天下午，正看到乌云以肉眼可见的速度朝山上飘来。博主的心里凉了半截——毕竟，如果天公不作美，我们可能就要与天文奇观失之交臂了。在一场阵雨后，山上的空气湿度持续增加，入夜时营地被浓雾笼罩，颇有一种寂静岭的感觉。<br>这是阵雨后的夕阳和晚霞：<br><img src="/images/2018-08/IMG_5376.jpg" alt=""></p><p><em>40mm f/6.3 1/200s</em></p><p><img src="/images/2018-08/IMG_5389.jpg" alt=""></p><p><em>17mm f/4.0 1/30s</em></p><p>日落后的山庄：<br><img src="/images/2018-08/IMG_5443.jpg" alt=""></p><p><em>19mm f/4.0 96s</em></p><p>后半夜，浓雾逐渐散去，终于可以夜观天象啦！<br>长焦打月亮：<br><img src="/images/2018-08/IMG_5462.jpg" alt=""></p><p><em>200mm f/2.8 2.5s</em></p><p><strong>效果并不好，如果有条件请使用天文望远镜</strong></p><p>星空：<br><img src="/images/2018-08/IMG_5475.jpg" alt=""></p><p><em>17mm f/4.0 30s</em></p><p>在长时间的曝光下，可以明显地看到星空中恒星的转动轨迹。这是由于地球自转带来的周日视运动。<br>日出和朝霞也同样壮观：<br><img src="/images/2018-08/IMG_5532.jpg" alt=""></p><p><em>17mm f/7.1 1/160s</em></p><p>这次行程的遗憾便是器材仍不够强大，200mm焦距对应的放大率难以看清月球表面的更多细节；不过，在旅途中也收获了很多精彩的镜头，而博主对于B门曝光的参数控制与设置也有了更多经验，未来将会作出更多的尝试。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在7月下旬，博主和同学前往江西萍乡的武功山露营，计划观看火星冲日、月全食等天文现象。博主携带了Canon EOS 50D相机，搭配17-40mm f/4L镜头，用以记录登山过程中的美景；还向朋友借了一个70-200mm f/2.8的长焦镜头，以备不时之需。下面就来用照片分享这次旅途的经历，每张照片的具体参数都附在后面。&lt;br&gt;先上三组“&lt;a href=&quot;https://zh.moegirl.org/%E6%98%BE%E5%8D%A1%E5%AF%B9%E6%AF%94%E5%9B%BE&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;AN对比图&lt;/a&gt;”。&lt;/p&gt;
&lt;p&gt;优胜美地国家公园 vs 武功山金顶&lt;br&gt;&lt;img src=&quot;/images/2018-08/Yosemite.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/images/2018-08/IMG_5604.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;40mm f/4.0 1/400s&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Mac Sky壁纸 vs 日出前的云海&lt;br&gt;&lt;img src=&quot;/images/2018-08/Sky.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/images/2018-08/IMG_5485.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;19mm f/4.0 4s&lt;/em&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="其他" scheme="https://zhangshuqiao.org/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="摄影" scheme="https://zhangshuqiao.org/tags/%E6%91%84%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>Unicode字符与颜文字表情</title>
    <link href="https://zhangshuqiao.org/2018-07/Unicode%E5%AD%97%E7%AC%A6%E4%B8%8E%E9%A2%9C%E6%96%87%E5%AD%97%E8%A1%A8%E6%83%85/"/>
    <id>https://zhangshuqiao.org/2018-07/Unicode字符与颜文字表情/</id>
    <published>2018-07-25T06:10:27.000Z</published>
    <updated>2018-09-30T11:09:51.992Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>编码，是每个程序员绕不开的话题。对于前端工程师而言，字符更是会直观地展示在界面上。<br>提起文字，大部分人的脑中，都会定式为规整排列的字符。但是林子大了什么鸟都有，世界上可是存在着6800+种文字，难免会飞出来一些诡异的鸟…<br>而号称“万国码”的Unicode，在实现编码与展示的时候，也会不会遇到一些奇葩的事情呢？<br>事实上，可能你早已见识过了：</p><hr><p>x̙͈̝͍͕̙̄͛̽̆͌́̕͟g̘̣̠̝̟̤̥̼̼̽͑͋̈̑̒͟͞q̛̤̦̝̘͎͋̔̋͌͒̆̋̚͡f̵̢̙͇̮̠̋̀͌̅̉̃̔͜͜͠͡r̢̜̩͙̭̲͓͈̈̀͑̆͋̚͢͜m̷̛͙̝̣̲̭͍͉̊̓̾̈̋̿̚͢͟͠s̷̡̩͔̮͈̜̊̽͂̆̈́̃̓͋̏</p><p>热҈的҈字҈都҈出҈汗҈了҈</p><p>你的屏幕被蓝翔挖掘机给挖坏了不信你看;̷̸̨̀͒̏̃ͦ̈́̾̀́̎͢҉̵̶͚̼͉͖̺̥͔͇̰̹̮͙͉̻̼̭̻͕̮͇ͨͬͪ͗̇̑̽͋̀̋̊͌ͧͨͭ̓̅͐ͥ̂̔̊ͧ͊҉̶̵̷̞̩̦̳̺̳̬̬̩̣̫͇̯̥͖͍͕̠̦̼̗ͯ̽͌̔ͪͯ́́͋̍ͨ̿̿̎͒ͤ̓̅̀͂ͧ͋̏ͫͣ̔͘͜͠͏̶̵̸̧̧̥̺͓̘̺͎̜̥͕͈̝̫͎̺̮̱̤̠̠͖̳̻̥̣̪͍͕͇̮͙̹̪ͮͧͫ͂͒ͤͣ̌̽ͨͪ͒̄̄̉̒̊ͩ̅͆͘̚͘͘̚͟͟͝ͅ</p><hr><p>今天我们就来探讨一下这些奇怪的字符。</p><h2 id="文字可以戴帽子和穿鞋子"><a href="#文字可以戴帽子和穿鞋子" class="headerlink" title="文字可以戴帽子和穿鞋子"></a>文字可以戴帽子和穿鞋子</h2><p>提起泰文，很多朋友都会立即想到：<strong>萨瓦迪卡（你好）</strong>。<br>但这句话是怎么写的呢？<br>其实这句你好，男生和女生之间还有差异，男生写法是：<code>สวัสดีครับ</code>，女生则是：<code>สวัสดีค่ะ</code>。<br>不过这并不重要，重要的是，我们发现某些字的上面，还带了特殊的符号。就好像是戴上了帽子。<br>事实上，泰文字符不仅会“戴帽子”，偶尔还会“穿鞋子”，比如这三个字符：<code>ผ ผู ผู้</code>。<br>如果脑洞再大一点，有人就会想，那是不是还可以戴多顶帽子呢？<br>的确如此…泰文允许你穿一双鞋子，并且戴两顶帽子。完整的形式是这样的：<br><img src="/images/2018-07/FqLq54KAJkoSVA-7_jdJpSRI3fcI.png" alt=""></p><p>所以，平时看惯了中英文的我们，需要改变一下思路了。<br>世界上的文字，并不全是规规整整横向排列的格子，也存在像泰文这种变形金刚<strong>组合式</strong>的文字。<br>虽然标准的泰文里，“帽子”和“鞋子”的数量是有限制的，但由于国际码的迷之设计（先卖个关子），在计算机里显示的泰文字符，却可以拥有无数的帽子和鞋子。也就是说，它变成了一款可以在Y轴无限拓展的文字！<br>并且，咱不光可以往上喷，还可以有一定角度…<br><img src="/images/2018-07/Fr8cS9UX21MEgBtmOU_CDhreGqlO.jpeg" alt=""></p><p><img src="/images/2018-07/Fr-rlbbriydg4cUmoU_Zs6VQSbpU.jpeg" alt=""></p><p>还可以<br><img src="/images/2018-07/Fk0kXSTymPxute84rceAkzGd5PKA.jpeg" alt=""></p><p>简直是不讲道理。<br>（由于一些系统会崩溃，这里使用截图）</p><a id="more"></a><h2 id="人与机器的矛盾"><a href="#人与机器的矛盾" class="headerlink" title="人与机器的矛盾"></a>人与机器的矛盾</h2><p>然后我们会质问Unicode，你为何不讲道理？<br>如此的设计，近乎是一个bug；但即使是bug，也应该早就修复了呀。<br>事实上，这样的设计，是为了解决一个问题：人与机器的矛盾。<br>首先是存储的矛盾。<br>如果把每个组合好的泰文用一个编码来表示，那么至少需要<strong>44×21×4=3696</strong>个编码（实际上可能要比这还多）。用如此多的编码来处理基本元素只有<strong>69</strong>个的文字是非常浪费的，因此电脑采用一套称为复杂文字编排（CTL）的设计来解决矛盾。<br>简单的说，泰文的每个基本字符对应一个编码，用户在输入法里依次输入多个基本字符进行拼合，最后敲一个特殊的“<strong>结束字符</strong>”；这时前面输入的基本字符，就拼合成了一个<strong>单独</strong>的泰文字符，在屏幕中显示。<br>这样就解决了存储的空间浪费问题。<br>但这样就带来了第二个矛盾，识别的问题。<br>人可以轻松地识别一个泰文合字是否拼写正确、有意义；但机器在显示时却很难进行判断，即使可以也会带来相应的性能问题。<br>如何解决呢？如今会在输入法上做一些文章，比如打一个声调符号后就不能再输入了。不过，由于泰文这种基于结束标志合成字符的本质，你还是没法避免艺术家们使用复制粘贴、手工撰改字符位置等方式去进行创造，只能起到一些限制作用。<br>其次，在比较新版本的Webkit里，在显示上会阻止这种往上下冒的字符，这样至少不影响排版。所以有部分字符已经不会出现上下叠加的情形了，你可以在不同浏览器，观察一下这个字符的显示：ส็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็็</p><h2 id="萌即正义的颜文字-ง-•̀-•́-ง"><a href="#萌即正义的颜文字-ง-•̀-•́-ง" class="headerlink" title="萌即正义的颜文字 (ง •̀_•́)ง"></a>萌即正义的颜文字 (ง •̀_•́)ง</h2><p>也许你觉得泰文奇葩，但它的声调就在文字里，看到就能准确地读出来。这样更容易传播，是不是也没了你读文言文要查字典的烦恼呢？所以文字的设计各有优劣。<br>这样的设计不止泰文，它只是一个典型的例子。除此之外常见的还有老挝文、藏文。<br>脑洞大开的艺术家们，又会想到另外一个好玩的事情：我能不能拿老挝文的“帽子”，组合藏文的“鞋子”，合成一个独立的字符呢？<br>他们赢了。不久，颜文字开始流行。<br>比如，这个表情：(;´༎ຶД༎ຶ`)<br>里面有眼睛流泪的一个字符：<code>༎ຶ</code><br>它是什么语言呢？<br>事实上，它并不属于世界上任何一种语言！眼睛部分是<strong>老挝文</strong>，泪水部分属于<strong>藏文</strong>。<br>但是，你在复制它的时候，可以发现它却是一个<strong>单独</strong>的字符，这就非常的神奇。原因我们在第二部分已经讲过了。<br>我是如何知道的呢？当然我并不是个语言学家，我们可以转码一下，发现<code>༎ຶ</code>对应的编码是<code>\u0f0e\u0eb6</code>，再到<a href="https://unicode-table.com/cn/#tibetan" target="_blank" rel="noopener">unicode-table</a>里去查看就清楚了。<br>除此之外——</p><ul><li>▷ˋε´◁中ε是希腊字母</li><li>ʕ-‘ᴥ’-ʔ中ʕᴥʔ是国际音标</li><li>*(·ཀ·」∠)*中ཀ是藏文</li><li>(ง •̀_•́ )ง中ง是泰文</li><li>罒д罒中罒是中文（同网），д是俄语西里尔字母</li></ul><p>看来如果你会发颜文字，就是名副其实的会十八国语言了呢 (๑✦ˑ̫✦)✧<br>这里有B站评论区自带的颜文字表情：<br><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">(=・ω・=)</span>    <span class="comment">(〜￣△￣)</span>〜    Σ<span class="comment">(￣□￣||)</span>    <span class="comment">(´；ω；`)</span>    <span class="comment">(´▽｀)</span>ノ♪</span><br><span class="line"><span class="comment">(･∀･)</span>    <span class="comment">(°∀°)</span>ﾉ    <span class="comment">(￣3￣)</span>    ╮<span class="comment">(￣▽￣)</span>╭    <span class="comment">(´_ゝ｀)</span>    ヾ<span class="comment">(^▽^*)</span>))</span><br><span class="line">←_←    →_→    <span class="comment">(&lt;_&lt;)</span>    <span class="comment">(&gt;_&gt;)</span>    <span class="comment">(;¬_¬)</span>    <span class="comment">(｀・ω・´)</span></span><br><span class="line"><span class="comment">(⌒▽⌒)</span>    （￣▽￣）    <span class="comment">(ﾟДﾟ≡ﾟдﾟ)</span>!?    Σ<span class="comment">(ﾟдﾟ;)</span>    <span class="comment">("▔□▔)</span>/</span><br><span class="line"><span class="comment">(^・ω・^)</span>    <span class="comment">(｡･ω･｡)</span>    <span class="comment">(●￣(ｴ)</span>￣●)    ε=ε=<span class="comment">(ノ≧∇≦)</span>ノ</span><br><span class="line"><span class="comment">(-_-#)</span>    （￣へ￣）    <span class="comment">(￣ε(#￣)</span>Σ    ヽ<span class="comment">(`Д´)</span>ﾉ    <span class="comment">(´･_･`)</span></span><br><span class="line">（<span class="attr">#-_-)┯━┯    _(:3</span>」∠)_    <span class="comment">(╯°口°)</span>╯<span class="comment">(┴—┴    （/TДT)</span>/    o<span class="comment">(￣ヘ￣o＃)</span></span><br></pre></td></tr></table></figure></p><p>Unicode的转码可以在这里完成：<a href="https://galaxymimi.com/app/textoolbox.html" target="_blank" rel="noopener">主站&gt;应用&gt;JavaScript工具&gt;TexToolBox</a></p><h2 id="字体的错位"><a href="#字体的错位" class="headerlink" title="字体的错位"></a>字体的错位</h2><p>前面我们一直在谈字符的本质，但字符在屏幕中的展示，还有一个关键的因素：字体。<br>相同的字符，使用了不同的字体，它们的显示也会有差别。<br>一行中文，你设置黑体或草书，它大体来看还是规整的；但如果你设置一行英文为草书，可能就会有问题。<br>在浏览器里，如果对应编码在字体文件里为空，一般会展示成一个方格，起码不会影响其他正常字符的排版。但我们知道，Unicode的林子实在太大了…<br>在某些字体里，就会对一些特殊的字符产生错误的排版。<br>比如：热҈的҈字҈都҈出҈汗҈了҈<br>把它转义一下，就得到编码是：<br><code>\u70ed\u0488\u7684\u0488\u5b57\u0488\u90fd\u0488\u51fa\u0488\u6c57\u0488\u4e86\u0488</code><br>其中<code>\u0488</code>就是<code>҈</code>这个字符的编码，它是一个组合用的<a href="https://unicode-table.com/cn/0488" target="_blank" rel="noopener">西里尔文百千符号</a>。<br>它在大部分常用字体里，都有错位问题；而其他一些字体，比如Courier New字体，则是分开的展示：<br><img src="/images/2018-07/Fk4jy-lOTJvqGmGul8nZfz8r9B7p.png" alt=""></p><p>那么，这两种展示哪种才是正常的呢？其实都不正常。<br>我们查看<a href="https://en.wikipedia.org/wiki/Cyrillic_numerals" target="_blank" rel="noopener">西里尔文计数法的wiki</a>，可以看到它只有配合西里尔数字时，才能展示正常：<br><img src="/images/2018-07/Fn9DaIzvbgkExdrsLhSdCvJjCqX1.png" alt=""></p><p>至于你把它跟其他语言组合在一起时，我们要么看到错位，要么看到分离的展示。而且国际上并没有一个组织，去规定要怎么展示。事实上文字这么多，根本也管不过来，所以这也是混乱的原因。<br>最后补充一点，另外一小撮别有心裁的艺术家，还习惯使用这个字符去突破敏感词过滤…</p><h2 id="混乱与创新？"><a href="#混乱与创新？" class="headerlink" title="混乱与创新？"></a>混乱与创新？</h2><p>值得一提的是，Unicode是不可阻挡的潮流，它也一直在更新。比如我们常用的<a href="https://unicode-table.com/cn/sets/emoji" target="_blank" rel="noopener">Emoji表情</a>，就已经是Unicode的标准字符集。和泰文的组合一样，Emoji表情也是可以叠加的，这一点在前面的一篇关于“JavaScript展开操作符”的文章中也提到过。👪和👨‍👩‍👧‍👧就是典型的例子，它们展开后的编码就是👨👩👦🧒。<br>而本文中我们说到，大家在玩这些奇奇怪怪的字符时，都是基于类似bug的设定在搞事情。这就有很大的局限性。<br>那艺术家们又会有些大胆的想法：我能不能主动创造一些新字符，就是为了错位和组合呢？<br>我也不清楚这是创新，还是会带来更多的混乱。但事实是，iOS系统自带的字符，已经有这样的尝试了。并且搜狗输入法在iOS系统提供的诸多符号里，挑选了一些，可供用户去使用。这个功能的名字，叫做花漾字。<br><img src="/images/2018-07/IMG_0151.png" alt=""></p><p>还是得感慨艺术家们的视角是多么独特。<br>既然都这样了…最后，希望我们的国产表情包能有朝一日打入Unicode吧。</p><p>参考文章：<br><a href="http://litten.me/2017/11/13/strange-characters1" target="_blank" rel="noopener">人人都是艺术家！谈谈那些奇怪的字符（上）</a></p><p>拓展阅读：<br><a href="https://unicode-table.com/cn" target="_blank" rel="noopener">Unicode字符百科</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;编码，是每个程序员绕不开的话题。对于前端工程师而言，字符更是会直观地展示在界面上。&lt;br&gt;提起文字，大部分人的脑中，都会定式为规整排列的字符。但是林子大了什么鸟都有，世界上可是存在着6800+种文字，难免会飞出来一些诡异的鸟…&lt;br&gt;而号称“万国码”的Unicode，在实现编码与展示的时候，也会不会遇到一些奇葩的事情呢？&lt;br&gt;事实上，可能你早已见识过了：&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;x̙͈̝͍͕̙̄͛̽̆͌́̕͟g̘̣̠̝̟̤̥̼̼̽͑͋̈̑̒͟͞q̛̤̦̝̘͎͋̔̋͌͒̆̋̚͡f̵̢̙͇̮̠̋̀͌̅̉̃̔͜͜͠͡r̢̜̩͙̭̲͓͈̈̀͑̆͋̚͢͜m̷̛͙̝̣̲̭͍͉̊̓̾̈̋̿̚͢͟͠s̷̡̩͔̮͈̜̊̽͂̆̈́̃̓͋̏&lt;/p&gt;
&lt;p&gt;热҈的҈字҈都҈出҈汗҈了҈&lt;/p&gt;
&lt;p&gt;你的屏幕被蓝翔挖掘机给挖坏了不信你看;̷̸̨̀͒̏̃ͦ̈́̾̀́̎͢҉̵̶͚̼͉͖̺̥͔͇̰̹̮͙͉̻̼̭̻͕̮͇ͨͬͪ͗̇̑̽͋̀̋̊͌ͧͨͭ̓̅͐ͥ̂̔̊ͧ͊҉̶̵̷̞̩̦̳̺̳̬̬̩̣̫͇̯̥͖͍͕̠̦̼̗ͯ̽͌̔ͪͯ́́͋̍ͨ̿̿̎͒ͤ̓̅̀͂ͧ͋̏ͫͣ̔͘͜͠͏̶̵̸̧̧̥̺͓̘̺͎̜̥͕͈̝̫͎̺̮̱̤̠̠͖̳̻̥̣̪͍͕͇̮͙̹̪ͮͧͫ͂͒ͤͣ̌̽ͨͪ͒̄̄̉̒̊ͩ̅͆͘̚͘͘̚͟͟͝ͅ&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;今天我们就来探讨一下这些奇怪的字符。&lt;/p&gt;
&lt;h2 id=&quot;文字可以戴帽子和穿鞋子&quot;&gt;&lt;a href=&quot;#文字可以戴帽子和穿鞋子&quot; class=&quot;headerlink&quot; title=&quot;文字可以戴帽子和穿鞋子&quot;&gt;&lt;/a&gt;文字可以戴帽子和穿鞋子&lt;/h2&gt;&lt;p&gt;提起泰文，很多朋友都会立即想到：&lt;strong&gt;萨瓦迪卡（你好）&lt;/strong&gt;。&lt;br&gt;但这句话是怎么写的呢？&lt;br&gt;其实这句你好，男生和女生之间还有差异，男生写法是：&lt;code&gt;สวัสดีครับ&lt;/code&gt;，女生则是：&lt;code&gt;สวัสดีค่ะ&lt;/code&gt;。&lt;br&gt;不过这并不重要，重要的是，我们发现某些字的上面，还带了特殊的符号。就好像是戴上了帽子。&lt;br&gt;事实上，泰文字符不仅会“戴帽子”，偶尔还会“穿鞋子”，比如这三个字符：&lt;code&gt;ผ ผู ผู้&lt;/code&gt;。&lt;br&gt;如果脑洞再大一点，有人就会想，那是不是还可以戴多顶帽子呢？&lt;br&gt;的确如此…泰文允许你穿一双鞋子，并且戴两顶帽子。完整的形式是这样的：&lt;br&gt;&lt;img src=&quot;/images/2018-07/FqLq54KAJkoSVA-7_jdJpSRI3fcI.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;所以，平时看惯了中英文的我们，需要改变一下思路了。&lt;br&gt;世界上的文字，并不全是规规整整横向排列的格子，也存在像泰文这种变形金刚&lt;strong&gt;组合式&lt;/strong&gt;的文字。&lt;br&gt;虽然标准的泰文里，“帽子”和“鞋子”的数量是有限制的，但由于国际码的迷之设计（先卖个关子），在计算机里显示的泰文字符，却可以拥有无数的帽子和鞋子。也就是说，它变成了一款可以在Y轴无限拓展的文字！&lt;br&gt;并且，咱不光可以往上喷，还可以有一定角度…&lt;br&gt;&lt;img src=&quot;/images/2018-07/Fr8cS9UX21MEgBtmOU_CDhreGqlO.jpeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2018-07/Fr-rlbbriydg4cUmoU_Zs6VQSbpU.jpeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;还可以&lt;br&gt;&lt;img src=&quot;/images/2018-07/Fk0kXSTymPxute84rceAkzGd5PKA.jpeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;简直是不讲道理。&lt;br&gt;（由于一些系统会崩溃，这里使用截图）&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="https://zhangshuqiao.org/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>在网页中添加Live2D看板娘</title>
    <link href="https://zhangshuqiao.org/2018-07/%E5%9C%A8%E7%BD%91%E9%A1%B5%E4%B8%AD%E6%B7%BB%E5%8A%A0Live2D%E7%9C%8B%E6%9D%BF%E5%A8%98/"/>
    <id>https://zhangshuqiao.org/2018-07/在网页中添加Live2D看板娘/</id>
    <published>2018-07-21T12:05:32.000Z</published>
    <updated>2018-07-15T09:40:17.379Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/2018-07/photo.jpg" alt=""><br>项目地址：<a href="https://github.com/stevenjoezhang/live2d-widget" target="_blank" rel="noopener">live2d-widget</a></p><p>克隆这个仓库到服务器上，并配置<code>autoload.js</code>，修改其中的链接为各文件的绝对地址，即可在网页中添加Live2D看板娘。<br>相对于市面上广为流传的版本，博主对触发动作和语言进行了魔改（针对Hexo NexT主题），调整了图标样式、元素定位，并解决了CSS的前缀等问题。<br>更多内容可以参考项目文档及下方链接。<br>快来把萌萌哒的看板娘抱回家吧！</p><p>参考文章：<br><a href="https://www.fghrsh.net/post/123.html" target="_blank" rel="noopener">网页添加 Live2D 看板娘</a><br><a href="https://imjad.cn/archives/lab/add-dynamic-poster-girl-with-live2d-to-your-blog-02" target="_blank" rel="noopener">给博客添加能动的看板娘(Live2D)-将其添加到网页上吧</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/2018-07/photo.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;项目地址：&lt;a href=&quot;https://github.com/stevenjoezhang/live2d-widget&quot; target=&quot;_blank&quot; rel=&quot;noope
      
    
    </summary>
    
      <category term="技术" scheme="https://zhangshuqiao.org/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="GitHub" scheme="https://zhangshuqiao.org/tags/GitHub/"/>
    
      <category term="JavaScript" scheme="https://zhangshuqiao.org/tags/JavaScript/"/>
    
      <category term="PHP" scheme="https://zhangshuqiao.org/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>改变世界的17个公式</title>
    <link href="https://zhangshuqiao.org/2018-07/%E6%94%B9%E5%8F%98%E4%B8%96%E7%95%8C%E7%9A%8417%E4%B8%AA%E5%85%AC%E5%BC%8F/"/>
    <id>https://zhangshuqiao.org/2018-07/改变世界的17个公式/</id>
    <published>2018-07-18T03:53:28.000Z</published>
    <updated>2018-07-19T07:42:28.850Z</updated>
    
    <content type="html"><![CDATA[<p>这篇文章翻译自：<a href="http://www.businessinsider.com/equations-that-changed-the-world-2016-3" target="_blank" rel="noopener">17 Equations That Changed the World</a></p><p>In 2012, Mathematician Ian Stewart came out with an excellent and deeply researched book titled “In Pursuit of the Unknown: 17 Equations That Changed the World.”<br>在2012年，数学家斯图尔特（Ian Stewart）出版了一本精彩而深入研究的著作，名为《追寻未知：改变世界的17个公式》<br>His book takes a look at the most pivotal equations of all time, and puts them in a human, rather than technical context.<br>他的书着眼于有史以来最关键的方程式，并将它们置于普通人而非专业的背景中。<br>“Equations definitely can be dull, and they can seem complicated, but that’s because they are often presented in a dull and complicated way,” Stewart told Business Insider. “I have an advantage over school math teachers: I’m not trying to show you how to do the sums yourself.”<br>“方程式肯定会显得沉闷，而且它们看起来很复杂，但那是因为它们经常以这样的方式呈现，”斯图尔特告诉Business Insider。 “我比学校的数学老师更有优势：我不会试图告诉你如何自己算出它们。”<br>He explained that anyone can “appreciate the beauty and importance of equations without knowing how to solve them … The intention is to locate them in their cultural and human context, and pull back the veil on their hidden effects on history.”<br>他解释说，任何人都可以“欣赏方程式的美丽和重要性，而不去知道如何解它们……目的是将它们置于文化和人文环境中，并揭开它们对历史隐藏效应的面纱。”<br>Stewart continued that “equations are a vital part of our culture. The stories behind them — the people who discovered or invented them and the periods in which they lived — are fascinating.”<br>斯图尔特继续说道，“方程式是我们文化的重要组成部分。他们背后的故事——发现或发明它们的人以及他们生活的时期——都很吸引人。”<br>Here are 17 equations that have changed the world:<br>以下是改变世界的17个方程式：<br>Max Nisen contributed to an earlier version of this post.<br>Max Nisen为本文的早期版本做出了贡献。</p><h2 id="The-Pythagorean-Theorem"><a href="#The-Pythagorean-Theorem" class="headerlink" title="The Pythagorean Theorem"></a>The Pythagorean Theorem</h2><p>$$a^{2}+b^{2}=c^{2}$$<br>Pythagoras, 530 BC<br>What does it mean? The square of the hypotenuse of a right triangle is equal to the sum of the squares of its legs.<br>作用：直角三角形的斜边的平方等于其直角边的平方和。<br>History: Though attributed to Pythagoras, it is not certain that he was the first person to prove it. The first clear proof came from Euclid, and it is possible the concept was known 1,000 years before Pythagoras by the Babylonians.<br>历史：虽然认为毕达哥拉斯（Pythagoras）发现了这个公式，但不确定他是否是第一个证明它的人。第一个明确的证明来自欧几里得，而这个概念可能是在毕达哥拉斯之前1000年就被巴比伦人知道了。<br>Importance: The equation is at the core of much of geometry, links it with algebra, and is the foundation of trigonometry. Without it, accurate surveying, mapmaking, and navigation would be impossible.<br>重要性：勾股定理是几何的核心，它与代数联系起来，是三角学的基础。没有它，准确的测量、地图制作和导航将是不可能的。<br>In terms of pure math, the Pythagorean Theorem defines normal, Euclidean plane geometry. For example, a right triangle drawn on the surface of a sphere like the Earth doesn’t necessarily satisfy the theorem.<br>在纯数学方面，毕达哥拉斯定理定义了正常的欧几里德平面几何。例如，在像地球一样的球体表面上绘制的直角三角形不一定满足该定理。<br>Modern use: Triangulation is used to this day to pinpoint relative location for GPS navigation.<br>现代用途：今天使用三角测量来确定GPS导航的相对位置。</p><a id="more"></a><h2 id="The-logarithm-and-its-identities"><a href="#The-logarithm-and-its-identities" class="headerlink" title="The logarithm and its identities"></a>The logarithm and its identities</h2><p>$$logxy=logx+logy$$<br>John Napier, 1610<br>What does it mean? You can multiply numbers by adding related numbers.<br>作用：您可以将两个数字的对数相加来计算乘积。<br>History: The initial concept was discovered by the Scottish Laird John Napier of Merchiston in an effort to make the multiplication of large numbers, then incredibly tedious and time consuming, easier and faster. It was later refined by Henry Briggs to make reference tables easier to calculate and more useful.<br>历史：最初的概念是由苏格兰爱丁堡附近的小镇梅奇斯顿的地主约翰·纳皮尔（John Napier）发现的，旨在使大数乘法——当时令人难以置信的繁琐和耗时，变得更容易和更快。后来Henry Briggs对其进行了改进，使参考表更容易计算，更有用。<br>Importance: Logarithms were revolutionary, making calculation faster and more accurate for engineers and astronomers. That’s less important with the advent of computers, but they’re still an essential to scientists.<br>重要性：对数是革命性的，使工程师和天文学家的计算更快，更准确。随着计算机的出现，这一点就不那么重要了，但它们对科学家来说仍然是必不可少的。<br>Modern use: Logarithms, and the related exponential functions, are used to model everything from compound interest to biological growth to radioactive decay.<br>现代用途：对数和指数函数用于为从复利到生物生长到放射性衰变的所有事物建模。</p><h2 id="Calculus"><a href="#Calculus" class="headerlink" title="Calculus"></a>Calculus</h2><p>$$\frac{df}{dt}=\lim_{h \to 0}=\frac{f(t+h)-f(t)}{h}$$<br>Isaac Newton, 1668<br>What does it mean? Allows the calculation of an instantaneous rate of change.<br>作用：允许对瞬时变化率的计算。<br>History: Calculus as we currently know it was described around the same time in the late 17th century by Isaac Newton and Gottfried Leibniz. There was a lengthy debate over plagiarism and priority which may never be resolved. We use the leaps of logic and parts of the notation of both men today.<br>历史：我们现在所知道的微积分是在17世纪晚期由艾萨克·牛顿（Isaac Newton）和戈特弗里德·莱布尼兹（Gottfried Leibniz）几乎同时描述的。关于剽窃和谁先提出微积分的争论持续了很久，可能永远无法解决。我们今天使用的正是两人的逻辑推导和部分符号系统。<br>Importance: According to Stewart, “More than any other mathematical technique, it has created the modern world.” Calculus is essential in our understanding of how to measure solids, curves, and areas. It is the foundation of many natural laws, and the source of differential equations.<br>重要性：根据斯图尔特的说法，“它比任何其他数学技术都更能创造现代世界。”在我们理解如何测量固体，曲线和面积时，微积分是必不可少的。它是许多自然法则的基础，也是微分方程的来源。<br>Modern use: Any mathematical problem where an optimal solution is required. Essential to medicine, economics, physics, engineering, and computer science.<br>现代用途：需要最佳解决方案的任何数学问题。对医学，经济学，物理学，工程学和计算机科学至关重要。</p><h2 id="Newton’s-universal-law-of-gravitation"><a href="#Newton’s-universal-law-of-gravitation" class="headerlink" title="Newton’s universal law of gravitation"></a>Newton’s universal law of gravitation</h2><p>$$F=G\frac{m_1 m_2}{r^2}$$<br>Isaac Newton, 1687<br>What does it mean? Calculates the force of gravity between two objects.<br>作用：计算两个物体之间的引力大小。<br>History: Isaac Newton derived his laws based on earlier astronomical and mathematical work by Johannes Kepler. He also used, and possibly plagiarized the work of Robert Hooke.<br>历史：牛顿根据开普勒先前的天文学和数学工作得出了他的定律。他也使用了（也可能是抄袭）罗伯特·胡克的工作。<br>Importance: Used techniques of calculus to describe how the world works. Even though it was later supplanted by Einstein’s theory of relativity, it is still essential for a practical description of how objects in space, like stars, planets, and human-made spacecraft, interact with each other. We use it to this day to design orbits for satellites and probes.<br>重要性：使用微积分技术来描述世界是如何运作的。尽管它后来被爱因斯坦的相对论所取代，但对于空间中的物体如恒星，行星和人造宇宙飞船如何相互作用仍然是必不可少的。我们今天用它来设计卫星和探测器的轨道。<br>Philosophically, Newton’s law is important because it describes how gravity works everywhere, from a ball falling to the ground on Earth to the evolution of galaxies and the universe as a whole. While we take the idea of universal laws for granted today, in earlier eras the idea that the terrestrial and celestial worlds shared the same properties was revolutionary.<br>从哲学上讲，牛顿定律很重要，因为它描述了引力如何在任何地方起作用——从地球上的物体掉在地上，到星系和整个宇宙的演化。虽然我们今天认为普适的物理定律是理所当然的，但在早期的时代，地球和天体拥有相同属性的想法是革命性的。<br>Modern use: Although, as mentioned above, for practical uses Newton’s law has been augmented by Einstein’s theories, the basic idea of Newtonian gravity is still a useful approximation for how things behave in space.<br>现代用途：尽管如上所述，对于实际应用，牛顿定律已经被爱因斯坦的理论所增强，但牛顿引力的基本思想仍然是对事物在空间中表现的有用近似。</p><h2 id="Complex-numbers"><a href="#Complex-numbers" class="headerlink" title="Complex numbers"></a>Complex numbers</h2><p>$$i^2=-1$$<br>Euler, 1750<br>What does it mean? Mathematicians can expand our idea of what numbers are by introducing the square roots of negative numbers.<br>作用：数学家可以通过引入负数的平方根来扩展我们对数字的概念。<br>History: Imaginary numbers were originally posited by famed gambler/mathematician Girolamo Cardano, then expanded by Rafael Bombelli and John Wallis. They still existed as a peculiar, but essential problem in math until William Hamilton described this definition.<br>历史：虚数最初由著名的赌徒/数学家Girolamo Cardano提出，然后由Rafael Bombelli和John Wallis扩展。在威廉·汉密尔顿描述这个定义之前，它们仍然是数学中一个特殊的但必不可少的问题。<br>The imaginary and complex numbers are mathematically very elegant. Algebra works perfectly the way we want it to — any equation has a complex number solution, a situation that is not true for the real numbers: \(x^2 + 4 = 0\) has no real number solution, but it does have a complex solution: the square root of -4, or 2i. Calculus can be extended to the complex numbers, and by doing so, we find some amazing symmetries and properties of these numbers.<br>虚数和复数在数学上非常优雅。代数以我们想要的方式完美地工作——任何方程都有一个复数解，而却不一定有实数解：\(x^2 + 4 = 0\)没有实数解，但它确实有一个复杂的解决方案：-4的平方根或2i。微积分可以扩展到复数，通过这样做，我们发现了这些数字的一些惊人的对称性和属性。<br>Importance: According to Stewart “…. most modern technology, from electric lighting to digital cameras could not have been invented without them.” The extension of calculus to the complex numbers, a branch of math called “complex analysis,” is essential to understanding electrical systems and a variety of modern data processing algorithms.<br>重要性：根据斯图尔特的说法“……最现代的技术，从电子照明到数码相机，如果没有它们，就无法发明。”微积分扩展到复数，这是一个称为“复分析”的数学分支，对于理解电气系统和各种现代数据处理算法至关重要。<br>Modern use: Used broadly in electrical engineering and mathematical theory.<br>现代用途：广泛用于电气工程和数学理论。</p><h2 id="Euler’s-formula-for-polyhedra"><a href="#Euler’s-formula-for-polyhedra" class="headerlink" title="Euler’s formula for polyhedra"></a>Euler’s formula for polyhedra</h2><p>$$V-E+F=2$$<br>Euler, 1751<br>What does it mean? Describes a numerical relationship that is true of all solid shapes of a particular type.<br>作用：描述了对特定类型的所有简单多面体都适用的数字关系。<br>History: This was developed by the great 18th century mathematician Leonhard Euler.Polyhedra are the three-dimensional versions of polygons, like the cube to the right. The corners of a polyhedron are called its vertices, the lines connecting the vertices are its edges, and the polygons covering it are its faces.<br>历史：这是由伟大的18世纪数学家莱昂哈德·欧拉（Leonhard Euler）开发的。Polyhedra，即多面体，是多边形的三维版本，它的角被称为顶点，连接顶点的线是它的边，覆盖它的多边形是它的面。<br>A cube has 8 vertices, 12 edges, and 6 faces. If I add the vertices and faces together, and subtract the edges, I get 8 + 6 - 12 = 2.<br>立方体有8个顶点，12个边和6个面。如果我将顶点和面加在一起，并减去边，我得到8 + 6 - 12 = 2。<br>Euler’s formula states that, as long as your polyhedron is somewhat well behaved, if you add the vertices and faces together, and subtract the edges, you will always get 2. This will be true whether your polyhedron has 4, 8, 12, 20, or any number of faces.<br>Euler的公式表明，只要你的多面体是常规的，如果你将顶点和面加在一起，并减去边，你将总是得到2。无论你的多面体是4、8、12、20还是任何数量的面数，都是如此。<br>Importance: Fundamental to the development of topology, which extends geometry to any continuous surface.<br>重要性：拓扑开发的基础，将几何扩展到任何连续的表面。<br>Modern use: Topology is used to understand the behavior and function of DNA, and it is an underlying part of the mathematical tool kit used to understand networks like social media and the internet.<br>现代用途：拓扑用于理解DNA的行为和功能，它是用于理解社交媒体和互联网等网络的数学工具包的基础部分。</p><h2 id="The-normal-distribution"><a href="#The-normal-distribution" class="headerlink" title="The normal distribution"></a>The normal distribution</h2><p>$$\Phi(x)=\frac{1}{\sqrt{2\pi\rho}}e^{\frac{(x-\mu)^2}{2\rho^{2}}}$$<br>C.F.Gauss, 1810<br>What does it mean? Defines the standard normal distribution, a bell shaped curve in which the probability of observing a point is greatest near the average, and declines rapidly as one moves away.<br>作用：定义了标准正态分布，一种钟形曲线，其中概率在平均值附近最大，并在离开平均值处迅速下降。<br>History: The initial work was by Blaise Pascal, but the distribution came into its own with Bernoulli. The bell curve as we currently comes from Belgian mathematician Adolphe Quetelet.<br>历史：最初的工作是由帕斯卡（Blaise Pascal）完成的，但是伯努利发扬了它。我们目前使用的来自比利时数学家Adolphe Quetelet。<br>Importance: The equation is the foundation of modern statistics. Science and social science would not exist in their current form without it. Statistical experiment design relies on the properties of the normal curve, and how those properties relate to errors that can occur when taking a random sample.<br>重要性：这个式子是现代统计学的基础。没有它，科学和社会科学就不会以现在的形式存在。统计实验设计依赖于正态曲线的属性，以及这些属性如何与采用随机样本时可能发生的错误相关。<br>Modern use: Used to determine whether drugs are sufficiently effective in clinical trials.<br>现代用途：用于确定药物在临床试验中是否足够有效。</p><h2 id="The-wave-equation"><a href="#The-wave-equation" class="headerlink" title="The wave equation"></a>The wave equation</h2><p>$$\frac{\partial^2 u}{\partial t^2}=c^2\frac{\partial^2 u}{\partial x^2}$$<br>J.d’Almbert, 1746<br>What does it mean? A differential equation that describes the behavior of waves, like the behavior of a vibrating violin string.<br>作用：描述波动行为的微分方程，如振动的小提琴弦的行为。<br>History: The mathematicians Daniel Bournoulli and Jean D’Alembert were the first to describe this relationship in the 18th century, albeit in slightly different ways.<br>历史：数学家伯努利（Daniel Bournoulli）和达朗贝尔（Jean D’Alembert）是最初在18世纪描述这种关系的人，尽管方式略有不同。<br>Importance: The behavior of waves generalizes to the way sound works, how earthquakes happen, and the behavior of the ocean.<br>重要性：波动的行为概括了声音的产生，地震的发生方式以及海洋的行为。<br>The techniques developed to solve the wave equation have been very useful in solving similar types of equations as well.<br>为解决波动方程而开发的技术在解决相似类型的方程方面也非常有用。<br>Modern use: Oil companies set off explosives, then read data from the ensuing sound waves to predict geological formations.<br>现代用途：石油公司引爆炸药，然后从随后的声波中读取数据以预测地质构造。</p><h2 id="The-Fourier-transform"><a href="#The-Fourier-transform" class="headerlink" title="The Fourier transform"></a>The Fourier transform</h2><p>$$f(\omega)=\int_{-\infty}^{+\infty}f(x)e^{-2\pi ix\omega}dx$$<br>J. Fourier, 1822<br>What does it mean? Describes patterns in time as a function of frequency.<br>作用：描述作为频率函数的时间模式。<br>History: Joseph Fourier discovered the equation, which extended from his famous solution to a differential equation describing how heat flows, and the previously described wave equation.<br>历史：约瑟夫·傅立叶（Joseph Fourier）发现了这个等式，这是从他著名的热传导方程，以及前面的波动方程的解决方案所扩展得到的。<br>Importance: The equation allows for complex wave patterns, like music, speech, or images, to be broken up, cleaned up, and analyzed. This is essential in many types of signal analysis.<br>重要性：该等式允许分解、清理和分析复杂的波形图案，如音乐，语音或图像。这在许多类型的信号分析中都是必不可少的。<br>Modern use: Used to compress information for the JPEG image format and discover the structure of molecules.<br>现代用途：用于压缩JPEG图像格式的信息并发现分子的结构。</p><h2 id="The-Navier-Stokes-equations"><a href="#The-Navier-Stokes-equations" class="headerlink" title="The Navier-Stokes equations"></a>The Navier-Stokes equations</h2><p>$$\rho(\frac{\partial \vec{v}}{\partial t}+\vec{v}\cdot \nabla \vec{v})=-\nabla p+\nabla \cdot \stackrel{\rightarrow \rightarrow}{\mathbb{T}}+\rho\vec{f}$$<br>C.Navier, G.Stokes, 1845<br>What does it mean? The Navier-Stokes equations are the fundamental physical equation that describes how fluids work. The left side is the acceleration of a small amount of fluid, the right indicates the forces that act upon it.<br>作用：纳维尔-斯托克斯（Navier-Stokes）方程是描述流体如何运动的基本物理方程。左侧是少量液体的加速度，右侧表示作用在其上的力。<br>History: Leonhard Euler made the first attempt at modeling fluid movement. French engineer Claude-Louis Navier and Irish mathematician George Stokes made the leap to the model still used today.<br>历史：莱昂哈德·欧拉首次尝试对流体运动进行建模。法国工程师纳维尔（Claude-Louis Navier）和爱尔兰数学家斯托克斯（George Stokes）创建了今天仍在使用的模型，实现了质的飞跃。<br>Importance: Once computers became powerful enough to approximately solve this equation, it opened up a complex and very useful field of physics. It is particularly useful in making vehicles more aerodynamic.<br>重要性：一旦计算机变得强大到足以大致解决这个等式，它就开辟了一个复杂且非常有用的物理领域。它特别适用于使车辆设计得更具空气动力学性能。<br>While we can use modern computers to make practical approximate simulations of fluid dynamics that are useful in engineering, finding a mathematically exact solution (or even knowing whether or not an exact solution exists in all cases) is still an open question, one whose answer is attached to a million-dollar prize.<br>虽然我们可以使用现代计算机对工程中有用的流体动力学进行实际的近似模拟，但找到一个数学上精确的解决方案（或者甚至知道在所有情况下是否存在精确解决方案）仍然是一个悬而未决的问题，它被悬赏了一百万美元的奖金。<br>Modern use: Among other things, allowed for the development of modern passenger jets.<br>现代用途：现代客机的发展离不开它。</p><h2 id="Maxwell’s-equations"><a href="#Maxwell’s-equations" class="headerlink" title="Maxwell’s equations"></a>Maxwell’s equations</h2><p>$$\nabla\cdot\vec{E} = \frac{\rho}{\epsilon_0}$$<br>$$\nabla\cdot\vec{B} = 0 $$<br>$$\nabla\times\vec{E} = -\frac{\partial B}{\partial t} $$<br>$$\nabla\times\vec{B} = \mu_0\left(\vec{J}+\epsilon_0\frac{\partial E}{\partial t} \right)$$<br>J.C.Maxwell, 1865<br>What does it mean? Maps out the relationship between electric and magnetic fields.<br>作用：描述了电场和磁场之间的关系。<br>History: Michael Faraday did pioneering work on the connection between electricity and magnetism, and James Clerk Maxwell translated it into these equations. Maxwell’s equations were for classical electromagnetism what Newton’s laws of motion were for classical mechanics.<br>历史：迈克尔·法拉第（Michael Faraday）在电力和磁力之间的联系方面做了开创性的工作，而詹姆斯·克拉克斯·麦克斯韦（James Clerk Maxwell）将它们写入了方程组。麦克斯韦方程组用于经典电磁学，而牛顿的运动定律是经典力学的。<br>Importance: Helped understand electromagnetic waves, helping to create most modern electrical and electronic technology.<br>重要性：帮助了解电磁波，帮助创造了最现代化的电气和电子技术。<br>Modern use: Radar, television, and modern communications.<br>现代用途：雷达，电视和现代通讯。</p><h2 id="Second-law-of-thermodynamics"><a href="#Second-law-of-thermodynamics" class="headerlink" title="Second law of thermodynamics"></a>Second law of thermodynamics</h2><p>$$dS\ge0$$<br>L.Boltzmann, 1874<br>What does it mean? Energy and heat dissipate over time.<br>作用：孤立系统的熵随着时间的推移而增加。<br>History: Sadi Carnot first posited that nature does not have reversible processes. Mathematician Ludwig Boltzmann extended the law, and William Thomson formally stated it.<br>历史：萨迪·卡诺（Sadi Carnot）首先假定大自然没有可逆的过程。数学家玻尔兹曼（Ludwig Boltzmann）扩展了这一定律，威廉·汤姆森（William Thomson）正式声明了这一点。<br>Importance: Essential to our understanding of energy and the universe via the concept of entropy. Thermodynamic entropy is, roughly speaking, a measure of how disordered a system is. A system that starts out in an ordered, uneven state — say, a hot region next to a cold region — will always tend to even out, with heat flowing from the hot area to the cold area until evenly distributed.<br>重要性：通过熵的概念对能量和宇宙的理解是必不可少的。粗略地说，热力学熵是衡量系统混乱程度的一种方法。一个以有序，不均匀状态开始的系统——比如一个寒冷地区旁边的炎热区域——将始终趋于均匀，热量从热区流向冷区直到均匀分布。<br>Modern use: Thermodynamics underlies much of our understanding of chemistry and is essential in building any kind of power plant or engine.<br>现代用途：热力学是我们对化学的理解的基础，对于建造任何类型的发电厂或发动机至关重要。</p><h2 id="Einstein’s-theory-of-relativity"><a href="#Einstein’s-theory-of-relativity" class="headerlink" title="Einstein’s theory of relativity"></a>Einstein’s theory of relativity</h2><p>$$E=mc^2$$<br>Einstein, 1905<br>What does it mean? Energy and matter are two sides of the same coin.<br>作用：能量和物质是同一枚硬币的两面。<br>History: The genesis of Einstein’s equation was an experiment by Albert Michelson and Edward Morley that proved light did not move in a Newtonian manner in comparison to changing frames of reference. Einstein followed up on this insight with his famous papers on special relativity (1905) and general relativity (1915).<br>历史：爱因斯坦质能方程的起源是艾伯特·迈克尔逊和爱德华·莫雷的实验，他们证明光相对变化的参考系没有以牛顿预言的方式运动。爱因斯坦用他关于狭义相对论（1905）和广义相对论（1915）的着名论文跟进了这一见解。<br>Special relativity brought in ideas like the speed of light being a universal speed limit and the passage of time being different for people moving at different speeds.<br>狭义相对论带来了诸如光速是宇宙中速度上限的想法，以及时间的流逝对于以不同速度运动的人来说是不同的。<br>General relativity describes gravity as a curving and folding of space and time themselves, and was the first major change to our understanding of gravity since Newton’s law. General relativity is essential to our understanding of the origins, structure, and ultimate fate of the universe.<br>广义相对论将重力描述为空间和时间本身的弯曲和折叠，并且是自牛顿定律以来我们对引力理解的第一次重大改变。广义相对论对于我们理解宇宙的起源，结构和最终命运至关重要。<br>Importance: Probably the most famous equation in history. Completely changed our view of matter and reality.<br>重要性：可能是历史上最着名的等式。完全改变了我们对物质和现实的看法。<br>Modern use: Helped lead to nuclear weapons, and if GPS didn’t account for it, your directions would be off thousands of yards.<br>现代用途：质能方程是核武器制造的理论基础；而如果GPS没有考虑相对论，你的方向将偏离数千码。</p><h2 id="The-Schrodinger-equation"><a href="#The-Schrodinger-equation" class="headerlink" title="The Schrödinger equation"></a>The Schrödinger equation</h2><p>$$i\hbar\frac{\partial}{\partial t}\Psi=H\Psi$$<br>E.Schrodinger, 1927<br>What does it mean? This is the main equation in quantum physics. Models matter as a wave, rather than a particle.<br>作用：这是量子物理学的主要方程。模型的特性像波而非粒子。<br>History: Louis-Victor de Broglie pinpointed the dual nature of matter in 1924. The equation you see was derived by Erwin Schrödinger in 1927, building off of the work of physicists like Werner Heisenberg. It describes the way subatomic particles and atoms evolve over time.<br>历史：德布罗意（Louis-Victor de Broglie）在1924年确定了物质波粒二象性。你看到的等式是由薛定谔（Erwin Schrödinger）在1927年得出的，它建立了像海森堡（Werner Heisenberg）这样的物理学家的工作。它描述了亚原子粒子和原子随时间演变的方式。<br>Importance: Revolutionized the view of physics at small scales. The insight that particles at that level exist at a range of probable states was revolutionary.<br>重要性：在微观范围内彻底改变了物理学的观点。对于“微观状态下的粒子存在于一系列可能状态”的洞察是革命性的。<br>Modern quantum mechanics and general relativity are the two most successful scientific theories in history — all of the experimental observations we have made to date are entirely consistent with their predictions.<br>现代量子力学和广义相对论是历史上最成功的两个科学理论——我们迄今为止所做的所有实验观察都完全符合他们的预测。<br>Modern use: Quantum mechanics is necessary for most modern technology — nuclear power, semiconductor-based computers, and lasers are all built around quantum phenomena.<br>现代用途：量子力学是大多数现代技术所必需的——核能，半导体计算机和激光都是围绕量子现象建立的。</p><h2 id="Shannon’s-information-theory"><a href="#Shannon’s-information-theory" class="headerlink" title="Shannon’s information theory"></a>Shannon’s information theory</h2><p>$$H=-\sum p(x)logp(x)$$<br>C.Shannon, 1949<br>What does it mean? Estimates the amount of data in a piece of code by the probabilities of its component symbols.<br>作用：通过其组件符号的确定性来估计一段代码中的数据量。<br>History: Developed by Bell Labs engineer Claude Shannon in the years after World War 2.<br>历史：由贝尔实验室工程师香农（Claude Shannon）在第二次世界大战后的几年中开发。<br>Importance: The equation given here is for Shannon information entropy. As with the thermodynamic entropy given above, this is a measure of disorder. In this case, it measures the information content of a message — a book, a JPEG picture sent on the internet, or anything that can be represented symbolically. The Shannon entropy of a message represents a lower bound on how much that message can be compressed without losing some of its content.<br>重要性：这里给出的等式是香农信息熵。与上面给出的热力学熵一样，这是一种无序的量度。在这种情况下，它测量消息的信息内容——书籍，在互联网上发送的JPEG图片，或者可以象征性地表示的任何内容。消息的香农熵表示该消息可被压缩多少而不会丢失其某些内容的下限。<br>Modern use: Shannon’s entropy measure launched the mathematical study of information, and his results are central to how we communicate over networks today.<br>现代用途：信息熵的测量推出了信息的数学研究，他的结果对于我们今天如何通过网络进行通信至关重要。</p><h2 id="The-logistic-model-for-population-growth"><a href="#The-logistic-model-for-population-growth" class="headerlink" title="The logistic model for population growth"></a>The logistic model for population growth</h2><p>$$x_{t+1}=kx_t (1-x_t)$$<br>Robert May, 1975<br>What does it mean? Estimates the change in a population of creatures across generations with limited resources. Importantly, this equation can lead to chaotic behavior.<br>作用：估计资源有限的几代人生物群体的变化。重要的是，这个等式可能导致混沌的行为。<br>History: Robert May was the first to point out that this model of population growth could produce chaos in 1975. Important work by mathematicians Vladimir Arnold and Stephen Smale helped with the realization that chaos is a consequence of differential equations.</p><p>历史：罗伯特·梅（Robert May）是第一个指出这种人口增长模式可能在1975年产生混沌的人。数学家弗拉基米尔·阿诺德和斯蒂芬·萨马​​尔的重要工作有助于认识到混沌是微分方程的结果。<br>For certain values of k, the map shows chaotic behavior: if we start at some particular initial value of x, the process will evolve one way, but if we start at another initial value, even one very very close to the first value, the process will evolve a completely different way.<br>对于k的某些值，地图显示混沌行为：如果我们从x的某个特定初始值开始，则该过程将以单向进化，但如果我们从另一个初始值开始，即使非常接近第一个值，过程将以完全不同的方式发展。<br>Importance: Helped in the development of chaos theory, which has completely changed our understanding of the way that natural systems work.<br>重要性：帮助混沌理论的发展，这完全改变了我们对自然系统工作方式的理解。<br>We see chaotic behavior — behavior sensitive to initial conditions — like this in many areas. Weather is a classic example — a small change in atmospheric conditions on one day can lead to completely different weather systems a few days later, most commonly captured in the idea of a butterfly flapping its wings on one continent causing a hurricane on another continent.<br>我们看到混乱行为——对初始条件敏感的行为——在许多领域都是如此。天气是一个典型的例子——一天大气条件的微小变化可能导致几天后完全不同的天气系统，最常见的是蝴蝶在一个大陆上扇动翅膀，就可能导致另一个大陆上的飓风。<br>Modern use: Used to model earthquakes and forecast the weather.<br>现代用途：用于模拟地震和预报天气。</p><h2 id="The-Black–Scholes-model"><a href="#The-Black–Scholes-model" class="headerlink" title="The Black–Scholes model"></a>The Black–Scholes model</h2><p>$$\frac{1}{2}\sigma^2S^2\frac{\partial^2V}{\partial S^2}+rS\frac{\partial V}{\partial S}+\frac{\partial V}{\partial t}-rV=0$$<br>F.Black, M.Scholes, 1990<br>What does it mean? Prices a derivative based on the assumption that it is riskless and that there is no arbitrage opportunity when it is priced correctly.<br>作用：基于假设它是无风险的并且在正确定价时没有套利机会来定价衍生品。<br>History: Developed by Fischer Black and Myron Scholes, then expanded by Robert Merton. The latter two won the 1997 Nobel Prize in Economics for the discovery.<br>历史：由Fischer Black和Myron Scholes开发，然后由Robert Merton扩展。后两者因此获得了1997年诺贝尔经济学奖。<br>Importance: Helped create the now multi-trillion dollar derivatives market. It is argued that improper use of the formula (and its descendants) contributed to the financial crisis. In particular, the equation maintains several assumptions that do not hold true in real financial markets.<br>重要性：帮助创造了现在数万亿美元的衍生品市场。有人认为，不恰当地使用公式（及其推论）会导致金融危机。特别是，该等式保留了几个在实际金融市场中不成立的假设。<br>Modern use: Variants are still used to price most derivatives, even after the financial crisis.<br>现代用途：即使在金融危机之后，它的变体仍然被用来为大多数衍生品定价。</p><p>购书链接：<a href="https://www.amazon.com/gp/product/0465029736" target="_blank" rel="noopener">17 Equations That Changed the World</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这篇文章翻译自：&lt;a href=&quot;http://www.businessinsider.com/equations-that-changed-the-world-2016-3&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;17 Equations That Changed the World&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In 2012, Mathematician Ian Stewart came out with an excellent and deeply researched book titled “In Pursuit of the Unknown: 17 Equations That Changed the World.”&lt;br&gt;在2012年，数学家斯图尔特（Ian Stewart）出版了一本精彩而深入研究的著作，名为《追寻未知：改变世界的17个公式》&lt;br&gt;His book takes a look at the most pivotal equations of all time, and puts them in a human, rather than technical context.&lt;br&gt;他的书着眼于有史以来最关键的方程式，并将它们置于普通人而非专业的背景中。&lt;br&gt;“Equations definitely can be dull, and they can seem complicated, but that’s because they are often presented in a dull and complicated way,” Stewart told Business Insider. “I have an advantage over school math teachers: I’m not trying to show you how to do the sums yourself.”&lt;br&gt;“方程式肯定会显得沉闷，而且它们看起来很复杂，但那是因为它们经常以这样的方式呈现，”斯图尔特告诉Business Insider。 “我比学校的数学老师更有优势：我不会试图告诉你如何自己算出它们。”&lt;br&gt;He explained that anyone can “appreciate the beauty and importance of equations without knowing how to solve them … The intention is to locate them in their cultural and human context, and pull back the veil on their hidden effects on history.”&lt;br&gt;他解释说，任何人都可以“欣赏方程式的美丽和重要性，而不去知道如何解它们……目的是将它们置于文化和人文环境中，并揭开它们对历史隐藏效应的面纱。”&lt;br&gt;Stewart continued that “equations are a vital part of our culture. The stories behind them — the people who discovered or invented them and the periods in which they lived — are fascinating.”&lt;br&gt;斯图尔特继续说道，“方程式是我们文化的重要组成部分。他们背后的故事——发现或发明它们的人以及他们生活的时期——都很吸引人。”&lt;br&gt;Here are 17 equations that have changed the world:&lt;br&gt;以下是改变世界的17个方程式：&lt;br&gt;Max Nisen contributed to an earlier version of this post.&lt;br&gt;Max Nisen为本文的早期版本做出了贡献。&lt;/p&gt;
&lt;h2 id=&quot;The-Pythagorean-Theorem&quot;&gt;&lt;a href=&quot;#The-Pythagorean-Theorem&quot; class=&quot;headerlink&quot; title=&quot;The Pythagorean Theorem&quot;&gt;&lt;/a&gt;The Pythagorean Theorem&lt;/h2&gt;&lt;p&gt;$$a^{2}+b^{2}=c^{2}$$&lt;br&gt;Pythagoras, 530 BC&lt;br&gt;What does it mean? The square of the hypotenuse of a right triangle is equal to the sum of the squares of its legs.&lt;br&gt;作用：直角三角形的斜边的平方等于其直角边的平方和。&lt;br&gt;History: Though attributed to Pythagoras, it is not certain that he was the first person to prove it. The first clear proof came from Euclid, and it is possible the concept was known 1,000 years before Pythagoras by the Babylonians.&lt;br&gt;历史：虽然认为毕达哥拉斯（Pythagoras）发现了这个公式，但不确定他是否是第一个证明它的人。第一个明确的证明来自欧几里得，而这个概念可能是在毕达哥拉斯之前1000年就被巴比伦人知道了。&lt;br&gt;Importance: The equation is at the core of much of geometry, links it with algebra, and is the foundation of trigonometry. Without it, accurate surveying, mapmaking, and navigation would be impossible.&lt;br&gt;重要性：勾股定理是几何的核心，它与代数联系起来，是三角学的基础。没有它，准确的测量、地图制作和导航将是不可能的。&lt;br&gt;In terms of pure math, the Pythagorean Theorem defines normal, Euclidean plane geometry. For example, a right triangle drawn on the surface of a sphere like the Earth doesn’t necessarily satisfy the theorem.&lt;br&gt;在纯数学方面，毕达哥拉斯定理定义了正常的欧几里德平面几何。例如，在像地球一样的球体表面上绘制的直角三角形不一定满足该定理。&lt;br&gt;Modern use: Triangulation is used to this day to pinpoint relative location for GPS navigation.&lt;br&gt;现代用途：今天使用三角测量来确定GPS导航的相对位置。&lt;/p&gt;
    
    </summary>
    
      <category term="物理" scheme="https://zhangshuqiao.org/categories/%E7%89%A9%E7%90%86/"/>
    
    
  </entry>
  
  <entry>
    <title>手机淘宝的flexible方案</title>
    <link href="https://zhangshuqiao.org/2018-07/%E6%89%8B%E6%9C%BA%E6%B7%98%E5%AE%9D%E7%9A%84flexible%E6%96%B9%E6%A1%88/"/>
    <id>https://zhangshuqiao.org/2018-07/手机淘宝的flexible方案/</id>
    <published>2018-07-15T11:20:25.000Z</published>
    <updated>2018-09-30T11:10:02.512Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>手机淘宝从2014年中开始，全面推行flexible设计。什么叫flexible呢？其实flexible就是responsive的低端形态和基础。对我们来说，最直观的感受就是，在超宽屏幕上，网页显示不会两边留白。以前pc时代大家经常讲的流体布局，其实就是一种flexible design。只不过，流体的表述角度是实现，flexible的表述角度是结果，为了跟高大上的responsive保持一致，我们这里使用了flexible这个说法。<br>讨论方案之前，需要先了解三个关键概念：</p><ul><li>单位英寸像素数（Pixel Per Inch，PPI）：现实世界的一英寸内像素数，决定了屏幕的显示质量</li><li>设备像素比率（Device Pixel Ratio，DPR）：物理像素与逻辑像素（px）的对应关系</li><li>分辨率（Resolution）：屏幕区域的宽高所占像素数</li></ul><p>当我们决定不同屏幕的字体和尺寸的单位时，屏幕的这几个参数非常重要。</p><h2 id="Resolution适配"><a href="#Resolution适配" class="headerlink" title="Resolution适配"></a>Resolution适配</h2><p>一张banner图片，当你面对不同的屏幕时你希望它的行为是怎样的？<br>在这个场景中，我们主要需要面对的是分辨率适配问题，考虑到多数网页都是纵向滚动的，在不同的屏幕尺寸下，banner的行为应该是总是铺满屏幕宽度以及总是保持宽高比。<br>最自然的思路是使用百分比宽度，但是假如使用百分比宽度，即width:100%，我们又有两种思路来实现固定宽高比：一是利用img标签的特性，只设宽度等图片加载完，这种方法会导致大量的重排，并且非固定高度会导致懒加载等功能难以实现，所以果断放弃；二是使用before伪元素的margin撑开高度，这种方法是比较干净的纯css实现，但是不具备任何复用性而且要求特定html结构，所以也只好放弃了。<br>于是，剩下最合适的办法是使用其它相对单位，本来最合适的单位是vw，它的含义是视口宽度，但是这个单位存在严重的兼容问题，所以也只好放弃。<br>最后我们只好配合js来做，硬算也是一条路，但是同样不具备任何可复用性，最终我们选择了rem，我们用js给html设置一个跟屏幕宽度成正比的font-size，然后把元素宽高都用rem作为单位。<br>这是我们目前的线上方案了，它是一个近乎Hack的用法，已知的问题包括：</p><ul><li>某些Android机型会丢掉rem小数部分</li><li>占用了rem单位</li><li>不是纯css方案</li></ul><h2 id="PPI适配"><a href="#PPI适配" class="headerlink" title="PPI适配"></a>PPI适配</h2><p>一段文字，当你面对不同的屏幕时你希望它的行为是怎样的？<br>显然，我们在iPhone3G和iPhone4的Retina屏下面，希望看到的文字尺寸是相同的，也就是说，我们不希望文字在Retina屏尺寸变小，此外，我们在大屏手机上，希望看到更多文字，以及，现在绝大多数的字体文件，是自带一些点阵尺寸的，通常是16px和24px，所以我们不希望出现13px、15px这样的奇葩尺寸。<br>这样的特征决定了，场景1中的rem方案，不适合用到段落文字上。所以段落文字应该使用px作为单位，考虑到Retina，我们利用media query来指定不同的字体，考虑到dpr判定的兼容性，我们用宽度替换来代替：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.a</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> (min-width: <span class="number">401px</span>) &#123;</span><br><span class="line">    <span class="selector-class">.a</span> &#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">24px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>另一种场景，一些标题性文字，希望随着屏幕宽而增大的，我们可以仍然使用rem作为单位。超过35px（个人直观感受）的文字，已经不用太考虑点阵信息了，靠字体的矢量信息也能渲染的很好。</p><h2 id="DPR匹配"><a href="#DPR匹配" class="headerlink" title="DPR匹配"></a>DPR匹配</h2><p>一个区块，设计稿上有1像素边框，当你面对不同的屏幕时你希望它的行为是怎样的？<br>这个场景，需求很简单，设计师希望在任何屏幕上这条线都是1物理像素。<br>好吧，当然这个问题的答案不是写1px那么简单。在retina屏下面，如果你写了这样的meta：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no"</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>你将永远无法写出1px宽度的东西，除此之外，inline的SVG等元素，也会按照逻辑像素来渲染，整个页面的清晰度会打折。<br>所以，手机淘宝用JS来动态写meta标签，代码类似这样：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> metaEl = <span class="built_in">document</span>.createElement(<span class="string">'meta'</span>);</span><br><span class="line"><span class="keyword">var</span> scale = isRetina ? <span class="number">0.5</span> : <span class="number">1</span>;</span><br><span class="line">metaEl.setAttribute(<span class="string">'name'</span>, <span class="string">'viewport'</span>);</span><br><span class="line">metaEl.setAttribute(<span class="string">'content'</span>, <span class="string">'initial-scale='</span> + scale + <span class="string">', maximum-scale='</span> + scale + <span class="string">', minimum-scale='</span> + scale + <span class="string">', user-scalable=no'</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">document</span>.documentElement.firstElementChild) &#123;</span><br><span class="line">    <span class="built_in">document</span>.documentElement.firstElementChild.appendChild(metaEl);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> wrap = <span class="built_in">document</span>.createElement(<span class="string">'div'</span>);</span><br><span class="line">    wrap.appendChild(metaEl);</span><br><span class="line">    <span class="built_in">document</span>.write(wrap.innerHTML);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>总的来说，手机淘宝的flexible方案是综合运用rem和px两种单位+js设置scale和html字体。<br>这些JS的内容，可以在我们开源的库ml中找到：<br><a href="https://github.com/amfe/lib.flexible" target="_blank" rel="noopener">https://github.com/amfe/lib.flexible</a></p><p>参考文章：<br><a href="http://www.html-js.com/article/2402" target="_blank" rel="noopener">手机淘宝的flexible设计与实现</a><br><a href="http://www.html-js.com/article/2400" target="_blank" rel="noopener">关于webapp中的文字单位的一些捣腾</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;手机淘宝从2014年中开始，全面推行flexible设计。什么叫flexible呢？其实flexible就是responsive的低端形态和
      
    
    </summary>
    
      <category term="程序设计" scheme="https://zhangshuqiao.org/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="CSS" scheme="https://zhangshuqiao.org/tags/CSS/"/>
    
      <category term="HTML" scheme="https://zhangshuqiao.org/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>详解CSRF与XSS攻击</title>
    <link href="https://zhangshuqiao.org/2018-07/%E8%AF%A6%E8%A7%A3CSRF%E4%B8%8EXSS%E6%94%BB%E5%87%BB/"/>
    <id>https://zhangshuqiao.org/2018-07/详解CSRF与XSS攻击/</id>
    <published>2018-07-13T09:07:22.000Z</published>
    <updated>2018-09-30T11:10:42.163Z</updated>
    
    <content type="html"><![CDATA[<p>在之前的一篇文章中，提到了WordPress的插件审核机制，其中对于代码安全性的要求，主要就是对CSRF与XSS攻击的防范。官方邮件中这样写道：</p><blockquote><h2 id="Not-using-Nonces-and-or-checking-permissions"><a href="#Not-using-Nonces-and-or-checking-permissions" class="headerlink" title="Not using Nonces and/or checking permissions"></a>Not using Nonces and/or checking permissions</h2><p>Please add a nonce to your POST calls to prevent unauthorized access.<br>Keep in mind, check_admin_referer alone is NOT bulletproof security. Do not rely on nonces for authorization purposes. Use current_user_can() in order to prevent users without the right permissions from accessing things.</p></blockquote><blockquote><h2 id="Please-sanitize-escape-and-validate-your-POST-calls"><a href="#Please-sanitize-escape-and-validate-your-POST-calls" class="headerlink" title="Please sanitize, escape, and validate your POST calls"></a>Please sanitize, escape, and validate your POST calls</h2><p>When you include POST/GET/REQUEST/FILE calls in your plugin, it’s important to sanitize, validate, and escape them. The goal here is to prevent a user from accidentally sending trash data through the system, as well as protecting them from potential security issues.<br>SANITIZE: Data that is input (either by a user or automatically) must be sanitized. This lessens the possibility of XSS vulnerabilities and MITM attacks where posted data is subverted.<br>VALIDATE: All data should be validated as much as possible. Even when you sanitize, remember that you don’t want someone putting in ‘dog’ when the only valid values are numbers.<br>ESCAPE: Data that is output must be escaped properly, so it can’t hijack admin screens. There are many esc_*() functions you can use to make sure you don’t show people the wrong data.<br>To help you with this, WordPress comes with a number of sanitization and escaping functions. You can read about those here: <a href="https://developer.wordpress.org/plugins/security/securing-input/" target="_blank" rel="noopener">https://developer.wordpress.org/plugins/security/securing-input/</a><br>Remember: You must use the MOST appropriate functions for the context. If you’re sanitizing email, use sanitize_email(), if you’re outputting HTML, use esc_html(), and so on.<br>Clean everything, check everything, escape everything, and never trust the users to always have input sane data.</p></blockquote><p>下面通过维基百科的内容介绍CSRF与XSS攻击的具体形式。</p><a id="more"></a><h1 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h1><p>跨站请求伪造（英语：Cross-site request forgery），也被称为one-click attack或者session riding，通常缩写为CSRF或者XSRF，是一种挟制用户在当前已登录的Web应用程序上执行非本意的操作的攻击方法。跟跨网站脚本（XSS）相比，XSS利用的是用户对指定网站的信任，CSRF利用的是网站对用户网页浏览器的信任。</p><h2 id="攻击的细节"><a href="#攻击的细节" class="headerlink" title="攻击的细节"></a>攻击的细节</h2><p>跨站请求攻击，简单地说，是攻击者通过一些技术手段欺骗用户的浏览器去访问一个自己曾经认证过的网站并执行一些操作（如发邮件，发消息，甚至财产操作如转账和购买商品）。由于浏览器曾经认证过，所以被访问的网站会认为是真正的用户操作而去执行。这利用了web中用户身份验证的一个漏洞：<strong>简单的身份验证只能保证请求发自某个用户的浏览器，却不能保证请求本身是用户自愿发出的</strong>。</p><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>假如一家银行用以执行转账操作的URL地址为<code>http://www.examplebank.com/withdraw?account=AccoutName&amp;amount=1000&amp;for=PayeeName</code>，那么，一个恶意攻击者可以在另一个网站上放置如下代码：<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">&lt;img src="&lt;http://www.examplebank.com/withdraw?account=Alice<span class="variable">&amp;amount</span>=<span class="number">1000</span><span class="variable">&amp;for</span>=Badman&gt;</span><span class="string">"&gt;</span></span><br></pre></td></tr></table></figure></p><p>如果有账户名为Alice的用户访问了恶意站点，而她之前刚访问过银行不久，登录信息尚未过期，那么她就会损失1000资金。<br>这种恶意的网址可以有很多种形式，藏身于网页中的许多地方。此外，攻击者也不需要控制放置恶意网址的网站。例如他可以将这种地址藏在论坛，博客等任何用户生成内容的网站中。这意味着<strong>如果服务器端没有合适的防御措施的话，用户即使访问熟悉的可信网站也有受攻击的危险</strong>。<br>透过例子能够看出，攻击者并不能通过CSRF攻击来直接获取用户的账户控制权，也不能直接窃取用户的任何信息。他们能做到的，是<strong>欺骗用户浏览器，让其以用户的名义执行操作</strong>。</p><h2 id="防御措施"><a href="#防御措施" class="headerlink" title="防御措施"></a>防御措施</h2><h3 id="检查Referer字段"><a href="#检查Referer字段" class="headerlink" title="检查Referer字段"></a>检查Referer字段</h3><p>HTTP头中有一个Referer字段，这个字段用以标明请求来源于哪个地址。在处理敏感数据请求时，通常来说，Referer字段应和请求的地址位于同一域名下。以上文银行操作为例，Referer字段地址通常应该是转账按钮所在的网页地址，应该也位于<code>www.examplebank.com</code>之下。而如果是CSRF攻击传来的请求，Referer字段会是包含恶意网址的地址，不会位于<code>www.examplebank.com</code>之下，这时候服务器就能识别出恶意的访问。<br>这种办法简单易行，工作量低，仅需要在关键访问处增加一步校验。但这种办法也有其局限性，因其完全依赖浏览器发送正确的Referer字段。虽然http协议对此字段的内容有明确的规定，但并无法保证来访的浏览器的具体实现，亦无法保证浏览器没有安全漏洞影响到此字段。并且也存在攻击者攻击某些浏览器，篡改其Referer字段的可能。</p><h3 id="添加校验token"><a href="#添加校验token" class="headerlink" title="添加校验token"></a>添加校验token</h3><p>由于CSRF的本质在于攻击者欺骗用户去访问自己设置的地址，所以如果要求在访问敏感数据请求时，要求用户浏览器提供不保存在cookie中，并且攻击者无法伪造的数据作为校验，那么攻击者就无法再执行CSRF攻击。这种数据通常是表单中的一个数据项。服务器将其生成并附加在表单中，其内容是一个伪乱数。当客户端通过表单提交请求时，这个伪乱数也一并提交上去以供校验。正常的访问时，客户端浏览器能够正确得到并传回这个伪乱数，而通过CSRF传来的欺骗性攻击中，攻击者无从事先得知这个伪乱数的值，服务器端就会因为校验token的值为空或者错误，拒绝这个可疑请求。</p><h1 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h1><p>跨站脚本（英语：Cross-site scripting，通常简称为：XSS）是一种网站应用程序的安全漏洞攻击，是代码注入的一种。它允许恶意用户将代码注入到网页上，其他用户在观看网页时就会受到影响。这类攻击通常包含了HTML以及用户端脚本语言。<br>XSS攻击通常指的是通过利用网页开发时留下的漏洞，通过巧妙的方法注入恶意指令代码到网页，使用户加载并执行攻击者恶意制造的网页程序。这些恶意网页程序通常是JavaScript，但实际上也可以包括Java，VBScript，ActiveX，Flash或者甚至是普通的HTML。攻击成功后，攻击者可能得到更高的权限（如执行一些操作）、私密网页内容、会话和cookie等各种内容。</p><h2 id="背景和现状"><a href="#背景和现状" class="headerlink" title="背景和现状"></a>背景和现状</h2><p>当网景（Netscape）最初推出JavaScript语言时，他们也察觉到准许网页服务器发送可执行的代码给一个浏览器的安全风险（即使仅是在一个浏览器的沙盒里）。它所造成的一个关键的问题在于用户同时打开多个浏览器视窗时，在某些例子里，网页里的片断代码被允许从另一个网页或对象取出数据，而因为恶意的网站可以用这个方法来尝试窃取机密信息，所以在某些情形，这应是完全被禁止的。为了解决这个问题，浏览器采用了同源决策——仅允许来自相同域名系统和使用相同协议的对象与网页之间的任何交互。这样一来，恶意的网站便无法借由JavaScript在另一个浏览器窃取机密数据。此后，为了保护用户免受恶意的危害，其他的浏览器与服务端指令语言采用了类似的访问控制决策。<br>XSS漏洞可以追溯到1990年代。大量的网站曾遭受XSS漏洞攻击或被发现此类漏洞，如Twitter，Facebook，MySpace，Orkut，新浪微博和百度贴吧。研究表明，最近几年XSS已经超过缓冲区溢出成为最流行的攻击方式，有68%的网站可能遭受此类攻击。根据开放网页应用安全计划（Open Web Application Security Project）公布的2010年统计数据，在Web安全威胁前10位中，XSS排名第2，仅次于代码注入（Injection）。</p><h2 id="攻击手段和目的"><a href="#攻击手段和目的" class="headerlink" title="攻击手段和目的"></a>攻击手段和目的</h2><p>攻击者使被攻击者在浏览器中执行脚本后，如果需要收集来自被攻击者的数据（如cookie或其他敏感信息），可以自行架设一个网站，让被攻击者通过JavaScript等方式把收集好的数据作为参数提交，随后以数据库等形式记录在攻击者自己的服务器上。<br>常用的XSS攻击手段和目的有：</p><ul><li>盗用cookie，获取敏感信息。</li><li>利用植入Flash，通过crossdomain权限设置进一步获取更高权限；或者利用Java等得到类似的操作。</li><li>利用iframe、frame、XMLHttpRequest或上述Flash等方式，以（被攻击）用户的身份执行一些管理动作，或执行一些一般的如发微博、加好友、发私信等操作。</li><li>利用可被攻击的域受到其他域信任的特点，以受信任来源的身份请求一些平时不允许的操作，如进行不当的投票活动。</li><li>在访问量极大的一些页面上的XSS可以攻击一些小型网站，实现DDoS攻击的效果。</li></ul><h2 id="漏洞的防御和利用"><a href="#漏洞的防御和利用" class="headerlink" title="漏洞的防御和利用"></a>漏洞的防御和利用</h2><h3 id="过滤特殊字符"><a href="#过滤特殊字符" class="headerlink" title="过滤特殊字符"></a>过滤特殊字符</h3><p>避免XSS的方法之一主要是将用户所提供的内容进行过滤，许多语言都有提供对HTML的过滤：</p><ul><li>PHP的<code>htmlentities()</code>或是<code>htmlspecialchars()</code>。</li><li>Python的<code>cgi.escape()</code>。</li><li>ASP的<code>Server.HTMLEncode()</code>。</li><li>ASP.NET的<code>Server.HtmlEncode()</code>或功能更强的Microsoft Anti-Cross Site Scripting Library。</li><li>Java的xssprotect(Open Source Library)。</li><li>Node.js的node-validator。</li></ul><h3 id="使用HTTP头指定类型"><a href="#使用HTTP头指定类型" class="headerlink" title="使用HTTP头指定类型"></a>使用HTTP头指定类型</h3><p>很多时候可以使用HTTP头指定内容的类型，使得输出的内容避免被作为HTML解析。如在PHP语言中使用以下代码：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    header(<span class="string">'Content-Type: text/javascript; charset=utf-8'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>即可强行指定输出内容为文本/JavaScript脚本（顺便指定了内容编码），而非可以引发攻击的HTML。</p><h3 id="用户方面"><a href="#用户方面" class="headerlink" title="用户方面"></a>用户方面</h3><p>包括Internet Explorer、Mozilla Firefox在内的大多数浏览器皆有关闭JavaScript的选项，但关闭功能并非是最好的方法，因为许多网站都需要使用JavaScript语言才能正常运作。通常来说，一个经常有安全更新推出的浏览器，在使用上会比很久都没有更新的浏览器更为安全。</p><p>参考文章：<br><a href="https://zh.wikipedia.org/wiki/跨站请求伪造" target="_blank" rel="noopener">跨站请求伪造 - 维基百科</a><br><a href="https://zh.wikipedia.org/wiki/跨網站指令碼" target="_blank" rel="noopener">跨站脚本 - 维基百科</a><br><a href="https://codex.wordpress.org/WordPress_Nonces" target="_blank" rel="noopener">WordPress Nonces</a><br><a href="https://developer.wordpress.org/plugins/security/securing-input" target="_blank" rel="noopener">Securing Input</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在之前的一篇文章中，提到了WordPress的插件审核机制，其中对于代码安全性的要求，主要就是对CSRF与XSS攻击的防范。官方邮件中这样写道：&lt;/p&gt;
&lt;blockquote&gt;
&lt;h2 id=&quot;Not-using-Nonces-and-or-checking-permissions&quot;&gt;&lt;a href=&quot;#Not-using-Nonces-and-or-checking-permissions&quot; class=&quot;headerlink&quot; title=&quot;Not using Nonces and/or checking permissions&quot;&gt;&lt;/a&gt;Not using Nonces and/or checking permissions&lt;/h2&gt;&lt;p&gt;Please add a nonce to your POST calls to prevent unauthorized access.&lt;br&gt;Keep in mind, check_admin_referer alone is NOT bulletproof security. Do not rely on nonces for authorization purposes. Use current_user_can() in order to prevent users without the right permissions from accessing things.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;h2 id=&quot;Please-sanitize-escape-and-validate-your-POST-calls&quot;&gt;&lt;a href=&quot;#Please-sanitize-escape-and-validate-your-POST-calls&quot; class=&quot;headerlink&quot; title=&quot;Please sanitize, escape, and validate your POST calls&quot;&gt;&lt;/a&gt;Please sanitize, escape, and validate your POST calls&lt;/h2&gt;&lt;p&gt;When you include POST/GET/REQUEST/FILE calls in your plugin, it’s important to sanitize, validate, and escape them. The goal here is to prevent a user from accidentally sending trash data through the system, as well as protecting them from potential security issues.&lt;br&gt;SANITIZE: Data that is input (either by a user or automatically) must be sanitized. This lessens the possibility of XSS vulnerabilities and MITM attacks where posted data is subverted.&lt;br&gt;VALIDATE: All data should be validated as much as possible. Even when you sanitize, remember that you don’t want someone putting in ‘dog’ when the only valid values are numbers.&lt;br&gt;ESCAPE: Data that is output must be escaped properly, so it can’t hijack admin screens. There are many esc_*() functions you can use to make sure you don’t show people the wrong data.&lt;br&gt;To help you with this, WordPress comes with a number of sanitization and escaping functions. You can read about those here: &lt;a href=&quot;https://developer.wordpress.org/plugins/security/securing-input/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://developer.wordpress.org/plugins/security/securing-input/&lt;/a&gt;&lt;br&gt;Remember: You must use the MOST appropriate functions for the context. If you’re sanitizing email, use sanitize_email(), if you’re outputting HTML, use esc_html(), and so on.&lt;br&gt;Clean everything, check everything, escape everything, and never trust the users to always have input sane data.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下面通过维基百科的内容介绍CSRF与XSS攻击的具体形式。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="https://zhangshuqiao.org/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="HTML" scheme="https://zhangshuqiao.org/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>Hexo内容压缩</title>
    <link href="https://zhangshuqiao.org/2018-07/Hexo%E5%86%85%E5%AE%B9%E5%8E%8B%E7%BC%A9/"/>
    <id>https://zhangshuqiao.org/2018-07/Hexo内容压缩/</id>
    <published>2018-07-09T23:16:41.000Z</published>
    <updated>2018-07-29T14:10:09.868Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo生成的博客静态页面存在一些问题：页面中有大量空白行。虽然这对浏览器的渲染影响微乎其微，但是让强迫症极为难受。可以在博客的主目录下（与public文件夹同级）新建以下python脚本：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> re, os</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">minify_html</span><span class="params">(filename)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(filename, <span class="string">'r'</span>) <span class="keyword">as</span> p:</span><br><span class="line">        <span class="keyword">with</span> open(filename + <span class="string">'.tmp'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> t:</span><br><span class="line">            <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">                l = p.readline()</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> l:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">if</span> re.search(<span class="string">'\S'</span>, l):</span><br><span class="line">                        t.write(l)</span><br><span class="line">    os.remove(filename)</span><br><span class="line">    os.rename(filename + <span class="string">'.tmp'</span>, filename)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'INFO  Minified: \033[35m%s\033[0m'</span> % filename</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">minify_all</span><span class="params">(dir_path)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> dir_path[len(dir_path) - <span class="number">1</span>] == <span class="string">'/'</span>:</span><br><span class="line">        dir_path = dir_path[:len(dir_path) - <span class="number">1</span>]</span><br><span class="line">    file_list = os.listdir(dir_path)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> file_list:</span><br><span class="line">        <span class="keyword">if</span> i.find(<span class="string">'html'</span>) &gt; <span class="number">0</span>:</span><br><span class="line">            minify_html(dir_path + <span class="string">'/'</span> + i)</span><br><span class="line">        <span class="keyword">elif</span> os.path.isdir(dir_path + <span class="string">'/'</span> + i) <span class="keyword">and</span> <span class="keyword">not</span> re.match(<span class="string">'\.|\_'</span>, i):</span><br><span class="line">            minify_all(<span class="string">"%s/%s"</span> % (dir_path, i))</span><br><span class="line"></span><br><span class="line">minify_all(<span class="string">'public'</span>)</span><br></pre></td></tr></table></figure></p><p>这样，在每次执行<code>hexo d</code>之前，执行该脚本，就可以上传压缩后的页面了。</p><a id="more"></a><p>如果Hexo博客托管在GitHub Pages等第三方平台上，为了减少页面的加载时间，对图片等内容进行CDN加速是一个不错的方法。当然，还有一个更为直接的方法，那就是通过调整分辨率减少图片大小。这是压缩图片的脚本：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">compressImage</span><span class="params">(srcPath, dstPath)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> filename <span class="keyword">in</span> os.listdir(srcPath):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(dstPath):</span><br><span class="line">            os.makedirs(dstPath)</span><br><span class="line"></span><br><span class="line">        srcFile = os.path.join(srcPath, filename)</span><br><span class="line">        dstFile = os.path.join(dstPath, filename)</span><br><span class="line">        <span class="keyword">if</span> os.path.isfile(srcFile):</span><br><span class="line">            <span class="keyword">if</span> os.path.isfile(dstFile) <span class="keyword">or</span> (<span class="keyword">not</span> srcFile.endswith(<span class="string">".jpg"</span>) <span class="keyword">and</span> <span class="keyword">not</span> srcFile.endswith(<span class="string">".png"</span>)):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> os.path.getsize(srcFile) &lt;= <span class="number">300000</span>:</span><br><span class="line">                shutil.copyfile(srcFile, dstFile)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            sImg = Image.open(srcFile)</span><br><span class="line">            w, h = sImg.size</span><br><span class="line">            dImg = sImg.resize((w * <span class="number">2</span> / <span class="number">3</span>, h * <span class="number">2</span> / <span class="number">3</span>), Image.ANTIALIAS)</span><br><span class="line">            dImg.save(dstFile)</span><br><span class="line">            <span class="keyword">print</span> <span class="string">'INFO  Minified: \033[35m%s\033[0m'</span> % dstFile</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> os.path.isdir(srcFile):</span><br><span class="line">            compressImage(srcFile, dstFile)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    compressImage(<span class="string">"images"</span>, <span class="string">"source/images"</span>)</span><br></pre></td></tr></table></figure></p><p>在每次执行<code>hexo g</code>之前，在博客的主目录下执行该脚本，就可以将images目录下的高分辨率图片，压缩并存储到source/images目录下。如果要在Markdown文件中插入图片，使用<code>![](/images/path/to/your/images)</code>即可。<br>如果有兴趣，你也可以使用<code>os.walk()</code>方法改写以上脚本，这可能会更加简洁。</p><p>参考文章：<br><a href="https://blog.jiangjiaolong.com/hexo-next-theme-minify.html" target="_blank" rel="noopener">hexo next主题大量空白行问题</a><br><a href="https://blog.csdn.net/u012234115/article/details/50248409" target="_blank" rel="noopener">python脚本编程：批量压缩图片大小</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hexo生成的博客静态页面存在一些问题：页面中有大量空白行。虽然这对浏览器的渲染影响微乎其微，但是让强迫症极为难受。可以在博客的主目录下（与public文件夹同级）新建以下python脚本：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#-*- coding:utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; re, os&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;minify_html&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(filename)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; open(filename, &lt;span class=&quot;string&quot;&gt;&#39;r&#39;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; p:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; open(filename + &lt;span class=&quot;string&quot;&gt;&#39;.tmp&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;w&#39;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; t:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                l = p.readline()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; l:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; re.search(&lt;span class=&quot;string&quot;&gt;&#39;\S&#39;&lt;/span&gt;, l):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        t.write(l)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    os.remove(filename)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    os.rename(filename + &lt;span class=&quot;string&quot;&gt;&#39;.tmp&#39;&lt;/span&gt;, filename)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;INFO  Minified: \033[35m%s\033[0m&#39;&lt;/span&gt; % filename&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;minify_all&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(dir_path)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; dir_path[len(dir_path) - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] == &lt;span class=&quot;string&quot;&gt;&#39;/&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dir_path = dir_path[:len(dir_path) - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    file_list = os.listdir(dir_path)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; file_list:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; i.find(&lt;span class=&quot;string&quot;&gt;&#39;html&#39;&lt;/span&gt;) &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            minify_html(dir_path + &lt;span class=&quot;string&quot;&gt;&#39;/&#39;&lt;/span&gt; + i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; os.path.isdir(dir_path + &lt;span class=&quot;string&quot;&gt;&#39;/&#39;&lt;/span&gt; + i) &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; re.match(&lt;span class=&quot;string&quot;&gt;&#39;\.|\_&#39;&lt;/span&gt;, i):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            minify_all(&lt;span class=&quot;string&quot;&gt;&quot;%s/%s&quot;&lt;/span&gt; % (dir_path, i))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;minify_all(&lt;span class=&quot;string&quot;&gt;&#39;public&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样，在每次执行&lt;code&gt;hexo d&lt;/code&gt;之前，执行该脚本，就可以上传压缩后的页面了。&lt;/p&gt;
    
    </summary>
    
      <category term="程序设计" scheme="https://zhangshuqiao.org/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="Python" scheme="https://zhangshuqiao.org/tags/Python/"/>
    
      <category term="Hexo" scheme="https://zhangshuqiao.org/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo NexT主题优化</title>
    <link href="https://zhangshuqiao.org/2018-07/Hexo%20NexT%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/"/>
    <id>https://zhangshuqiao.org/2018-07/Hexo NexT主题优化/</id>
    <published>2018-07-08T04:06:22.000Z</published>
    <updated>2018-09-30T11:09:33.878Z</updated>
    
    <content type="html"><![CDATA[<p>因为旧版本已经停止维护，博主近日将Hexo博客的NexT主题由5.1版本升级为了6.0。由于曾经手动修改过主题的部分css样式和js代码，更新后需要再次调整，故将具体的内容记录于此。<br>这些自定义内容适用于Gemini，对于其它主题可能需要微调。以下所有提到的文件都在<code>themes/next</code>目录下，为相对路径。对于css（即styl文件），可以直接修改原文件，也可以将样式添加到<code>source/css/_custom/custom.styl</code>中。</p><h2 id="链接颜色"><a href="#链接颜色" class="headerlink" title="链接颜色"></a>链接颜色</h2><p>在<code>source/css/_variables/base.styl</code>文件中定义了各种项目的默认颜色。<code>$link-color</code>和<code>$link-hover-color</code>就是链接在默认和鼠标悬浮状态下的颜色，可以将他们修改为其他的颜色宏。</p><h2 id="“链接”到顶部高度"><a href="#“链接”到顶部高度" class="headerlink" title="“链接”到顶部高度"></a>“链接”到顶部高度</h2><p>侧边栏中的“链接”项，距离顶部的高度较小，需要修改。在<code>source/css/_schemes/Pisces/_sidebar.styl</code>文件中，找到并注释掉<code>margin-top: 0;</code>即可：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.links-of-blogroll-title</span> &#123; <span class="comment">/* margin-top: 0; */</span> &#125;</span><br></pre></td></tr></table></figure></p><h2 id="time标签"><a href="#time标签" class="headerlink" title="time标签"></a>time标签</h2><p>新版本中的文章发布时间使用了time标签，部分浏览器下可能出现问题，可以将其改为span标签，方法是编辑<code>layout/_macro/post-collapse.swig</code>和<code>layout/_macro/post.swig</code>，将其中的time标签修改为span即可。</p><h2 id="图片margin"><a href="#图片margin" class="headerlink" title="图片margin"></a>图片margin</h2><p>加载了fancybox的图片，其在页面中的位置也需要修改。在<code>source/css/_common/components/post/post-expand.styl</code>文件中找到并修改如下内容：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-class">.fancybox</span> <span class="selector-tag">img</span> &#123; <span class="attribute">margin</span>: <span class="number">10px</span> auto -<span class="number">10px</span>; &#125;</span><br></pre></td></tr></table></figure></p><h2 id="word-break"><a href="#word-break" class="headerlink" title="word-break"></a>word-break</h2><p>如果博客内容是中英文混杂，为了防止移动端排版问题，可以打开<code>source/css/_common/components/post/post.styl</code>，编辑<code>word-break</code>的规则：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.post-body</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: $font-family-posts;</span><br><span class="line">  +mobile() &#123;</span><br><span class="line">    <span class="selector-tag">word-break</span>: <span class="selector-tag">break-all</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="needsharebutton"><a href="#needsharebutton" class="headerlink" title="needsharebutton"></a>needsharebutton</h2><p>可以为needsharebutton添加自定义文字。在<code>layout/_macro/post.swig</code>中，找到并修改：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"needsharebutton-postbottom"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">style</span>=<span class="string">"font-size: 18px;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-share-alt"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span> 分享<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="canvas-ribbon"><a href="#canvas-ribbon" class="headerlink" title="canvas-ribbon"></a>canvas-ribbon</h2><p>没人知道为什么canvas-ribbon背景“Only fit scheme Pisces”而不能在其它主题下使用。在<code>layout/_scripts/vendors.swig</code>中，找到<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.canvas_ribbon.enable and theme.scheme === <span class="string">'Pisces'</span>%&#125;</span><br><span class="line">  &#123;% set js_vendors.canvas_ribbon  = <span class="string">'canvas-ribbon/canvas-ribbon.js'</span> %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></p><p>删除<code>theme.scheme === &#39;Pisces&#39;</code>即可。</p><p><strong>注：如果在NexT主题下的<code>_config.yml</code>文件中，设置了<code>han: true</code>，这时还需要修改以下内容。若没有启用可忽略。</strong></p><h2 id="正文到标题距离"><a href="#正文到标题距离" class="headerlink" title="正文到标题距离"></a>正文到标题距离</h2><p>每一篇文章的内容到文章标题的margin默认是60px，在某些情况下这可能太大了。在<code>source/css/_common/components/post/post-meta.styl</code>中，将<code>.posts-expand .post-meta</code>的margin-bottom修改为30px：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-meta</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">3px</span> <span class="number">0</span> <span class="number">30px</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure></p><h2 id="小标题的margin"><a href="#小标题的margin" class="headerlink" title="小标题的margin"></a>小标题的margin</h2><p>文章内部的h1到h6标题，会存在margin-bottom较小的问题。<br>在<code>source/css/_common/scaffolding/base.styl</code>中找到并修改内容：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span>, <span class="selector-tag">h2</span>, <span class="selector-tag">h3</span>, <span class="selector-tag">h4</span>, <span class="selector-tag">h5</span>, <span class="selector-tag">h6</span> &#123; <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">0</span> <span class="number">30px</span>; &#125;</span><br></pre></td></tr></table></figure></p><p>将0px改为30px即可。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;因为旧版本已经停止维护，博主近日将Hexo博客的NexT主题由5.1版本升级为了6.0。由于曾经手动修改过主题的部分css样式和js代码，更新后需要再次调整，故将具体的内容记录于此。&lt;br&gt;这些自定义内容适用于Gemini，对于其它主题可能需要微调。以下所有提到的文件都在&lt;
      
    
    </summary>
    
      <category term="程序设计" scheme="https://zhangshuqiao.org/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="Hexo" scheme="https://zhangshuqiao.org/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>WordPress中文验证码</title>
    <link href="https://zhangshuqiao.org/2018-07/WordPress%E4%B8%AD%E6%96%87%E9%AA%8C%E8%AF%81%E7%A0%81/"/>
    <id>https://zhangshuqiao.org/2018-07/WordPress中文验证码/</id>
    <published>2018-07-05T13:25:35.000Z</published>
    <updated>2018-07-19T07:42:28.844Z</updated>
    
    <content type="html"><![CDATA[<p>反机器人和垃圾评论是个人博客老生常谈的话题。除了算法特征识别外，最普遍使用的屏蔽方法就是验证码了。在WordPress插件库中，有着各式各样的验证码插件。然而，很多验证码插件都依赖于Google的reCAPTCHA，这在国内无法访问；而一些基于Session或文件验证的验证码插件功能和质量参差不齐，性能和安全程度难以得到保障。虽然博主已经抛弃了WordPress转投Hexo静态博客，但考虑到WordPress中少有适合我国国情的验证码插件，故决定将一些主流图形验证码的功能进行整合，制作为一个全新的通用性更强的验证码解决方案。这个WordPress插件是博主第一次尝试魔改的结果，它被命名为Mimi Captcha，一个同时支持数字、大小写字母、中文、算术的图形验证码插件。<br>本项目基于Vinoj Cardoza的<a href="https://wordpress.org/plugins/captcha-code-authentication" target="_blank" rel="noopener">Captcha Code</a>在GPL协议下二次开发。原项目存在的问题是，验证码中的字符采用同一字体在同一高度下顺序排列，这样非常容易被识别。改动过程中，加入了“超时时间”设置，以及对用户更为友好的“不区分大小写”设置。而验证码图片的生成算法，则进行了重构，很大程度上采用了<a href="http://www.iteye.com/topic/469170" target="_blank" rel="noopener">流水孟春</a>的方案。同时，在IP白名单等功能上，参考了<a href="https://wordpress.org/plugins/captcha" target="_blank" rel="noopener">Captcha</a>的代码。中文验证码和算术验证码则是新加入的功能，在原插件上拓展而成。最终效果如图：<br><img src="/images/2018-07/screenshot-2.png" alt=""></p><a id="more"></a><p><img src="/images/2018-07/screenshot-3.png" alt=""><br><img src="/images/2018-07/screenshot-1.png" alt=""></p><p>代码可以在GitHub上查看：<a href="https://github.com/stevenjoezhang/mimi-captcha" target="_blank" rel="noopener">Mimi Captcha</a><br>同时也发布在了WordPress插件库：<a href="https://wordpress.org/plugins/mimi-captcha" target="_blank" rel="noopener">Mimi Captcha</a><br>吐槽一下WordPress官方团队粗暴无礼的插件审核机制，真的是非常严格呢</p><p>拓展阅读：<a href="https://doc.yonyoucloud.com/doc/ae/920457.html" target="_blank" rel="noopener">知识库：使用Tesseract识别弱验证码</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;反机器人和垃圾评论是个人博客老生常谈的话题。除了算法特征识别外，最普遍使用的屏蔽方法就是验证码了。在WordPress插件库中，有着各式各样的验证码插件。然而，很多验证码插件都依赖于Google的reCAPTCHA，这在国内无法访问；而一些基于Session或文件验证的验证码插件功能和质量参差不齐，性能和安全程度难以得到保障。虽然博主已经抛弃了WordPress转投Hexo静态博客，但考虑到WordPress中少有适合我国国情的验证码插件，故决定将一些主流图形验证码的功能进行整合，制作为一个全新的通用性更强的验证码解决方案。这个WordPress插件是博主第一次尝试魔改的结果，它被命名为Mimi Captcha，一个同时支持数字、大小写字母、中文、算术的图形验证码插件。&lt;br&gt;本项目基于Vinoj Cardoza的&lt;a href=&quot;https://wordpress.org/plugins/captcha-code-authentication&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Captcha Code&lt;/a&gt;在GPL协议下二次开发。原项目存在的问题是，验证码中的字符采用同一字体在同一高度下顺序排列，这样非常容易被识别。改动过程中，加入了“超时时间”设置，以及对用户更为友好的“不区分大小写”设置。而验证码图片的生成算法，则进行了重构，很大程度上采用了&lt;a href=&quot;http://www.iteye.com/topic/469170&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;流水孟春&lt;/a&gt;的方案。同时，在IP白名单等功能上，参考了&lt;a href=&quot;https://wordpress.org/plugins/captcha&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Captcha&lt;/a&gt;的代码。中文验证码和算术验证码则是新加入的功能，在原插件上拓展而成。最终效果如图：&lt;br&gt;&lt;img src=&quot;/images/2018-07/screenshot-2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="程序设计" scheme="https://zhangshuqiao.org/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="WordPress" scheme="https://zhangshuqiao.org/tags/WordPress/"/>
    
      <category term="PHP" scheme="https://zhangshuqiao.org/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>CUPT地震仪的实现</title>
    <link href="https://zhangshuqiao.org/2018-07/CUPT%E5%9C%B0%E9%9C%87%E4%BB%AA%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <id>https://zhangshuqiao.org/2018-07/CUPT地震仪的实现/</id>
    <published>2018-07-02T02:22:49.000Z</published>
    <updated>2018-07-15T09:38:27.588Z</updated>
    
    <content type="html"><![CDATA[<p>2018年CUPT的第一题：</p><blockquote><p><strong>Invent Yourself</strong><br>Construct a simple seismograph that amplifies a local disturbance by mechanical, optical or electrical methods. Determine the typical response curve of your device and investigate the parameters of the damping constant. What is the maximum amplification that you can achieve?<br><strong>自主发明</strong><br>建造一个可以通过力学、光学或电学方法放大局部扰动的简单地震仪。确定你装置的标准响应曲线并且研究阻尼常数的参量。你能达到的最大放大率是多少？</p></blockquote><p>此题的关键便是将地震仪的反应谱通过可观测量进行表示。实现的思路有很多，力学、光学或电学方法都是可行的。综合考虑了实现难度和测量精度后，决定采用以下方案：通过力学方法放大震动，然后利用霍尔片和磁铁将力学量转换为电学量，借助Arduino单片机的模数转换，通过串口将信号输入到电脑，电脑用python监听串口，将获得的数据保存并实时分析、绘图。</p><p>仪器的整体构造如图：<br><img src="/images/2018-07/1.jpg" alt=""></p><a id="more"></a><p>磁铁与霍尔片的细节：<br><img src="/images/2018-07/2.png" alt=""></p><p>Arduino的连接：<br><img src="/images/2018-07/3.png" alt=""></p><p>仪器的工作状态：<br><img src="/images/2018-07/4.png" alt=""><br><img src="/images/2018-07/5.jpg" alt=""></p><p>具体的代码包括Arduino读取模拟信号和串口输出部分（需要使用Arduino IDE编译上传至设备），以及python监听串口、保存数据、绘图部分。<br>所有代码已开源：<a href="https://github.com/stevenjoezhang/CUPT-AnalogReadSerial" target="_blank" rel="noopener">CUPTAnalogReadSerial</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2018年CUPT的第一题：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Invent Yourself&lt;/strong&gt;&lt;br&gt;Construct a simple seismograph that amplifies a local disturbance by mechanical, optical or electrical methods. Determine the typical response curve of your device and investigate the parameters of the damping constant. What is the maximum amplification that you can achieve?&lt;br&gt;&lt;strong&gt;自主发明&lt;/strong&gt;&lt;br&gt;建造一个可以通过力学、光学或电学方法放大局部扰动的简单地震仪。确定你装置的标准响应曲线并且研究阻尼常数的参量。你能达到的最大放大率是多少？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;此题的关键便是将地震仪的反应谱通过可观测量进行表示。实现的思路有很多，力学、光学或电学方法都是可行的。综合考虑了实现难度和测量精度后，决定采用以下方案：通过力学方法放大震动，然后利用霍尔片和磁铁将力学量转换为电学量，借助Arduino单片机的模数转换，通过串口将信号输入到电脑，电脑用python监听串口，将获得的数据保存并实时分析、绘图。&lt;/p&gt;
&lt;p&gt;仪器的整体构造如图：&lt;br&gt;&lt;img src=&quot;/images/2018-07/1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="物理" scheme="https://zhangshuqiao.org/categories/%E7%89%A9%E7%90%86/"/>
    
    
      <category term="Arduino" scheme="https://zhangshuqiao.org/tags/Arduino/"/>
    
      <category term="Python" scheme="https://zhangshuqiao.org/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Safari顶栏彩虹效果</title>
    <link href="https://zhangshuqiao.org/2018-06/Safari%E9%A1%B6%E6%A0%8F%E5%BD%A9%E8%99%B9%E6%95%88%E6%9E%9C/"/>
    <id>https://zhangshuqiao.org/2018-06/Safari顶栏彩虹效果/</id>
    <published>2018-06-25T02:58:01.000Z</published>
    <updated>2018-07-11T12:04:00.591Z</updated>
    
    <content type="html"><![CDATA[<p>从OS X Yosemite系统开始，Safari浏览器的顶部工具栏已经有了类似iOS中的半透明毛玻璃效果了。Safari会自动根据页面的颜色来显示工具栏的毛玻璃特效颜色，而通过CSS中的<code>body:before</code>类，我们可以将其定制一下。具体代码如下：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">2147483647</span>;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">translateY</span>(-99.99px);</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(124deg,</span><br><span class="line">    #FF0000,</span><br><span class="line">    #FF7F00,</span><br><span class="line">    #FFFF00,</span><br><span class="line">    #7FFF00,</span><br><span class="line">    #00FF00,</span><br><span class="line">    #00FF7F,</span><br><span class="line">    #00FFFF,</span><br><span class="line">    #007FFF,</span><br><span class="line">    #0000FF,</span><br><span class="line">    #7F00FF,</span><br><span class="line">    #FF00FF,</span><br><span class="line">    #FF007F,</span><br><span class="line">    #FF0000);</span><br><span class="line">    <span class="attribute">animation</span>: rainbow <span class="number">15s</span> ease infinite;</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">1000%</span> <span class="number">1000%</span>;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">keyframes</span> rainbow &#123;</span><br><span class="line">    0% &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">80%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    50% &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">100%</span> <span class="number">20%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    100% &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">0%</span> <span class="number">80%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>将它们添加到页面中的<code>&lt;style&gt;</code>标签内，并在<code>&lt;body&gt;</code>中加入适当的内容。当使用Safari浏览器打开时，<strong>略微向下滚动页面</strong>，便可以看到顶部栏出现炫酷的彩虹效果。快去试试吧！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;从OS X Yosemite系统开始，Safari浏览器的顶部工具栏已经有了类似iOS中的半透明毛玻璃效果了。Safari会自动根据页面的颜色来显示工具栏的毛玻璃特效颜色，而通过CSS中的&lt;code&gt;body:before&lt;/code&gt;类，我们可以将其定制一下。具体代码如下
      
    
    </summary>
    
      <category term="程序设计" scheme="https://zhangshuqiao.org/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="Mac" scheme="https://zhangshuqiao.org/tags/Mac/"/>
    
      <category term="CSS" scheme="https://zhangshuqiao.org/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>Python标签云拟合图片</title>
    <link href="https://zhangshuqiao.org/2018-06/Python%E6%A0%87%E7%AD%BE%E4%BA%91%E6%8B%9F%E5%90%88%E5%9B%BE%E7%89%87/"/>
    <id>https://zhangshuqiao.org/2018-06/Python标签云拟合图片/</id>
    <published>2018-06-24T03:18:32.000Z</published>
    <updated>2018-09-30T11:08:35.650Z</updated>
    
    <content type="html"><![CDATA[<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="/images/2018-06/tux_after.png" alt=""></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>需要安装的包：</p><ul><li>python3</li><li>pip或pip3</li></ul><p>需要使用pip安装的模块：</p><ul><li>matplotlib</li><li>numpy</li></ul><p>wordcloud模块也是需要的，但使用<code>pip3 install wordcloud</code>大概率会报错。正确的安装方式是：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/amueller/word_cloud/archive/master.zip</span><br><span class="line">unzip master.zip</span><br><span class="line"><span class="built_in">cd</span> word_cloud-master</span><br><span class="line">sudo pip install -r requirements.txt</span><br><span class="line">python setup.py install</span><br></pre></td></tr></table></figure></p><p>这样就完成安装了。</p><a id="more"></a><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> os <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> wordcloud <span class="keyword">import</span> WordCloud, ImageColorGenerator</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">pic = np.array(Image.open(<span class="string">"path/to/your/image.png"</span>))</span><br><span class="line">jsondict = &#123;</span><br><span class="line"><span class="string">"Unix"</span>: <span class="number">9</span>,</span><br><span class="line"><span class="string">"Linus Torvalds"</span>: <span class="number">8</span>,</span><br><span class="line"><span class="string">"Richard Stallman"</span>: <span class="number">8</span>,</span><br><span class="line"><span class="string">"open source"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"Gentoo"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"Archlinux"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"Void Linux"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"Guix"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"free software"</span>: <span class="number">8</span>,</span><br><span class="line"><span class="string">"RadHat"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"php"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"SUSE"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"Ruby"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"Python"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"Go"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"Mandriva"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"root"</span>: <span class="number">5</span>,</span><br><span class="line"><span class="string">"android"</span>: <span class="number">4</span>,</span><br><span class="line"><span class="string">"Lisp"</span>: <span class="number">6</span>,</span><br><span class="line"><span class="string">"C"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"Haskell"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"XMonad"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"javascript"</span>: <span class="number">6</span>,</span><br><span class="line"><span class="string">"clojure"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"bash"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"vim"</span>: <span class="number">4</span>,</span><br><span class="line"><span class="string">"emacs"</span>: <span class="number">4</span>,</span><br><span class="line"><span class="string">"vis"</span>: <span class="number">4</span>,</span><br><span class="line"><span class="string">"ls"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"cd"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"grep"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"sed"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"awk"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"pascal"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"GNU"</span>: <span class="number">9</span>,</span><br><span class="line"><span class="string">"irc"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"inkscape"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"github"</span>: <span class="number">5</span>,</span><br><span class="line"><span class="string">"gitlab"</span>: <span class="number">4</span>,</span><br><span class="line"><span class="string">"FOSDEM"</span>: <span class="number">5</span>,</span><br><span class="line"><span class="string">"GPL"</span>: <span class="number">4</span>,</span><br><span class="line"><span class="string">"Free as in Freedom"</span>: <span class="number">5</span>,</span><br><span class="line"><span class="string">"FOSS"</span>: <span class="number">4</span>,</span><br><span class="line"><span class="string">"Mozilla"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"Busybox"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"qemu"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"gnome"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"android"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"Fedora"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"R"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"xelatex"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"mupdf"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"chromium"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"riot"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"pidgin"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"vlc"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"deadbeef"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"xarchiver"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"calibre"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"s6"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"json"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"chez scheme"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"GIMP"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"gcc"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"debian"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"printf(\"Linux\")"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"echo Linux"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"(println \"Linux\")"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"console.log \"Linux\""</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"(format t \"Linux\")"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"writeln(\"Linux\")"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"PRINT \"Linux\""</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"(insert \"Linux\")"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"fmt.Println(\"Linux\")"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"main = putStrLn \"Linux\""</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"(display \"Linux\")"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"System.out.println(\"Linux\");"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"document.write(\"Linux\")"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"type [Linux]"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"disp('Linux')"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"&lt;?php\necho \"Linux\"\n?&gt;"</span>: <span class="number">3</span>,</span><br><span class="line"><span class="string">"Ubuntu"</span>: <span class="number">3</span></span><br><span class="line">&#125;</span><br><span class="line">image_colors = ImageColorGenerator(pic,[<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>])</span><br><span class="line">wc = WordCloud(background_color=<span class="string">"white"</span>, mask=pic)</span><br><span class="line">wc.generate_from_frequencies(jsondict)</span><br><span class="line"></span><br><span class="line">plt.imshow(wc.recolor(color_func=image_colors), interpolation=<span class="string">"bilinear"</span>)</span><br><span class="line">plt.axis(<span class="string">"off"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>将<code>path/to/your/image.png</code>换为你要制作的图片，例如下面这张：<br><img src="/images/2018-06/tux.png" alt=""></p><p>当然也可以替换为自己的图片，支持多种格式，但为了保证效果，非主体部分应填充白色。<br>jsondict是标签云中文字的内容和权重（大小），自行修改即可。<br>保存后使用python3执行以上代码，即可得到拟合出的图片。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;效果&quot;&gt;&lt;a href=&quot;#效果&quot; class=&quot;headerlink&quot; title=&quot;效果&quot;&gt;&lt;/a&gt;效果&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/images/2018-06/tux_after.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h2&gt;&lt;p&gt;需要安装的包：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;python3&lt;/li&gt;
&lt;li&gt;pip或pip3&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;需要使用pip安装的模块：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;matplotlib&lt;/li&gt;
&lt;li&gt;numpy&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;wordcloud模块也是需要的，但使用&lt;code&gt;pip3 install wordcloud&lt;/code&gt;大概率会报错。正确的安装方式是：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget https://github.com/amueller/word_cloud/archive/master.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;unzip master.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; word_cloud-master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo pip install -r requirements.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;python setup.py install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样就完成安装了。&lt;/p&gt;
    
    </summary>
    
      <category term="程序设计" scheme="https://zhangshuqiao.org/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="Python" scheme="https://zhangshuqiao.org/tags/Python/"/>
    
  </entry>
  
</feed>
