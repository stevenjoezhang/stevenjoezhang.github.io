<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>米米的博客</title>
  
  <subtitle>做了一点微小的工作</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zhangshuqiao.org/"/>
  <updated>2019-07-23T08:36:21.118Z</updated>
  <id>https://zhangshuqiao.org/</id>
  
  <author>
    <name>张书樵</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>青海湖之行</title>
    <link href="https://zhangshuqiao.org/2019-07/%E9%9D%92%E6%B5%B7%E6%B9%96%E4%B9%8B%E8%A1%8C/"/>
    <id>https://zhangshuqiao.org/2019-07/青海湖之行/</id>
    <published>2019-07-22T15:41:04.000Z</published>
    <updated>2019-07-23T08:36:21.118Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/2019-07/IMG_5005.jpg" alt></p><blockquote><p>嘉峪关的花朵</p></blockquote><p><img src="/images/2019-07/IMG_5077.jpg" alt></p><blockquote><p>月牙泉的骆驼</p></blockquote><p><img src="/images/2019-07/IMG_5260.jpg" alt></p><blockquote><p>日出前的敦煌</p></blockquote><p><img src="/images/2019-07/IMG_5261.jpg" alt></p><blockquote><p>日出前的沙漠</p></blockquote><p><img src="/images/2019-07/IMG_5439.jpg" alt></p><blockquote><p>翡翠湖</p></blockquote><p><img src="/images/2019-07/IMG_5483.jpg" alt></p><blockquote><p>茶卡盐湖</p></blockquote><p><img src="/images/2019-07/IMG_5513.jpg" alt></p><blockquote><p>青海湖</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/2019-07/IMG_5005.jpg&quot; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;嘉峪关的花朵&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;/images/2019-07/IMG_5077.jpg&quot; alt&gt;
      
    
    </summary>
    
      <category term="其他" scheme="https://zhangshuqiao.org/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="摄影" scheme="https://zhangshuqiao.org/tags/%E6%91%84%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>在Win 95中晃动鼠标竟能加速系统</title>
    <link href="https://zhangshuqiao.org/2019-07/%E5%9C%A8Win%2095%E4%B8%AD%E6%99%83%E5%8A%A8%E9%BC%A0%E6%A0%87%E7%AB%9F%E8%83%BD%E5%8A%A0%E9%80%9F%E7%B3%BB%E7%BB%9F/"/>
    <id>https://zhangshuqiao.org/2019-07/在Win 95中晃动鼠标竟能加速系统/</id>
    <published>2019-07-18T09:33:25.000Z</published>
    <updated>2019-07-22T15:46:18.739Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/2019-07/2019-07-15-image-24.jpg" alt></p><p><strong>Through the looking glass:</strong> Adding new hardware or overclocking what you’ve already got are among the leading ways to squeeze more performance out of your PC but in the earlier days of computing, all one had to do to give their PC a jolt was wiggle the mouse cursor around during an install.<br>添加新硬件或超频现有硬件是使PC获得更佳性能的主要方法。但在个人计算机的早期阶段，用户竟然还可以通过一个巧妙的办法来提升性能——不停地晃动鼠标的光标。</p><p>I’m a self-professed fidgeter, especially at the computer. It’s not uncommon to catch me moving the mouse all around with zero intent, even if I’m busy reading a story or watching a video.<br>我自认为是一个手抖的人，尤其是在电脑前。即使我在忙着用电脑读故事或看视频，你也会发现我在毫无目的地移动鼠标。</p><p>I chalk it up to the earlier days of computing when keeping the mouse active seemed to have a tangible benefit on system performance. Turns out, it wasn’t just in our imagination.<br>我把它归结为在上古时期，保持鼠标活动似乎对系统性能有明显的好处。事实证明，这并不只是我们的想象。</p><p>According to a running thread over on <a href="https://retrocomputing.stackexchange.com/questions/11533/why-did-moving-the-mouse-cursor-cause-windows-95-to-run-more-quickly" target="_blank" rel="noopener">Stack Exchange</a>, moving the mouse cursor in Windows 95 did indeed speed up performance due to a flaw in the way the OS generates events and the fact that many applications are event driven.<br>根据<a href="https://retrocomputing.stackexchange.com/questions/11533/why-did-moving-the-mouse-cursor-cause-windows-95-to-run-more-quickly" target="_blank" rel="noopener">Stack Exchange</a>上一个正在热烈讨论的主题，在Windows 95中移动鼠标光标确实加快了性能，因为操作系统的事件生成方法存在缺陷，并且许多应用程序都是基于事件来驱动的。</p><p>As one user explains:<br>正如一位用户解释：</p><blockquote><p>Windows 95 applications often use asynchronous I/O, that is they ask for some file operation like a copy to be performed and then tell the OS that they can be put to sleep until that operation finishes. By sleeping they allow other applications to run, rather than wasting CPU time endlessly asking if the file operation has completed yet.<br>Windows 95应用程序通常采用了异步I/O，也就是说，在它们要求执行某些文件操作的时候（例如要执行的副本），会向操作系统表示其能够在操作完成之前转入休眠状态。通过这项休眠机制，其它应用程序将可以穿插空档来运行，而不是无休止地询问文件操作是否已经完成，从而浪费CPU时间。</p></blockquote><blockquote><p>For reasons that are not entirely clear, but probably due to performance problems on low end machines, Windows 95 tends to bundle up the messages about I/O completion and doesn’t immediately wake up the application to service them. However, it does wake the application for user input, presumably to keep it feeling responsive, and when the application is awake it will handle any pending I/O messages too.<br>目前原因尚不完全清楚，但一个猜测是，这可能是为了解决低端计算机上的性能问题——Windows 95倾向于捆绑关于I/O完成的消息，并且不会立即唤醒应用程序来为它们提供服务。不过，在用户输入时，操作系统会唤醒应用程序，这可能是为了让应用程序保持响应；而当应用程序处于唤醒状态时，它就能够处理任何挂起的I/O消息。</p></blockquote><blockquote><p>Thus wiggling the mouse causes the application to process I/O messages faster, and install quicker. The effect was quite pronounced; large applications that could take an hour to install could be reduced to 15 minutes with suitable mouse input.<br>换言之，晃动鼠标可以使应用程序更快地处理I/O消息，并加快安装速度。效果相当明显：配合合适的鼠标输入，原先可能需要一个小时安装的大型应用程序，耗时可以减少到15分钟。</p></blockquote><p>As a youth, I’d keep my mouse cursor active as much as possible – and especially during installs – simply because I didn’t want the screensaver to trigger and bog down system resources. Sure, I could have just set the timeout to longer on the screensaver, but that’s beside the point. As it turns out, my actions were actually helpful, and not for the reason I thought.<br>在我年轻的时候，我尽可能地让鼠标光标处于活动状态——尤其是在安装期间——只是因为我不想让屏幕保护程序触发并阻塞系统资源。当然，我可以把屏保上的超时设置得更长一些，但这不是重点。事实证明，我的行为实际上是有帮助的——即使这并不是我的初衷。</p><hr><p>本文翻译自：<a href="https://www.techspot.com/news/80956-wiggling-mouse-windows-95-made-operating-system-faster.html" target="_blank" rel="noopener">Wiggling the mouse in Windows 95 made the operating system faster</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/2019-07/2019-07-15-image-24.jpg&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Through the looking glass:&lt;/strong&gt; Adding new hardware or overclo
      
    
    </summary>
    
      <category term="技术" scheme="https://zhangshuqiao.org/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>怎样修好任何电脑</title>
    <link href="https://zhangshuqiao.org/2019-07/%E6%80%8E%E6%A0%B7%E4%BF%AE%E5%A5%BD%E4%BB%BB%E4%BD%95%E7%94%B5%E8%84%91/"/>
    <id>https://zhangshuqiao.org/2019-07/怎样修好任何电脑/</id>
    <published>2019-07-10T00:53:13.000Z</published>
    <updated>2019-07-22T15:46:15.180Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/2019-07/header.png" alt><br><img src="/images/2019-07/windows.png" alt><br><img src="/images/2019-07/apple.png" alt><br><img src="/images/2019-07/linux.png" alt></p><p>图片来源：<a href="https://theoatmeal.com/blog/fix_computer" target="_blank" rel="noopener">How to fix any computer - The Oatmeal</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/2019-07/header.png&quot; alt&gt;&lt;br&gt;&lt;img src=&quot;/images/2019-07/windows.png&quot; alt&gt;&lt;br&gt;&lt;img src=&quot;/images/2019-07/apple.png&quot; alt&gt;&lt;br
      
    
    </summary>
    
      <category term="幽默" scheme="https://zhangshuqiao.org/categories/%E5%B9%BD%E9%BB%98/"/>
    
    
  </entry>
  
  <entry>
    <title>在PC上使用Pro Controller</title>
    <link href="https://zhangshuqiao.org/2019-06/%E5%9C%A8PC%E4%B8%8A%E4%BD%BF%E7%94%A8Pro%20Controller/"/>
    <id>https://zhangshuqiao.org/2019-06/在PC上使用Pro Controller/</id>
    <published>2019-06-22T09:03:20.000Z</published>
    <updated>2019-07-23T09:02:24.743Z</updated>
    
    <content type="html"><![CDATA[<p>Pro Controller是任天堂为Switch适配的游戏手柄，于2016年10月20日与Switch一同亮相，并于2017年1月25日正式发布。除了在Switch上使用外，Pro Controller还可以与PC配对或连接，进行Steam上的游戏——Steam在2018年5月的客户端更新中增加了对Pro Controller的支持。</p><p>本文将介绍一个名为<a href="https://github.com/x360ce/x360ce" target="_blank" rel="noopener">x360ce</a>的工具，通过它可以将Pro Controller的操作映射为一个Xbox手柄，这比在Steam中设置手柄更加方便和友好。</p><p>Pro Controller有两种与PC连接的方式：USB有线连接和蓝牙连接。通过USB连接的Pro Controller只能被steam识别，而无论是x360ce还是pygame都无法正确读取数据。因此，要使用x360ce，你的PC必须具有蓝牙功能。</p><p>下面将介绍操作步骤。</p><h2 id="充电"><a href="#充电" class="headerlink" title="充电"></a>充电</h2><p>通过5V电源适配器连接USB Type-C接口为Pro Controller充电，使其保持足够的电量。正如前面所说的，最好不要直接通过PC的USB接口连接Pro Controller，以避免出现混乱。</p><h2 id="蓝牙连接"><a href="#蓝牙连接" class="headerlink" title="蓝牙连接"></a>蓝牙连接</h2><p>长按USB Type-C接口旁的按键，使Pro Controller开机并进入蓝牙配对模式。在PC上通过蓝牙搜索并连接Pro Controller。蓝牙配对完成后，就可以使用x360ce了。</p><h2 id="安装x360ce"><a href="#安装x360ce" class="headerlink" title="安装x360ce"></a>安装x360ce</h2><p><a href="https://github.com/x360ce/x360ce/releases" target="_blank" rel="noopener">在这里</a>下载最新版本的x360ce，然后解压并运行。</p><p><img src="/images/2019-06/x360ce.png" alt></p><p>点击『Add…』按钮，并勾选通过蓝牙连接的Pro Controller。</p><p><img src="/images/2019-06/x360ce2.png" alt></p><p>完成后，点击『OK』回到之前的页面。</p><h2 id="其它配置"><a href="#其它配置" class="headerlink" title="其它配置"></a>其它配置</h2><p>将所有设置项按照前面图中的方式调整好即可。在『General』页面中，可以自行调整按键映射。在『Left Stick』和『Right Stick』中，可以调整灵敏度。完成设置后，需要点击『Save All』进行保存。</p><p>如果一切正常，系统会识别出x360ce虚拟的Xbox手柄，这样就可以愉快的进行游戏了！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Pro Controller是任天堂为Switch适配的游戏手柄，于2016年10月20日与Switch一同亮相，并于2017年1月25日正式发布。除了在Switch上使用外，Pro Controller还可以与PC配对或连接，进行Steam上的游戏——Steam在2018
      
    
    </summary>
    
      <category term="技术" scheme="https://zhangshuqiao.org/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>PS用文字拼出照片</title>
    <link href="https://zhangshuqiao.org/2019-06/PS%E7%94%A8%E6%96%87%E5%AD%97%E6%8B%BC%E5%87%BA%E7%85%A7%E7%89%87/"/>
    <id>https://zhangshuqiao.org/2019-06/PS用文字拼出照片/</id>
    <published>2019-06-19T01:14:34.000Z</published>
    <updated>2019-06-30T01:27:17.393Z</updated>
    
    <content type="html"><![CDATA[<p>以下操作中的快捷键在Windows下有效，macOS可能需要用<kbd>Command</kbd>代替<kbd>Ctrl</kbd>。<br>原始素材尽量选择人物，最好不要全身。</p><p>博主以下面这张梅西庆祝的照片为例。</p><p><img src="/images/2019-06/lionel-messi.jpg" alt></p><h2 id="调整对比度"><a href="#调整对比度" class="headerlink" title="调整对比度"></a>调整对比度</h2><p>打开素材，<kbd>Ctrl</kbd>+<kbd>j</kbd>复制图层；选定新图层，<kbd>Ctrl</kbd>+<kbd>m</kbd>打开曲线，调大对比度。</p><p><img src="/images/2019-06/1.png" alt></p><a id="more"></a><h2 id="新建图层"><a href="#新建图层" class="headerlink" title="新建图层"></a>新建图层</h2><p>新建图层，填充白色。</p><p><img src="/images/2019-06/2.png" alt></p><h2 id="创建文本框"><a href="#创建文本框" class="headerlink" title="创建文本框"></a>创建文本框</h2><p>使用横排文字工具，拖出段落文本框，大小是整幅图的大小。</p><p><img src="/images/2019-06/3.png" alt></p><h2 id="输入文字"><a href="#输入文字" class="headerlink" title="输入文字"></a>输入文字</h2><p>输入预先准备好的文字。如果文字内容不重要的话，可以随便打字，或者通过复制粘贴来输入内容。为了视觉效果，一定要填满文本框。<br>提醒一下，文字打得时候字体最好不要太大，字间距和行间距也不要太大，否则不好看。</p><p><img src="/images/2019-06/4.png" alt></p><h2 id="选择高光"><a href="#选择高光" class="headerlink" title="选择高光"></a>选择高光</h2><p>隐藏上两个图层，<kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>2</kbd>将高光提出作为选区；或者到通道面板按住<kbd>Ctrl</kbd>单击RGB通道缩览图，都可以提高光。</p><p><img src="/images/2019-06/5.png" alt></p><h2 id="栅格化"><a href="#栅格化" class="headerlink" title="栅格化"></a>栅格化</h2><p>显示上两个图层，然后点击文字图层，右键菜单选择『栅格化文字』，然后删除选区内的文字。</p><p><img src="/images/2019-06/6.png" alt><br><img src="/images/2019-06/7.png" alt></p><p>效果如下图。</p><p><img src="/images/2019-06/8.png" alt></p><h2 id="叠加"><a href="#叠加" class="headerlink" title="叠加"></a>叠加</h2><p>复制背景图层，将其移动到最上面，图层模式改为『颜色』。</p><p><img src="/images/2019-06/9.png" alt><br><img src="/images/2019-06/10.png" alt></p><p>效果如图，如果觉得颜色不够的话，再<kbd>Ctrl</kbd>+<kbd>j</kbd>复制图层，模式为『颜色加深』。</p><p><img src="/images/2019-06/11.png" alt></p><p>可以将颜色加深的图层多复制几层，如果觉得颜色够了就不用那么多层了，或者调整色相饱和度神马的~</p><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><p>最终成品如图。</p><p><img src="/images/2019-06/export.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以下操作中的快捷键在Windows下有效，macOS可能需要用&lt;kbd&gt;Command&lt;/kbd&gt;代替&lt;kbd&gt;Ctrl&lt;/kbd&gt;。&lt;br&gt;原始素材尽量选择人物，最好不要全身。&lt;/p&gt;
&lt;p&gt;博主以下面这张梅西庆祝的照片为例。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2019-06/lionel-messi.jpg&quot; alt&gt;&lt;/p&gt;
&lt;h2 id=&quot;调整对比度&quot;&gt;&lt;a href=&quot;#调整对比度&quot; class=&quot;headerlink&quot; title=&quot;调整对比度&quot;&gt;&lt;/a&gt;调整对比度&lt;/h2&gt;&lt;p&gt;打开素材，&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;j&lt;/kbd&gt;复制图层；选定新图层，&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;m&lt;/kbd&gt;打开曲线，调大对比度。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2019-06/1.png&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="https://zhangshuqiao.org/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Photoshop" scheme="https://zhangshuqiao.org/tags/Photoshop/"/>
    
  </entry>
  
  <entry>
    <title>历史上的今天</title>
    <link href="https://zhangshuqiao.org/2019-06/%E5%8E%86%E5%8F%B2%E4%B8%8A%E7%9A%84%E4%BB%8A%E5%A4%A9/"/>
    <id>https://zhangshuqiao.org/2019-06/历史上的今天/</id>
    <published>2019-06-04T10:38:36.000Z</published>
    <updated>2019-06-28T10:33:33.560Z</updated>
    
    <content type="html"><![CDATA[<p>如果要在网页上显示一些随机的语句，获得一些人生的经验，你会选择什么？<br>也许，<a href="https://hitokoto.cn" target="_blank" rel="noopener">一言</a>是一个很好的选择，它可以提供一些动漫中的台词，或是网络上的各种小段子。<br>在前面的文章<a href="/2018-05/有趣的Linux命令行工具">有趣的Linux命令行工具</a>中提到的<code>fortune</code>命令或许也可以满足需求，<code>pure-ftpd</code>就可以设置在连接成功时显示随机的来自<code>fortune</code>的语句。<br>那除此之外呢？历史上的今天是一个不错的方案。当你访问一些门户网站的首页，有时会看到这样的栏目。它也是一些百科全书网站，比如维基百科的传统。事实上，在Mac上就自带了一个小型的『历史上的今天』数据库，执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /usr/share/calendar/calendar.history</span><br></pre></td></tr></table></figure><p>就可以看到。<br>这篇文章将介绍如何搭建一个提供『历史上的今天』信息的API。</p><h2 id="建立数据库"><a href="#建立数据库" class="headerlink" title="建立数据库"></a>建立数据库</h2><p>首先，建立MySQL数据库，用于存储爬取的信息。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> dbname;</span><br><span class="line"><span class="comment">#建立数据库，dbname保持一致即可</span></span><br><span class="line"><span class="keyword">USE</span> dbname;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">event</span> (</span><br><span class="line">  <span class="keyword">id</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">UNSIGNED</span> PRIMARY <span class="keyword">KEY</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="keyword">type</span> <span class="built_in">int</span>(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="keyword">year</span> <span class="built_in">varchar</span>(<span class="number">6</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="built_in">date</span> <span class="built_in">varchar</span>(<span class="number">6</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  info <span class="built_in">varchar</span>(<span class="number">300</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span></span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8mb4;</span><br><span class="line">QUIT;</span><br></pre></td></tr></table></figure><h2 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h2><p>数据来源是维基百科，使用Python爬取数据，并存入数据库中。代码中的<code>username</code>、<code>password</code>和<code>dbname</code>分别是你的登录用户名、密码和数据库名。数据表名默认是event，也可以自行修改。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"></span><br><span class="line">username = <span class="string">"username"</span></span><br><span class="line">password = <span class="string">"password"</span></span><br><span class="line">dbname = <span class="string">"dbname"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line">conn = pymysql.connect(host = <span class="string">"127.0.0.1"</span>, user = username, password = password, db = dbname, charset = <span class="string">"utf8"</span>)</span><br><span class="line">print(conn)</span><br><span class="line">cur = conn.cursor()</span><br><span class="line">cur.execute(<span class="string">"SET NAMES utf8mb4"</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">savedb</span><span class="params">(data)</span>:</span></span><br><span class="line">    print(data)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        cur.execute(<span class="string">"insert into event values(null,%s,%s,%s,%s)"</span>, data)</span><br><span class="line">    <span class="keyword">except</span> pymysql.err.InternalError:</span><br><span class="line">        print(<span class="string">"\033[31mERROR: Incorrect string value.\033[0m"</span>, data)</span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">"failed.txt"</span>, <span class="string">"a"</span>) <span class="keyword">as</span> myfile:</span><br><span class="line">            myfile.write(str(data) + <span class="string">"\n"</span>)</span><br><span class="line">    <span class="keyword">except</span> pymysql.err.DataError:</span><br><span class="line">        print(<span class="string">"\033[31mERROR: Data too long.\033[0m"</span>, data)</span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">"failed.txt"</span>, <span class="string">"a"</span>) <span class="keyword">as</span> myfile:</span><br><span class="line">            myfile.write(str(data) + <span class="string">"\n"</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getDateList</span><span class="params">()</span>:</span></span><br><span class="line">    list = []</span><br><span class="line">    date = datetime.date(<span class="number">2016</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">366</span>):</span><br><span class="line">        date_str = str(date.month) + <span class="string">"月"</span> + str(date.day) + <span class="string">"日"</span></span><br><span class="line">        list.append(date_str)</span><br><span class="line">        date += datetime.timedelta(days = <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> list</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getInfo</span><span class="params">(html, type, date)</span>:</span></span><br><span class="line">    typeList = [<span class="string">"大事记"</span>, <span class="string">"出生"</span>, <span class="string">"逝世"</span>]</span><br><span class="line">    flag = re.compile(<span class="string">"(&lt;h2&gt;&lt;span id=.*&lt;span class=\"mw-headline\" id=.*?"</span> + typeList[type] + <span class="string">"[\s\S]*?&lt;/ul&gt;\s*?)&lt;h2&gt;"</span>).search(html)</span><br><span class="line">    <span class="keyword">if</span> flag:</span><br><span class="line">        bsObj = BeautifulSoup(flag.group(<span class="number">1</span>), <span class="string">"html.parser"</span>).findAll(<span class="string">"li"</span>)</span><br><span class="line">        <span class="keyword">for</span> li <span class="keyword">in</span> bsObj:</span><br><span class="line">            match = re.compile(<span class="string">"((^前|^)\d&#123;1,4&#125;年)：([\s\S]*$)"</span>).match(li.get_text())</span><br><span class="line">            <span class="keyword">if</span> match:</span><br><span class="line">                year = match.group(<span class="number">1</span>)</span><br><span class="line">                info = re.sub(<span class="string">"\[\d&#123;1,&#125;\]"</span>, <span class="string">""</span>, match.group(<span class="number">3</span>).strip())</span><br><span class="line">                data = (type, year, date, info)</span><br><span class="line">                savedb(data)</span><br><span class="line"></span><br><span class="line">list = getDateList()</span><br><span class="line"><span class="keyword">for</span> date <span class="keyword">in</span> list:</span><br><span class="line">    print(date)</span><br><span class="line">    url = <span class="string">"https://zh.wikipedia.org/zh-cn/%s"</span> % date</span><br><span class="line">    r = requests.get(url)</span><br><span class="line">    getInfo(r.text, <span class="number">0</span>, date) <span class="comment"># 大事记</span></span><br><span class="line">    getInfo(r.text, <span class="number">1</span>, date) <span class="comment"># 出生</span></span><br><span class="line">    getInfo(r.text, <span class="number">2</span>, date) <span class="comment"># 逝世</span></span><br><span class="line"></span><br><span class="line">cur.connection.commit()</span><br><span class="line">cur.close()</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure><p>这里的两个<code>except</code>分别处理的是特殊字符（非UTF-8范围）和内容长度超出的问题。</p><h2 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h2><p>比较简单的方式是按照json格式进行输出，这里给出一种使用Python的方案。</p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"></span><br><span class="line">username = <span class="string">"username"</span></span><br><span class="line">password = <span class="string">"password"</span></span><br><span class="line">dbname = <span class="string">"dbname"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">conn = pymysql.connect(host = <span class="string">"127.0.0.1"</span>, user = username, password = password, db = dbname, charset = <span class="string">"utf8"</span>)</span><br><span class="line">print(conn)</span><br><span class="line">cur = conn.cursor()</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route("/", methods = ["GET", "POST"])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">query</span><span class="params">()</span>:</span></span><br><span class="line">    date = datetime.date.today()</span><br><span class="line">    today = str(date.month) + <span class="string">"月"</span> + str(date.day) + <span class="string">"日"</span></span><br><span class="line">    _date = request.args.get(<span class="string">"date"</span>) <span class="keyword">or</span> today</span><br><span class="line">    _type = int(request.args.get(<span class="string">"type"</span>) <span class="keyword">or</span> <span class="number">0</span>)</span><br><span class="line">    _count = int(request.args.get(<span class="string">"count"</span>) <span class="keyword">or</span> <span class="number">1</span>)</span><br><span class="line">    cur.execute(<span class="string">"select * from `event` where `date` = %s and `type` = %s order by RAND() limit %s"</span>, (_date, _type, _count))</span><br><span class="line">    rows = cur.fetchall()</span><br><span class="line">    result = []</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> rows:</span><br><span class="line">        result.append(&#123;<span class="string">"year"</span>: row[<span class="number">2</span>], <span class="string">"info"</span>: row[<span class="number">4</span>]&#125;)</span><br><span class="line">    <span class="keyword">return</span> str(result)</span><br><span class="line"></span><br><span class="line">app.run(debug = <span class="literal">True</span>, port = <span class="number">8080</span>, host = <span class="string">"0.0.0.0"</span>)</span><br></pre></td></tr></table></figure><p>同样将<code>username</code>、<code>password</code>和<code>dbname</code>根据情况替换，就可以访问了。<br>当然，用PHP也是可以实现的，毕竟只需要进行MySQL查询，没有静态文件，很方便。可以使用如下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $mysqli = <span class="keyword">new</span> mysqli(<span class="string">"localhost"</span>, <span class="string">"username"</span>, <span class="string">"password"</span>, <span class="string">"dbname"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 检查连接 */</span></span><br><span class="line">    <span class="keyword">if</span> (mysqli_connect_errno()) &#123;</span><br><span class="line">        printf(<span class="string">"Connect failed: %s\n"</span>, mysqli_connect_error());</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $date = $_GET[<span class="string">'date'</span>] ? $mysqli-&gt;real_escape_string($_GET[<span class="string">'date'</span>]) : date(<span class="string">"m月d日"</span>);</span><br><span class="line">    $type = $_GET[<span class="string">'type'</span>] ? (int)$mysqli-&gt;real_escape_string($_GET[<span class="string">'type'</span>]) : <span class="number">0</span>;</span><br><span class="line">    $count = $_GET[<span class="string">'count'</span>] ? (int)$mysqli-&gt;real_escape_string($_GET[<span class="string">'count'</span>]) : <span class="number">1</span>;</span><br><span class="line">    $result = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 创建一个预编译 SQL 语句 */</span></span><br><span class="line">    <span class="keyword">if</span> ($stmt = $mysqli-&gt;prepare(<span class="string">"select * from `event` where `date` = ? and `type` = ? order by RAND() limit ?"</span>)) &#123;</span><br><span class="line">        <span class="comment">/* 对于参数占位符进行参数值绑定 */</span></span><br><span class="line">        $stmt-&gt;bind_param(<span class="string">"dii"</span>, $date, $type, $count);</span><br><span class="line">        <span class="comment">/* 执行查询 */</span></span><br><span class="line">        $stmt-&gt;execute();</span><br><span class="line">        <span class="comment">/* 将查询结果绑定到变量 */</span></span><br><span class="line">        $stmt-&gt;bind_result($id, $type, $year, $date, $info);</span><br><span class="line">        <span class="comment">/* 获取查询结果值 */</span></span><br><span class="line">        <span class="keyword">while</span> ($stmt-&gt;fetch()) &#123;</span><br><span class="line">            $arr = <span class="keyword">array</span>(<span class="string">'year'</span> =&gt; $year, <span class="string">'info'</span> =&gt; $info);</span><br><span class="line">            $result[] = $arr;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">echo</span> json_encode($result, JSON_UNESCAPED_UNICODE);</span><br><span class="line">        <span class="comment">/* 关闭语句句柄 */</span></span><br><span class="line">        $stmt-&gt;close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* 关闭连接 */</span></span><br><span class="line">    $mysqli-&gt;close();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><p>项目地址：<a href="https://github.com/stevenjoezhang/TodayInHistory-Crawler" target="_blank" rel="noopener">TodayInHistory-Crawler</a>，可以打包下载所有文件。</p><p>博主搭建的API：<a href="https://api.galaxymimi.com/today/?type=0" target="_blank" rel="noopener">历史上的今天</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果要在网页上显示一些随机的语句，获得一些人生的经验，你会选择什么？&lt;br&gt;也许，&lt;a href=&quot;https://hitokoto.cn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;一言&lt;/a&gt;是一个很好的选择，它可以提供一些动漫中的台词，或是网络上的各种小段子。&lt;br&gt;在前面的文章&lt;a href=&quot;/2018-05/有趣的Linux命令行工具&quot;&gt;有趣的Linux命令行工具&lt;/a&gt;中提到的&lt;code&gt;fortune&lt;/code&gt;命令或许也可以满足需求，&lt;code&gt;pure-ftpd&lt;/code&gt;就可以设置在连接成功时显示随机的来自&lt;code&gt;fortune&lt;/code&gt;的语句。&lt;br&gt;那除此之外呢？历史上的今天是一个不错的方案。当你访问一些门户网站的首页，有时会看到这样的栏目。它也是一些百科全书网站，比如维基百科的传统。事实上，在Mac上就自带了一个小型的『历史上的今天』数据库，执行：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cat /usr/share/calendar/calendar.history&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;就可以看到。&lt;br&gt;这篇文章将介绍如何搭建一个提供『历史上的今天』信息的API。&lt;/p&gt;
&lt;h2 id=&quot;建立数据库&quot;&gt;&lt;a href=&quot;#建立数据库&quot; class=&quot;headerlink&quot; title=&quot;建立数据库&quot;&gt;&lt;/a&gt;建立数据库&lt;/h2&gt;&lt;p&gt;首先，建立MySQL数据库，用于存储爬取的信息。&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DATABASE&lt;/span&gt; dbname;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#建立数据库，dbname保持一致即可&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;USE&lt;/span&gt; dbname;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;event&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;UNSIGNED&lt;/span&gt; PRIMARY &lt;span class=&quot;keyword&quot;&gt;KEY&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; AUTO_INCREMENT,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  info &lt;span class=&quot;built_in&quot;&gt;varchar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;) &lt;span class=&quot;keyword&quot;&gt;ENGINE&lt;/span&gt;=&lt;span class=&quot;keyword&quot;&gt;InnoDB&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;CHARSET&lt;/span&gt;=utf8mb4;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;QUIT;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;获取数据&quot;&gt;&lt;a href=&quot;#获取数据&quot; class=&quot;headerlink&quot; title=&quot;获取数据&quot;&gt;&lt;/a&gt;获取数据&lt;/h2&gt;&lt;p&gt;数据来源是维基百科，使用Python爬取数据，并存入数据库中。代码中的&lt;code&gt;username&lt;/code&gt;、&lt;code&gt;password&lt;/code&gt;和&lt;code&gt;dbname&lt;/code&gt;分别是你的登录用户名、密码和数据库名。数据表名默认是event，也可以自行修改。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#!/usr/bin/env python3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;username = &lt;span class=&quot;string&quot;&gt;&quot;username&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;password = &lt;span class=&quot;string&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dbname = &lt;span class=&quot;string&quot;&gt;&quot;dbname&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; requests&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; bs4 &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; BeautifulSoup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; re&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; datetime&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; pymysql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;conn = pymysql.connect(host = &lt;span class=&quot;string&quot;&gt;&quot;127.0.0.1&quot;&lt;/span&gt;, user = username, password = password, db = dbname, charset = &lt;span class=&quot;string&quot;&gt;&quot;utf8&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(conn)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cur = conn.cursor()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cur.execute(&lt;span class=&quot;string&quot;&gt;&quot;SET NAMES utf8mb4&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;savedb&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(data)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(data)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cur.execute(&lt;span class=&quot;string&quot;&gt;&quot;insert into event values(null,%s,%s,%s,%s)&quot;&lt;/span&gt;, data)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; pymysql.err.InternalError:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&lt;span class=&quot;string&quot;&gt;&quot;\033[31mERROR: Incorrect string value.\033[0m&quot;&lt;/span&gt;, data)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; open(&lt;span class=&quot;string&quot;&gt;&quot;failed.txt&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; myfile:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            myfile.write(str(data) + &lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; pymysql.err.DataError:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&lt;span class=&quot;string&quot;&gt;&quot;\033[31mERROR: Data too long.\033[0m&quot;&lt;/span&gt;, data)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; open(&lt;span class=&quot;string&quot;&gt;&quot;failed.txt&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; myfile:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            myfile.write(str(data) + &lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getDateList&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    list = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    date = datetime.date(&lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;366&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        date_str = str(date.month) + &lt;span class=&quot;string&quot;&gt;&quot;月&quot;&lt;/span&gt; + str(date.day) + &lt;span class=&quot;string&quot;&gt;&quot;日&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        list.append(date_str)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        date += datetime.timedelta(days = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getInfo&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(html, type, date)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    typeList = [&lt;span class=&quot;string&quot;&gt;&quot;大事记&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;出生&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;逝世&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    flag = re.compile(&lt;span class=&quot;string&quot;&gt;&quot;(&amp;lt;h2&amp;gt;&amp;lt;span id=.*&amp;lt;span class=\&quot;mw-headline\&quot; id=.*?&quot;&lt;/span&gt; + typeList[type] + &lt;span class=&quot;string&quot;&gt;&quot;[\s\S]*?&amp;lt;/ul&amp;gt;\s*?)&amp;lt;h2&amp;gt;&quot;&lt;/span&gt;).search(html)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; flag:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bsObj = BeautifulSoup(flag.group(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), &lt;span class=&quot;string&quot;&gt;&quot;html.parser&quot;&lt;/span&gt;).findAll(&lt;span class=&quot;string&quot;&gt;&quot;li&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; li &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; bsObj:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            match = re.compile(&lt;span class=&quot;string&quot;&gt;&quot;((^前|^)\d&amp;#123;1,4&amp;#125;年)：([\s\S]*$)&quot;&lt;/span&gt;).match(li.get_text())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; match:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                year = match.group(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                info = re.sub(&lt;span class=&quot;string&quot;&gt;&quot;\[\d&amp;#123;1,&amp;#125;\]&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;, match.group(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;).strip())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                data = (type, year, date, info)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                savedb(data)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;list = getDateList()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; date &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; list:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(date)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url = &lt;span class=&quot;string&quot;&gt;&quot;https://zh.wikipedia.org/zh-cn/%s&quot;&lt;/span&gt; % date&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    r = requests.get(url)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getInfo(r.text, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, date) &lt;span class=&quot;comment&quot;&gt;# 大事记&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getInfo(r.text, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, date) &lt;span class=&quot;comment&quot;&gt;# 出生&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getInfo(r.text, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, date) &lt;span class=&quot;comment&quot;&gt;# 逝世&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cur.connection.commit()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cur.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;conn.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这里的两个&lt;code&gt;except&lt;/code&gt;分别处理的是特殊字符（非UTF-8范围）和内容长度超出的问题。&lt;/p&gt;
&lt;h2 id=&quot;查询数据&quot;&gt;&lt;a href=&quot;#查询数据&quot; class=&quot;headerlink&quot; title=&quot;查询数据&quot;&gt;&lt;/a&gt;查询数据&lt;/h2&gt;&lt;p&gt;比较简单的方式是按照json格式进行输出，这里给出一种使用Python的方案。&lt;/p&gt;
    
    </summary>
    
      <category term="程序设计" scheme="https://zhangshuqiao.org/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="Python" scheme="https://zhangshuqiao.org/tags/Python/"/>
    
      <category term="MySQL" scheme="https://zhangshuqiao.org/tags/MySQL/"/>
    
      <category term="PHP" scheme="https://zhangshuqiao.org/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>在macOS上读写NTFS磁盘</title>
    <link href="https://zhangshuqiao.org/2019-05/%E5%9C%A8macOS%E4%B8%8A%E8%AF%BB%E5%86%99NTFS%E7%A3%81%E7%9B%98/"/>
    <id>https://zhangshuqiao.org/2019-05/在macOS上读写NTFS磁盘/</id>
    <published>2019-05-30T03:55:22.000Z</published>
    <updated>2019-06-25T04:23:45.957Z</updated>
    
    <content type="html"><![CDATA[<p>这里介绍一种在macOS上读写NTFS磁盘的方法，这样可以方便的在不同系统中传输文件。默认情况下，macOS是无法向NTFS磁盘写入的——这个功能由于种种原因被禁用了。我们使用一种Hack的方法将其启用即可。<br>macOS在挂载NTFS磁盘时加载的脚本为<code>/sbin/mount_ntfs</code>，参数为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount_ntfs -o nodev -o noowners -o nosuid /dev/disk2s1 /Volumes/DATA</span><br></pre></td></tr></table></figure><p>这时，只要加上额外的参数，就可以启用对NTFS磁盘的写入。具体方法是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo -s <span class="comment">#输入密码，获取root权限</span></span><br><span class="line"><span class="built_in">cd</span> /sbin</span><br><span class="line">mv mount_ntfs mount_ntfs_orig</span><br><span class="line">vim mount_ntfs</span><br></pre></td></tr></table></figure><p>将<code>mount_ntfs</code>重命名为<code>mount_ntfs_orig</code>，然后再新建一个<code>mount_ntfs</code>，输入以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">/sbin/mount_ntfs_orig -o rw,nobrowse <span class="string">"<span class="variable">$@</span>"</span></span><br></pre></td></tr></table></figure><p>这样就可以欺骗系统，运行带有额外参数的指令。这里的<code>nobrowse</code>是为了避免挂载上来的还是只读模式，但是它同时会导致磁盘不可见，也就是挂在后不会在桌面和Finder中显示，需要手动到<code>/Volumes</code>下打开。如果这样不爽的话，你可以尝试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">/sbin/mount_ntfs_orig -o rw <span class="string">"<span class="variable">$@</span>"</span></span><br></pre></td></tr></table></figure><p>将磁盘推出再挂载，如果一切正常的话，就可以愉快的使用了。</p><hr><p>参考文章：<a href="https://www.jianshu.com/p/d4073acbb218" target="_blank" rel="noopener">OS X 原生可读写挂载NTFS分区</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这里介绍一种在macOS上读写NTFS磁盘的方法，这样可以方便的在不同系统中传输文件。默认情况下，macOS是无法向NTFS磁盘写入的——这个功能由于种种原因被禁用了。我们使用一种Hack的方法将其启用即可。&lt;br&gt;macOS在挂载NTFS磁盘时加载的脚本为&lt;code&gt;/s
      
    
    </summary>
    
      <category term="技术" scheme="https://zhangshuqiao.org/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Mac" scheme="https://zhangshuqiao.org/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>Windows安装tensorflow-gpu</title>
    <link href="https://zhangshuqiao.org/2019-05/Windows%E5%AE%89%E8%A3%85tensorflow-gpu/"/>
    <id>https://zhangshuqiao.org/2019-05/Windows安装tensorflow-gpu/</id>
    <published>2019-05-19T09:28:35.000Z</published>
    <updated>2019-06-25T04:23:26.718Z</updated>
    
    <content type="html"><![CDATA[<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>下面列出了博主测试成功的环境，使用其它的版本可能出现不可预料的情况。</p><h3 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h3><ul><li><p>图形卡<br>根据Tensorflow官网上对于<a href="https://www.tensorflow.org/install/gpu" target="_blank" rel="noopener">GPU 支持</a>的描述，需要CUDA® 计算能力为 3.5 或更高的 NVIDIA® GPU 卡。博主使用了一块NVIDIA GeForce RTX 2070进行测试。</p></li><li><p>其它<br>其它硬件达到主流配置即可。</p></li></ul><h3 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h3><ul><li><p>Windows系统<br>由于macOS Mojave的N卡驱动迟迟没有更新（据说是苹果已经抛弃了N卡，未来很有可能不会再更新驱动）；并且Tensorflow官方已经不再推出适配macOS的<code>tensorflow-gpu</code>了，需要自己编译；因而使用Windows或者Linux系统会是更好的选择。博主使用的是Windows 10。</p></li><li><p>显卡驱动程序<br>Windows10会自动下载安装显卡驱动，但可能不是最新版本。建议通过GeForce Experience管理驱动程序。</p></li><li><p>CUDA<br><code>tensorflow-gpu</code>依赖于CUDA，需要到NVIDIA官网上的<a href="https://developer.nvidia.com/cuda-zone" target="_blank" rel="noopener">CUDA Zone</a>下载。下载时选择10.0版本即可，因为最新的版本可能不被tensorflow所支持。历史版本可以在这里查看：<a href="https://developer.nvidia.com/cuda-toolkit-archive" target="_blank" rel="noopener">CUDA Toolkit Archive</a>。</p></li><li><p>cuDNN<br>cuDNN的全称为NVIDIA CUDA® Deep Neural Network library，是NVIDIA专门针对深度神经网络（Deep Neural Networks）中的基础操作而设计基于GPU的加速库。这也是一个重要依赖，需要准备好。其主页是<a href="https://developer.nvidia.com/cudnn" target="_blank" rel="noopener">NVIDIA cuDNN</a>，下载需要注册账号，不过也可以选择微信快捷登陆。同样需要注意的是，要正确选择与CUDA对应的cuDNN版本。本文发布时，与CUDA 10.0兼容的最新版本cuDNN为v7.6.0。</p></li><li><p>Python<br>博主使用的是Python 3.7.0。安装好之后确保能够通过PowerShell执行<code>python</code>和<code>pip</code>即可。</p></li><li><p><code>tensorflow-gpu</code><br>安装<code>tensorflow-gpu</code>的方法也有很多，例如Anaconda或者pip。如果不想折腾环境，直接从这里找一个wheel就行了：<a href="https://pypi.org/project/tensorflow-gpu/#files" target="_blank" rel="noopener">tensorflow-gpu · PyPI</a>。需要根据自己的系统和Python版本选择，例如<code>tensorflow_gpu-1.13.1-cp37-cp37m-win_amd64.whl</code>。</p></li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="安装CUDA"><a href="#安装CUDA" class="headerlink" title="安装CUDA"></a>安装CUDA</h3><p>安装过程并不复杂。运行从NVIDIA官网上下载的CUDA安装程序，将其安装在默认目录下即可。如果一切正常，相关组件会出现在<code>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.0</code>目录下。</p><h3 id="安装cuDNN"><a href="#安装cuDNN" class="headerlink" title="安装cuDNN"></a>安装cuDNN</h3><p>解压cuDNN的安装包，会得到一个文件夹，将其打开后，可以看到名为<code>bin</code>，<code>include</code>和<code>lib</code>的子目录。而在前面所说的<code>C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.0</code>目录下也有这样几个子目录。因此，直接将cuDNN的相关文件复制合并进对应的目录即可。</p><h3 id="安装tensorflow-gpu"><a href="#安装tensorflow-gpu" class="headerlink" title="安装tensorflow-gpu"></a>安装<code>tensorflow-gpu</code></h3><p>以PowerShell为例，将CUDA相关组件添加至环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$Env</span>:path=<span class="variable">$Env</span>:Path+<span class="string">";C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.0\bin;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v10.0\extras\CUPTI\libx64;"</span></span><br></pre></td></tr></table></figure><p>完成后，cd进入下载的whl文件所在目录，使用pip安装即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install tensorflow_gpu-1.13.1-cp37-cp37m-win_amd64.whl</span><br></pre></td></tr></table></figure><p><code>pip</code>会自动下载所需的依赖。</p><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>如果一切顺利，打开Python，执行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line">hello = tf.constant(<span class="string">"Hello, TensorFlow!"</span>)</span><br><span class="line">sess = tf.Session()</span><br><span class="line">print(sess.run(hello))</span><br></pre></td></tr></table></figure><p>不报错的话，就安装成功了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;p&gt;下面列出了博主测试成功的环境，使用其它的版本可能出现不可预料的情况。&lt;/p&gt;
&lt;h3 id=&quot;硬件&quot;&gt;&lt;a href=&quot;#硬
      
    
    </summary>
    
      <category term="技术" scheme="https://zhangshuqiao.org/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Python" scheme="https://zhangshuqiao.org/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>MySQL重置AUTO_INCREMENT</title>
    <link href="https://zhangshuqiao.org/2019-05/MySQL%E9%87%8D%E7%BD%AEAUTO_INCREMENT/"/>
    <id>https://zhangshuqiao.org/2019-05/MySQL重置AUTO_INCREMENT/</id>
    <published>2019-05-08T00:59:38.000Z</published>
    <updated>2019-06-28T10:41:59.786Z</updated>
    
    <content type="html"><![CDATA[<p>在WordPress中，文章、用户的ID都是通过<code>AUTO_INCREMENT</code>分配的，如果要改变其值，可以在<code>wp_usermeta</code>和<code>wp_users</code>数据表中执行：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`wp_usermeta`</span></span><br><span class="line">  <span class="keyword">MODIFY</span> <span class="string">`umeta_id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">UNSIGNED</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT, AUTO_INCREMENT=<span class="number">177</span>;</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></table></figure><p>以及</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`wp_users`</span></span><br><span class="line">  <span class="keyword">MODIFY</span> <span class="string">`ID`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">UNSIGNED</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT, AUTO_INCREMENT=<span class="number">6</span>;</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></table></figure><p>将<code>AUTO_INCREMENT</code>根据你自己的情况，修改为当前的行数即可。</p><p>对于存储评论信息的<code>wp_comments</code>也是类似的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在WordPress中，文章、用户的ID都是通过&lt;code&gt;AUTO_INCREMENT&lt;/code&gt;分配的，如果要改变其值，可以在&lt;code&gt;wp_usermeta&lt;/code&gt;和&lt;code&gt;wp_users&lt;/code&gt;数据表中执行：&lt;/p&gt;
&lt;figure class
      
    
    </summary>
    
      <category term="技术" scheme="https://zhangshuqiao.org/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="MySQL" scheme="https://zhangshuqiao.org/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Minecraft配置Seus光影</title>
    <link href="https://zhangshuqiao.org/2019-04/Minecraft%E9%85%8D%E7%BD%AESeus%E5%85%89%E5%BD%B1/"/>
    <id>https://zhangshuqiao.org/2019-04/Minecraft配置Seus光影/</id>
    <published>2019-04-28T04:35:24.000Z</published>
    <updated>2019-05-04T03:23:34.055Z</updated>
    
    <content type="html"><![CDATA[<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>下面列出了博主测试成功的环境，使用其它的版本可能出现不可预料的情况。</p><h3 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h3><ul><li><p>图形卡<br>由于Seus光影对计算机的图形性能有较高的要求，博主使用了一块NVIDIA GeForce RTX 2070显卡进行测试。根据作者的描述，20系和10系显卡对Seus光影的支持没有本质区别。因此，你也可以选择其它型号的N卡，运行起来不会有大问题。不过，根据一些Minecraft论坛的反馈，A卡和I卡可能无法支持。</p></li><li><p>其它<br>其它硬件达到主流配置即可，Minecraft对性能没有什么苛求。如果上卡吧标配的话，流畅玩耍一定没有什么问题。</p></li></ul><h3 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h3><ul><li><p>Windows系统<br>由于macOS Mojave的N卡驱动迟迟没有更新（据说是苹果已经抛弃了N卡，未来很有可能不会再更新驱动），因而需要在其它系统上运行。博主使用的是Windows 10。Linux原理上也是可以的，不过博主并没有尝试。</p></li><li><p>JAVA环境<br>Minecraft JAVA版自然需要JAVA的支持。由于后面用到的启动器对JAVA9及以上版本的支持不佳，博主推荐安装JAVA SE 8。可以到<a href="https://www.oracle.com/index.html" target="_blank" rel="noopener">Oracle官网</a>下载。测试使用的是JDK1.8.0_211。</p></li><li><p>HMCL启动器<br>你可以从GitHub上<a href="https://github.com/huanghongxun/HMCL/releases" target="_blank" rel="noopener">获取HMCL启动器</a>，下载<code>exe</code>版本即可。博主使用的是发稿前的最新版本3.2.129，后面的步骤也以该版本为例。</p></li><li><p>光影<br>在<a href="https://sonicether.com/seus/#Downloads" target="_blank" rel="noopener">Seus官方网站</a>可以下载免费的光影包。推荐使用<code>SEUS Renewed v1.0.0</code>和<code>SEUS V11</code>。除此之外，可以向作者本人<a href="https://www.patreon.com/sonicether" target="_blank" rel="noopener">付费购买</a>制作中的<code>SEUS PTGI</code>（目前的版本收费10美元，未来发布的正式版将免费）。截至发稿前，最新版本为<code>SEUS PTGI E6</code>。博主这里提供了一个免费镜像：<br><a href="/files/SEUS_PTGI_E6.zip">SEUS_PTGI_E6.zip</a></p></li><li><p>材质<br>一个好的材质包同样是不可或缺的。博主推荐使用<a href="https://matteorizzo.com/realistico/" target="_blank" rel="noopener">Realistico</a>，不过，这个材质包的官方<code>512x</code>版本是付费的，可以自行到国内或国外的玩家论坛上寻找资源。<br>此外还有一个<a href="https://continuum.graphics/stratum-rp" target="_blank" rel="noopener">Stratum</a>材质也很不错，Reddit上的讨论地址是<a href="https://www.reddit.com/r/modpiracy/comments/9vmmj9/request_tier_3_of_the_stratum_resource_pack/" target="_blank" rel="noopener">[Request] Tier 3 of the stratum resource pack</a>，不过下载链接被删帖了。后来博主发现可以通过把<code>www.reddit.com</code>替换为<code>www.removeddit.com</code>查看所有被删除的内容，然后就找到了这个Mediafire上的存储库：<a href="https://www.mediafire.com/folder/6lxv0w9517j6l/Stratum" target="_blank" rel="noopener">Stratum</a>。</p></li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="安装Minecraft"><a href="#安装Minecraft" class="headerlink" title="安装Minecraft"></a>安装Minecraft</h3><p>安装过程并不复杂。运行<code>HMCL-3.2.129.exe</code>，在『游戏列表』中选择『安装新游戏版本』。<br><img src="/images/2019-04/seus1.png" alt></p><p>然后选择1.12.2版本，其它版本可能无法正确适配光影。</p><p><img src="/images/2019-04/seus2.png" alt></p><p>随后安装OptiFine，点击这里的箭头：</p><p><img src="/images/2019-04/seus3.png" alt></p><p>选择最新版本，例如HD_U_E3。如果在游戏过程中发现存在渲染问题（例如黑屏等），可以换其它版本试试。</p><p><img src="/images/2019-04/seus4.png" alt></p><p>最后点击『安装』，HMCL启动器会自动下载并配置相关组件。</p><a id="more"></a><h3 id="安装光影和材质"><a href="#安装光影和材质" class="headerlink" title="安装光影和材质"></a>安装光影和材质</h3><p>初始化完成后，在<code>HMCL-3.2.129.exe</code>的同级目录下，会创建一个名为<code>.minecraft</code>的文件夹。打开这个目录，将光影放入<code>shaderpacks</code>子目录，将材质包放入<code>resourcepacks</code>子目录（都是直接将<code>zip</code>格式的文件放进去即可，无需解压）。然后启动游戏，就可以检查光影和材质是否正确运作了。</p><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p>如果一切正常（启动游戏后可以进入主界面），下一步就是进行设置了。如果启动器弹出了报错信息，请检查JAVA版本、游戏版本和插件版本是否正确，必要时可以通过提交Issue与开发者交流。</p><h3 id="设置光影"><a href="#设置光影" class="headerlink" title="设置光影"></a>设置光影</h3><p>依次点击『选项…』『视频设置…』『光影…』，所有<code>shaderpacks</code>目录下的光影都会显示在这里。点击一个启用即可。</p><p><img src="/images/2019-04/seus5.png" alt></p><h3 id="设置材质"><a href="#设置材质" class="headerlink" title="设置材质"></a>设置材质</h3><p>依次点击『选项…』『资源包…』，所有<code>resourcepacks</code>目录下的材质都会显示在这里。点击一个启用即可。</p><p><img src="/images/2019-04/seus6.png" alt></p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>最后再上几张游戏截图。</p><p><img src="/images/2019-04/screenshot1.png" alt></p><p><img src="/images/2019-04/screenshot2.png" alt></p><p><img src="/images/2019-04/screenshot3.png" alt></p><p><img src="/images/2019-04/screenshot4.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;p&gt;下面列出了博主测试成功的环境，使用其它的版本可能出现不可预料的情况。&lt;/p&gt;
&lt;h3 id=&quot;硬件&quot;&gt;&lt;a href=&quot;#硬件&quot; class=&quot;headerlink&quot; title=&quot;硬件&quot;&gt;&lt;/a&gt;硬件&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;图形卡&lt;br&gt;由于Seus光影对计算机的图形性能有较高的要求，博主使用了一块NVIDIA GeForce RTX 2070显卡进行测试。根据作者的描述，20系和10系显卡对Seus光影的支持没有本质区别。因此，你也可以选择其它型号的N卡，运行起来不会有大问题。不过，根据一些Minecraft论坛的反馈，A卡和I卡可能无法支持。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;其它&lt;br&gt;其它硬件达到主流配置即可，Minecraft对性能没有什么苛求。如果上卡吧标配的话，流畅玩耍一定没有什么问题。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;软件&quot;&gt;&lt;a href=&quot;#软件&quot; class=&quot;headerlink&quot; title=&quot;软件&quot;&gt;&lt;/a&gt;软件&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Windows系统&lt;br&gt;由于macOS Mojave的N卡驱动迟迟没有更新（据说是苹果已经抛弃了N卡，未来很有可能不会再更新驱动），因而需要在其它系统上运行。博主使用的是Windows 10。Linux原理上也是可以的，不过博主并没有尝试。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;JAVA环境&lt;br&gt;Minecraft JAVA版自然需要JAVA的支持。由于后面用到的启动器对JAVA9及以上版本的支持不佳，博主推荐安装JAVA SE 8。可以到&lt;a href=&quot;https://www.oracle.com/index.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Oracle官网&lt;/a&gt;下载。测试使用的是JDK1.8.0_211。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HMCL启动器&lt;br&gt;你可以从GitHub上&lt;a href=&quot;https://github.com/huanghongxun/HMCL/releases&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;获取HMCL启动器&lt;/a&gt;，下载&lt;code&gt;exe&lt;/code&gt;版本即可。博主使用的是发稿前的最新版本3.2.129，后面的步骤也以该版本为例。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;光影&lt;br&gt;在&lt;a href=&quot;https://sonicether.com/seus/#Downloads&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Seus官方网站&lt;/a&gt;可以下载免费的光影包。推荐使用&lt;code&gt;SEUS Renewed v1.0.0&lt;/code&gt;和&lt;code&gt;SEUS V11&lt;/code&gt;。除此之外，可以向作者本人&lt;a href=&quot;https://www.patreon.com/sonicether&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;付费购买&lt;/a&gt;制作中的&lt;code&gt;SEUS PTGI&lt;/code&gt;（目前的版本收费10美元，未来发布的正式版将免费）。截至发稿前，最新版本为&lt;code&gt;SEUS PTGI E6&lt;/code&gt;。博主这里提供了一个免费镜像：&lt;br&gt;&lt;a href=&quot;/files/SEUS_PTGI_E6.zip&quot;&gt;SEUS_PTGI_E6.zip&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;材质&lt;br&gt;一个好的材质包同样是不可或缺的。博主推荐使用&lt;a href=&quot;https://matteorizzo.com/realistico/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Realistico&lt;/a&gt;，不过，这个材质包的官方&lt;code&gt;512x&lt;/code&gt;版本是付费的，可以自行到国内或国外的玩家论坛上寻找资源。&lt;br&gt;此外还有一个&lt;a href=&quot;https://continuum.graphics/stratum-rp&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Stratum&lt;/a&gt;材质也很不错，Reddit上的讨论地址是&lt;a href=&quot;https://www.reddit.com/r/modpiracy/comments/9vmmj9/request_tier_3_of_the_stratum_resource_pack/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;[Request] Tier 3 of the stratum resource pack&lt;/a&gt;，不过下载链接被删帖了。后来博主发现可以通过把&lt;code&gt;www.reddit.com&lt;/code&gt;替换为&lt;code&gt;www.removeddit.com&lt;/code&gt;查看所有被删除的内容，然后就找到了这个Mediafire上的存储库：&lt;a href=&quot;https://www.mediafire.com/folder/6lxv0w9517j6l/Stratum&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Stratum&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;h3 id=&quot;安装Minecraft&quot;&gt;&lt;a href=&quot;#安装Minecraft&quot; class=&quot;headerlink&quot; title=&quot;安装Minecraft&quot;&gt;&lt;/a&gt;安装Minecraft&lt;/h3&gt;&lt;p&gt;安装过程并不复杂。运行&lt;code&gt;HMCL-3.2.129.exe&lt;/code&gt;，在『游戏列表』中选择『安装新游戏版本』。&lt;br&gt;&lt;img src=&quot;/images/2019-04/seus1.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;然后选择1.12.2版本，其它版本可能无法正确适配光影。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2019-04/seus2.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;随后安装OptiFine，点击这里的箭头：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2019-04/seus3.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;选择最新版本，例如HD_U_E3。如果在游戏过程中发现存在渲染问题（例如黑屏等），可以换其它版本试试。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2019-04/seus4.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;最后点击『安装』，HMCL启动器会自动下载并配置相关组件。&lt;/p&gt;
    
    </summary>
    
      <category term="电子游戏" scheme="https://zhangshuqiao.org/categories/%E7%94%B5%E5%AD%90%E6%B8%B8%E6%88%8F/"/>
    
    
      <category term="我的世界" scheme="https://zhangshuqiao.org/tags/%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8C/"/>
    
  </entry>
  
  <entry>
    <title>为JavaScript控制台添加样式</title>
    <link href="https://zhangshuqiao.org/2019-04/%E4%B8%BAJavaScript%E6%8E%A7%E5%88%B6%E5%8F%B0%E6%B7%BB%E5%8A%A0%E6%A0%B7%E5%BC%8F/"/>
    <id>https://zhangshuqiao.org/2019-04/为JavaScript控制台添加样式/</id>
    <published>2019-04-18T11:59:58.000Z</published>
    <updated>2019-07-23T09:06:30.818Z</updated>
    
    <content type="html"><![CDATA[<p>在常见的JavaScript代码中，一般会通过<code>console</code>向控制台输出简单的文字信息。为了把信息输出得更优雅更便于阅读，除了<code>cosole.log()</code>方法外，还可以调用<code>cosole.warn()</code>来输出警告信息，在输出信息前面会有一个带感叹号的黄色三角警告符号。<br>另外经常用到的是输出错误信息，可以通过调用<code>console.error()</code>来实现，信息前面会出现一个带叉的红色圆形图标。<br>在某些浏览器下，还可以按以下格式，为输出到控制台的文字进行CSS控制，添加样式：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">"%c需要输出的信息"</span>, <span class="string">"css代码"</span>);</span><br></pre></td></tr></table></figure><p>这样可以显示缤纷的颜色，甚至图片，简直爽翻了。<br>下面是Chrome中<code>console.log()</code>的官方文档摘要，也适用于大部分主流浏览器：</p><table><thead><tr><th>Format Specifier</th><th>Description</th></tr></thead><tbody><tr><td>%s</td><td>Formats the value as a string.</td></tr><tr><td>%d or %i</td><td>Formats the value as an integer.</td></tr><tr><td>%f</td><td>Formats the value as a floating point value.</td></tr><tr><td>%o</td><td>Formats the value as an expandable DOM element (as in the Elements panel).</td></tr><tr><td>%O</td><td>Formats the value as an expandable JavaScript object.</td></tr><tr><td>%c</td><td>Formats the output string according to CSS styles you provide.</td></tr></tbody></table><p>下面是一些例子：</p><p><img src="/images/2019-04/2018-07-17.png" alt></p><h2 id="3D-Text"><a href="#3D-Text" class="headerlink" title="3D Text"></a>3D Text</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">"%c3D Text"</span>, <span class="string">"text-shadow: 0 1px 0 #ccc, 0 2px 0 #c9c9c9, 0 3px 0 #bbb, 0 4px 0 #b9b9b9, 0 5px 0 #aaa, 0 6px 1px rgba(0, 0, 0, .1), 0 0 5px rgba(0, 0, 0, .1), 0 1px 3px rgba(0, 0, 0, .3), 0 3px 5px rgba(0, 0, 0, .2), 0 5px 10px rgba(0, 0, 0, .25), 0 10px 10px rgba(0, 0, 0, .2), 0 20px 20px rgba(0, 0, 0, .15);\</span></span><br><span class="line"><span class="string">font-size: 5em;"</span>);</span><br></pre></td></tr></table></figure><h2 id="Colorful-CSS"><a href="#Colorful-CSS" class="headerlink" title="Colorful CSS"></a>Colorful CSS</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">"%cColorful CSS"</span>, <span class="string">"background: rgba(252, 234, 187, 1);\</span></span><br><span class="line"><span class="string">background: -moz-linear-gradient(left, rgba(252, 234, 187, 1) 0%, rgba(175, 250, 77, 1) 12%, rgba(0, 247, 49, 1) 28%, rgba(0, 210, 247, 1) 39%, rgba(0, 189, 247, 1) 51%, rgba(133, 108, 217, 1) 64%, rgba(177, 0, 247, 1) 78%, rgba(247, 0, 189, 1) 87%, rgba(245, 22, 52, 1) 100%);\</span></span><br><span class="line"><span class="string">background: -webkit-gradient(left top, right top, color-stop(0%, rgba(252, 234, 187, 1)), color-stop(12%, rgba(175, 250, 77, 1)), color-stop(28%, rgba(0, 247, 49, 1)), color-stop(39%, rgba(0, 210, 247, 1)), color-stop(51%, rgba(0, 189, 247, 1)), color-stop(64%, rgba(133, 108, 217, 1)), color-stop(78%, rgba(177, 0, 247, 1)), color-stop(87%, rgba(247, 0, 189, 1)), color-stop(100%, rgba(245, 22, 52, 1)));\</span></span><br><span class="line"><span class="string">background: -webkit-linear-gradient(left, rgba(252, 234, 187, 1) 0%, rgba(175, 250, 77, 1) 12%, rgba(0, 247, 49, 1) 28%, rgba(0, 210, 247, 1) 39%, rgba(0, 189, 247, 1) 51%, rgba(133, 108, 217, 1) 64%, rgba(177, 0, 247, 1) 78%, rgba(247, 0, 189, 1) 87%, rgba(245, 22, 52, 1) 100%);\</span></span><br><span class="line"><span class="string">background: -o-linear-gradient(left, rgba(252, 234, 187, 1) 0%, rgba(175, 250, 77, 1) 12%, rgba(0, 247, 49, 1) 28%, rgba(0, 210, 247, 1) 39%, rgba(0, 189, 247, 1) 51%, rgba(133, 108, 217, 1) 64%, rgba(177, 0, 247, 1) 78%, rgba(247, 0, 189, 1) 87%, rgba(245, 22, 52, 1) 100%);\</span></span><br><span class="line"><span class="string">background: -ms-linear-gradient(left, rgba(252, 234, 187, 1) 0%, rgba(175, 250, 77, 1) 12%, rgba(0, 247, 49, 1) 28%, rgba(0, 210, 247, 1) 39%, rgba(0, 189, 247, 1) 51%, rgba(133, 108, 217, 1) 64%, rgba(177, 0, 247, 1) 78%, rgba(247, 0, 189, 1) 87%, rgba(245, 22, 52, 1) 100%);\</span></span><br><span class="line"><span class="string">background: linear-gradient(to right, rgba(252, 234, 187, 1) 0%, rgba(175, 250, 77, 1) 12%, rgba(0, 247, 49, 1) 28%, rgba(0, 210, 247, 1) 39%, rgba(0, 189, 247, 1) 51%, rgba(133, 108, 217, 1) 64%, rgba(177, 0, 247, 1) 78%, rgba(247, 0, 189, 1) 87%, rgba(245, 22, 52, 1) 100%);\</span></span><br><span class="line"><span class="string">filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fceabb', endColorstr='#f51634', GradientType=1);\</span></span><br><span class="line"><span class="string">font-size: 5em;"</span>);</span><br></pre></td></tr></table></figure><h2 id="Rainbow-Text"><a href="#Rainbow-Text" class="headerlink" title="Rainbow Text"></a>Rainbow Text</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">"%cRainbow Text"</span>, <span class="string">"background-image:-webkit-gradient( linear, left top, right top, color-stop(0, #f22), color-stop(0.15, #f2f), color-stop(0.3, #22f), color-stop(0.45, #2ff), color-stop(0.6, #2f2), color-stop(0.75, #2f2), color-stop(0.9, #ff2), color-stop(1, #f22));\</span></span><br><span class="line"><span class="string">color: transparent;\</span></span><br><span class="line"><span class="string">-webkit-background-clip: text;\</span></span><br><span class="line"><span class="string">font-size: 5em;"</span>);</span><br></pre></td></tr></table></figure><h2 id="Image"><a href="#Image" class="headerlink" title="Image"></a>Image</h2><p><img src="/images/2019-04/072156353445447.gif" alt></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">"%c"</span>, <span class="string">"padding: 50px 300px; line-height: 120px; background: url('/images/icon.gif') no-repeat;"</span>);</span><br></pre></td></tr></table></figure><p>更多内容可以参考<a href="https://www.cnblogs.com/Wayou/p/chrome_dev_tool_style_console.html" target="_blank" rel="noopener">Chrome控制台新玩法-console显示图片以及为文字加样式</a>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在常见的JavaScript代码中，一般会通过&lt;code&gt;console&lt;/code&gt;向控制台输出简单的文字信息。为了把信息输出得更优雅更便于阅读，除了&lt;code&gt;cosole.log()&lt;/code&gt;方法外，还可以调用&lt;code&gt;cosole.warn()&lt;/code&gt;来
      
    
    </summary>
    
      <category term="Web开发" scheme="https://zhangshuqiao.org/categories/Web%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="JavaScript" scheme="https://zhangshuqiao.org/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>macOS Chrome禁用双指手势</title>
    <link href="https://zhangshuqiao.org/2019-04/macOS%20Chrome%E7%A6%81%E7%94%A8%E5%8F%8C%E6%8C%87%E6%89%8B%E5%8A%BF/"/>
    <id>https://zhangshuqiao.org/2019-04/macOS Chrome禁用双指手势/</id>
    <published>2019-04-09T16:02:42.000Z</published>
    <updated>2019-06-25T04:23:52.056Z</updated>
    
    <content type="html"><![CDATA[<p>Mac版Chrome自带双指手势前进后退功能，也就是在一个页面已经水平滑动到尽头后，继续向前/向后滑动，就会触发前进/后退。这个功能的初衷不错，只是容易误操作，博主一直想把它关闭了，但Chrome的设置里没有该选项，也没有从<code>chrome://flags/</code>中找到相关内容。<br>后来发现可以通过命令行进行设置，操作方法是：</p><p>禁用鼠标手势</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.google.Chrome AppleEnableMouseSwipeNavigateWithScrolls -bool <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>禁用触控板手势</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.google.Chrome AppleEnableSwipeNavigateWithScrolls -bool <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>参考文章：<a href="https://blog.csdn.net/HandSome696/article/details/79493889" target="_blank" rel="noopener">Mac Chrome 关闭 双指手势 前进 后退</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Mac版Chrome自带双指手势前进后退功能，也就是在一个页面已经水平滑动到尽头后，继续向前/向后滑动，就会触发前进/后退。这个功能的初衷不错，只是容易误操作，博主一直想把它关闭了，但Chrome的设置里没有该选项，也没有从&lt;code&gt;chrome://flags/&lt;/co
      
    
    </summary>
    
      <category term="技术" scheme="https://zhangshuqiao.org/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Mac" scheme="https://zhangshuqiao.org/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>Test-driven Development</title>
    <link href="https://zhangshuqiao.org/2019-03/Test-driven%20Development/"/>
    <id>https://zhangshuqiao.org/2019-03/Test-driven Development/</id>
    <published>2019-03-21T04:12:42.000Z</published>
    <updated>2019-04-07T14:47:40.080Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/2019-03/test.driven.development.cartoon_0.jpg" alt></p><p>图片来源：<a href="https://www.icemobile.com/test-driven-development" target="_blank" rel="noopener">Test-driven Development</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/2019-03/test.driven.development.cartoon_0.jpg&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;图片来源：&lt;a href=&quot;https://www.icemobile.com/test-driven-developm
      
    
    </summary>
    
      <category term="幽默" scheme="https://zhangshuqiao.org/categories/%E5%B9%BD%E9%BB%98/"/>
    
    
  </entry>
  
  <entry>
    <title>神奇的求圆周率代码</title>
    <link href="https://zhangshuqiao.org/2019-03/%E7%A5%9E%E5%A5%87%E7%9A%84%E6%B1%82%E5%9C%86%E5%91%A8%E7%8E%87%E4%BB%A3%E7%A0%81/"/>
    <id>https://zhangshuqiao.org/2019-03/神奇的求圆周率代码/</id>
    <published>2019-03-14T07:09:26.000Z</published>
    <updated>2019-06-27T16:58:35.278Z</updated>
    
    <content type="html"><![CDATA[<p>今天是圆周率日，我们就来讲一讲关于圆周率的故事吧。<br>很久以前，博主看到了一段惊为天人的代码，可以求出圆周率的前800位（修改参数可以实现任意精度）：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a=<span class="number">10000</span>,b,c=<span class="number">2800</span>,d,e,f[<span class="number">2801</span>],g;main()&#123;<span class="keyword">for</span>(;b-c;)f[b++]=a/<span class="number">5</span>;</span><br><span class="line"><span class="keyword">for</span>(;d=<span class="number">0</span>,g=c*<span class="number">2</span>;c-=<span class="number">14</span>,<span class="built_in">printf</span>(<span class="string">"%.4d"</span>,e+d/a),e=d%a)<span class="keyword">for</span>(b=c;d+=f[b]*a,</span><br><span class="line">f[b]=d%--g,d/=g--,--b;d*=b);&#125;</span><br></pre></td></tr></table></figure><p><a href="https://crypto.stanford.edu/pbc/notes/pi/code.html" target="_blank" rel="noopener">经过考证</a>，这段代码的作者是Dik T. Winter。下面我们来看看它是如何工作的。</p><p>在C语言中，<code>for</code>循环和<code>while</code>循环可以互相代替。这里涉及到<code>for</code>循环的执行顺序。例如</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (statement1; statement2; statement3) &#123;</span><br><span class="line">    statements;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的<code>for</code>语句可以用下面的<code>while</code>语句来代替：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">statement1;</span><br><span class="line"><span class="keyword">while</span> (statement2) &#123;</span><br><span class="line">    statements;</span><br><span class="line">    statement3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>而逗号运算符和<code>--</code>运算符的功能也是需要注意的。要写出这样怪异的C程序，逗号运算符无疑是一个好的助手，它的作用是：从左到右依次计算各个表达式的值，并且返回最右边表达式的值。</p><p>了解这些内容后，我们将这段代码中的<code>for</code>循环展开，等价地写为<code>while</code>的形式。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> a = <span class="number">10000</span>, b, c = <span class="number">2800</span>, d, e, f[<span class="number">2801</span>], g;</span><br><span class="line">main() &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; c; i++) &#123;</span><br><span class="line">        f[i] = a / <span class="number">5</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (c != <span class="number">0</span>) &#123;</span><br><span class="line">        d = <span class="number">0</span>;</span><br><span class="line">        g = c * <span class="number">2</span>;</span><br><span class="line">        b = c;</span><br><span class="line">        <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">            d += f[b] * a;</span><br><span class="line">            g--;</span><br><span class="line">            f[b] = d % g;</span><br><span class="line">            d /= g;</span><br><span class="line">            g--;</span><br><span class="line">            b--;</span><br><span class="line">            <span class="keyword">if</span> (b == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">            d *= b;</span><br><span class="line">        &#125;</span><br><span class="line">        c -= <span class="number">14</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.4d"</span>, e + d / a);</span><br><span class="line">        e = d % a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p>进一步观察，不难发现这里的<code>a</code>是常数，而<code>g</code>可以方便的代换掉。继续改写代码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> b, c = <span class="number">2800</span>, d, e, f[<span class="number">2801</span>]; </span><br><span class="line">main() &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; c; i++) &#123;</span><br><span class="line">        f[i] = <span class="number">2000</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (c != <span class="number">0</span>) &#123;</span><br><span class="line">        b = c;</span><br><span class="line">        d = f[b] * <span class="number">10000</span>;</span><br><span class="line">        f[b] = d % (b * <span class="number">2</span> - <span class="number">1</span>);</span><br><span class="line">        d /= b * <span class="number">2</span> - <span class="number">1</span>;</span><br><span class="line">        b--;</span><br><span class="line">        <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">            d = d * b + f[b] * <span class="number">10000</span>;</span><br><span class="line">            f[b] = d % (b * <span class="number">2</span> - <span class="number">1</span>);</span><br><span class="line">            d = d / (b * <span class="number">2</span> - <span class="number">1</span>);</span><br><span class="line">            b--;</span><br><span class="line">            <span class="keyword">if</span> (b == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        c -= <span class="number">14</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.4d"</span>, e + d / <span class="number">10000</span>);</span><br><span class="line">        e = d % <span class="number">10000</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不过，即使是这样，这段代码还是让人看得很迷糊。我们不妨开个挂，进行倒推吧。<br>我们来看看这段代码的数学对应。这是一个计算$\pi$的公式：<br>$$\frac{\pi}{2}=\sum_{k=0}^{\infty}\frac{k!}{(2k+1)!!}=\sum_{k=0}^{\infty}\frac{2^{k}k!^{2}}{(2k+1)!}=1+\frac{1}{3}\left(1+\frac{2}{5}\left(1+\frac{3}{7}(1+\cdots)\right)\right)$$<br>可以进一步写为<br>$$\pi=2\left(1+\frac{1}{3}\left(1+\frac{2}{5}\left(1+…\left(1+\frac{2799}{2\cdot2799+1}(1+0)\right)…\right)\right)\right)$$<br>根据维基百科的相关内容，该公式最早似乎由牛顿推出，而Wolfram收录的一个变式则写明作者是Beeler等人（参见<a href="http://mathworld.wolfram.com/PiFormulas.html" target="_blank" rel="noopener">PiFormulas</a>）。<br>在这个迭代中，我们需要不断地生成形如$\frac{k}{2k+1}$的分式。对应于展开后的代码，不难发现<code>g</code>就是分母，而<code>b</code>则是分子。<br>当然，这还不是足够的。一个重要的问题是如何在逐次迭代中将误差进行传递，以实现任意精度的计算。整个程序中的唯一一个关系到输出的<code>printf</code>函数，每次会输出四位整数。那么<code>c -= 14</code>又是怎么来的呢？我们注意到$2^{14}&gt;10^4=10000$，而$14\times 200=2800$，$200\times 4=800$，这些『神秘数字』就都说得通了。每次循环用14项获得4位精确的$\pi$值，它们是一个八位整数的前四位，因此需要模10000；然后将后四位乘以10000，代入下一次循环。</p><p>读者可以自行体会这个算法的精妙，特别是它是如何在不损失精度的情况下，完成整个计算过程。</p><p>最后再附上一个Python版本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"></span><br><span class="line">a = <span class="number">10000</span></span><br><span class="line">c = <span class="number">2800</span></span><br><span class="line">e = <span class="number">0</span></span><br><span class="line">f = [a // <span class="number">5</span> <span class="keyword">for</span> i <span class="keyword">in</span> range(c + <span class="number">1</span>)]</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> c != <span class="number">0</span>:</span><br><span class="line">    d = <span class="number">0</span></span><br><span class="line">    g = c * <span class="number">2</span></span><br><span class="line">    b = c</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        d += f[b] * a</span><br><span class="line">        g -= <span class="number">1</span></span><br><span class="line">        f[b] = d % g</span><br><span class="line">        d //= g</span><br><span class="line">        g -= <span class="number">1</span></span><br><span class="line">        b -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> b == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        d *= b</span><br><span class="line">    </span><br><span class="line">    c -= <span class="number">14</span></span><br><span class="line">    print(<span class="string">"%.4d"</span> % (e + d // a), end = <span class="string">""</span>)</span><br><span class="line">    e = d % a</span><br></pre></td></tr></table></figure><hr><p>参考文章：<br><a href="https://crypto.stanford.edu/pbc/notes/pi/code.html" target="_blank" rel="noopener">Computing Pi in C</a><br><a href="http://www.cnblogs.com/PegasusWang/archive/2013/03/17/2965189.html" target="_blank" rel="noopener">求圆周率Pi一万位程序分析</a></p><p>拓展阅读：<br><a href="https://blog.csdn.net/s170262941/article/details/11123945" target="_blank" rel="noopener">编程计算Pi的N种方法</a><br><a href="http://numbers.computation.free.fr/Constants/TinyPrograms/tinycodes.html" target="_blank" rel="noopener">Tiny programs for constants computation</a><br><a href="https://zh.wikipedia.org/wiki/圓周率" target="_blank" rel="noopener">圓周率 - 维基百科</a><br><a href="https://zh.wikipedia.org/wiki/圆周率近似值" target="_blank" rel="noopener">圆周率近似值 - 维基百科</a><br><a href="https://zh.wikipedia.org/wiki/梅欽類公式" target="_blank" rel="noopener">梅欽類公式 - 维基百科</a><br><a href="http://www.angio.net/pi/" target="_blank" rel="noopener">The Pi-Search Page</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天是圆周率日，我们就来讲一讲关于圆周率的故事吧。&lt;br&gt;很久以前，博主看到了一段惊为天人的代码，可以求出圆周率的前800位（修改参数可以实现任意精度）：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a=&lt;span class=&quot;number&quot;&gt;10000&lt;/span&gt;,b,c=&lt;span class=&quot;number&quot;&gt;2800&lt;/span&gt;,d,e,f[&lt;span class=&quot;number&quot;&gt;2801&lt;/span&gt;],g;main()&amp;#123;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(;b-c;)f[b++]=a/&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(;d=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,g=c*&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;c-=&lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%.4d&quot;&lt;/span&gt;,e+d/a),e=d%a)&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(b=c;d+=f[b]*a,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f[b]=d%--g,d/=g--,--b;d*=b);&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;https://crypto.stanford.edu/pbc/notes/pi/code.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;经过考证&lt;/a&gt;，这段代码的作者是Dik T. Winter。下面我们来看看它是如何工作的。&lt;/p&gt;
&lt;p&gt;在C语言中，&lt;code&gt;for&lt;/code&gt;循环和&lt;code&gt;while&lt;/code&gt;循环可以互相代替。这里涉及到&lt;code&gt;for&lt;/code&gt;循环的执行顺序。例如&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (statement1; statement2; statement3) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    statements;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面的&lt;code&gt;for&lt;/code&gt;语句可以用下面的&lt;code&gt;while&lt;/code&gt;语句来代替：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;statement1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (statement2) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    statements;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    statement3;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;而逗号运算符和&lt;code&gt;--&lt;/code&gt;运算符的功能也是需要注意的。要写出这样怪异的C程序，逗号运算符无疑是一个好的助手，它的作用是：从左到右依次计算各个表达式的值，并且返回最右边表达式的值。&lt;/p&gt;
&lt;p&gt;了解这些内容后，我们将这段代码中的&lt;code&gt;for&lt;/code&gt;循环展开，等价地写为&lt;code&gt;while&lt;/code&gt;的形式。&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10000&lt;/span&gt;, b, c = &lt;span class=&quot;number&quot;&gt;2800&lt;/span&gt;, d, e, f[&lt;span class=&quot;number&quot;&gt;2801&lt;/span&gt;], g;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; c; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        f[i] = a / &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (c != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        d = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        g = c * &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        b = c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            d += f[b] * a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            g--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            f[b] = d % g;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            d /= g;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            g--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            b--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (b == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            d *= b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        c -= &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%.4d&quot;&lt;/span&gt;, e + d / a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        e = d % a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="程序设计" scheme="https://zhangshuqiao.org/categories/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="C" scheme="https://zhangshuqiao.org/tags/C/"/>
    
      <category term="数学" scheme="https://zhangshuqiao.org/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>真正的红黑树</title>
    <link href="https://zhangshuqiao.org/2019-03/%E7%9C%9F%E6%AD%A3%E7%9A%84%E7%BA%A2%E9%BB%91%E6%A0%91/"/>
    <id>https://zhangshuqiao.org/2019-03/真正的红黑树/</id>
    <published>2019-03-04T16:17:14.000Z</published>
    <updated>2019-03-21T03:17:24.197Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/2019-03/IMG_4171.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/2019-03/IMG_4171.jpg&quot; alt&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="幽默" scheme="https://zhangshuqiao.org/categories/%E5%B9%BD%E9%BB%98/"/>
    
    
  </entry>
  
  <entry>
    <title>macOS Mojave动态壁纸</title>
    <link href="https://zhangshuqiao.org/2019-02/macOS%20Mojave%E5%8A%A8%E6%80%81%E5%A3%81%E7%BA%B8/"/>
    <id>https://zhangshuqiao.org/2019-02/macOS Mojave动态壁纸/</id>
    <published>2019-02-26T00:33:12.000Z</published>
    <updated>2019-03-04T05:24:44.609Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/2019-02/1_qjVGv0IMNTeKFIcks41ohA.png" alt></p><p>How Apple built dynamic wallpapers? And is it possible to create your own dynamic wallpaper for macOS? I spent some time because I would like to answer to the both above questions.<br>Apple如何构建动态壁纸？是否可以为macOS创建自己的动态壁纸？我花了一些时间，因为我想回答上述两个问题。</p><hr><p>In Mojave we can choose new type of wallpaper: dynamic.<br>在Mojave，我们可以选择新型壁纸：动态。</p><p><img src="/images/2019-02/1_4a3SZs7wS3g3AtO8E2RNvw.png" alt></p><p>Depending on day time, system displays different wallpaper. At night it is picture of Mojave at night, during day it’s picture of Mojave taken during day. So at night we have dark wallpaper at day we have light wallpaper.<br>根据时间，系统会显示不同的壁纸。晚上显示Mojave晚上的照片，白天则是在白天拍摄的Mojave的照片。所以晚上我们有暗色的壁纸，白天则是明亮的壁纸。</p><p>All built in wallpapers in macOS we can find in folder: <code>/Library/Desktop Pictures</code>. Also here we can find dynamic wallpaper.<br>我们可以在文件夹<code>/Library/Desktop Pictures</code>中找到所有macOS内置的壁纸。在这里我们也可以找到动态壁纸。</p><p><img src="/images/2019-02/1_lRpwIxzeyEoXMbz97ZfG5Q.png" alt></p><p>Dynamic wallpaper is saved as a HEIC file (<code>Mojave (Dynamic).heic</code>). More information about this type of file you can find on <a href="https://en.wikipedia.org/wiki/High_Efficiency_Image_File_Format" target="_blank" rel="noopener">Wikipedia</a>. Generally this is type of file which Apple uses in iOS devices. Photos in iOS (also live photos) are stored as a HEIC file. That kind of file can contains multiple images/thumbnails and metadata in a single file.<br>动态壁纸保存为HEIC文件（<code>Mojave (Dynamic).heic</code>）。有关此类文件的更多信息，请访问<a href="https://en.wikipedia.org/wiki/High_Efficiency_Image_File_Format" target="_blank" rel="noopener">Wikipedia</a>。通常，这是Apple在iOS设备中使用的文件类型。iOS中的照片（也包括实时照片）会存储为HEIC文件。这种文件可以在单个文件中包含多个图像/缩略图和元数据。</p><p>There is really good online tool where we can check content of Mojave wallpaper file: <a href="https://strukturag.github.io/libheif/" target="_blank" rel="noopener">https://strukturag.github.io/libheif/</a>. You can upload <code>Mojave (Dynamic).heic</code> file and you will see that in this single file there is 16 separate pictures taken in different day phase.<br>有一个很好的在线工具，让我们可以检查Mojave壁纸文件的内容：<a href="https://strukturag.github.io/libheif/" target="_blank" rel="noopener">https://strukturag.github.io/libheif/</a> 。你可以上传<code>Mojave (Dynamic).heic</code>文件，然后你会发现在这个单独的文件中有16张不同时间拍摄的单独照片。</p><p><img src="/images/2019-02/1_ESDAv949YKQIEocL-qDcGA.png" alt></p><p>So maybe it’s enough to create new HEIC file with 16 separate images and macOS will show them properly. Let’s try it!<br>所以也许它足以创建具有16个单独图像的新HEIC文件，macOS将正确显示它们。我们来试试吧！</p><a id="more"></a><p>First I had to prepare 16 different images.<br>首先，我必须准备16张不同的图像。</p><p><img src="/images/2019-02/1_VBLUh9q7ygeysmHmCPr7tQ.png" alt></p><p>I know, I know - they are not impressive :-). However for our experiment they will be enough.<br>我知道，我知道 - 它们非常trivial :-)。然而，对于我们的实验，它们就足够了。</p><p>Now I have to prepare application which convert set of images to one HEIC file. I prepared simple console application in Swift.<br>现在我必须准备一个能将图像集转换为HEIC文件的应用程序。我用Swift写了一个简单的控制台应用程序。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Foundation</span><br><span class="line"><span class="keyword">import</span> AppKit</span><br><span class="line"><span class="keyword">import</span> AVFoundation</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">NSImage</span> </span>&#123;</span><br><span class="line">    <span class="meta">@objc</span> <span class="keyword">var</span> <span class="type">CGImage</span>: <span class="type">CGImage?</span> &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123;</span><br><span class="line">            <span class="keyword">guard</span> <span class="keyword">let</span> imageData = <span class="keyword">self</span>.tiffRepresentation <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">            <span class="keyword">guard</span> <span class="keyword">let</span> sourceData = <span class="type">CGImageSourceCreateWithData</span>(imageData <span class="keyword">as</span> <span class="type">CFData</span>, <span class="literal">nil</span>) <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="type">CGImageSourceCreateImageAtIndex</span>(sourceData, <span class="number">0</span>, <span class="literal">nil</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> output = <span class="string">"wallpapers-new/output.heic"</span></span><br><span class="line"><span class="keyword">let</span> quality = <span class="number">0.9</span></span><br><span class="line"><span class="keyword">var</span> imageData: <span class="type">Data?</span> = <span class="literal">nil</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">let</span> dir = <span class="type">FileManager</span>.<span class="keyword">default</span>.urls(<span class="keyword">for</span>: .documentDirectory, <span class="keyword">in</span>: .userDomainMask).first &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> destinationData = <span class="type">NSMutableData</span>()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> destination = <span class="type">CGImageDestinationCreateWithData</span>(destinationData, <span class="type">AVFileType</span>.heic <span class="keyword">as</span> <span class="type">CFString</span>, <span class="number">16</span>, <span class="literal">nil</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> options = [kCGImageDestinationLossyCompressionQuality: quality]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> index <span class="keyword">in</span> <span class="number">1</span>...<span class="number">16</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> fileURL = dir.appendingPathComponent(<span class="string">"wallpapers-new/\(index).png"</span>)</span><br><span class="line">            <span class="keyword">let</span> orginalImage = <span class="type">NSImage</span>(contentsOf: fileURL)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> cgImage = orginalImage?.<span class="type">CGImage</span> &#123;</span><br><span class="line">                    <span class="type">CGImageDestinationAddImage</span>(destination, cgImage, options <span class="keyword">as</span> <span class="type">CFDictionary</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">CGImageDestinationFinalize</span>(destination)</span><br><span class="line">        imageData = destinationData <span class="keyword">as</span> <span class="type">Data</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> outputURL = dir.appendingPathComponent(output)</span><br><span class="line">        <span class="keyword">try</span>! imageData?.write(to: outputURL)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Application requires that in my <code>Documents</code> folder I have <code>wallpaper-new</code> folder with 16 images (from <code>1.png</code> to <code>16.png</code>). I can run application and after that I have new <code>output.heic</code> file in the same directory.<br>应用程序要求在我的<code>Documents</code>文件夹中存在有<code>wallpaper-new</code>文件夹，里面有16张图片（从<code>1.png</code>到<code>16.png</code>）。我可以运行应用程序，之后我在同一目录中有了新的<code>output.heic</code>文件。</p><p>After setting this file as a wallpaper I had only one image displayed during whole day. So it seems that this file have to contains something extra. I decided to check what metadata is inside original Mojave wallpaper. I downloaded <a href="https://github.com/strukturag/libheif" target="_blank" rel="noopener">libheif</a> library (I modified a little bit <code>heif-info</code> application) and I’ve got below result:<br>将此文件设置为壁纸后，我在一整天中只显示了一个图像。所以似乎这个文件必须包含额外的东西。我决定检查原始Mojave壁纸中的元数据。我下载了<a href="https://github.com/strukturag/libheif" target="_blank" rel="noopener">libheif</a>库（修改了一下<code>heif-info</code>应用程序），然后得到了以下结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">Number of top level images: 16</span><br><span class="line">    image <span class="comment">#0</span></span><br><span class="line">        id: 61</span><br><span class="line">        width: 5120</span><br><span class="line">        height: 2880</span><br><span class="line">        is primary: yes</span><br><span class="line">        number of metadata: 1</span><br><span class="line">        metadata <span class="built_in">type</span>: mime</span><br><span class="line">        content <span class="built_in">type</span>: application/rdf+xml</span><br><span class="line">        metadata size: 3302</span><br><span class="line">        metadata content:</span><br><span class="line"></span><br><span class="line">&lt;?xpacket begin=<span class="string">""</span> id=<span class="string">"W5M0MpCehiHzreSzNTczkc9d"</span>?&gt; &lt;x:xmpmeta xmlns:x=<span class="string">"adobe:ns:meta/"</span> x:xmptk=<span class="string">"XMP Core 5.4.0"</span>&gt; &lt;rdf:RDF xmlns:rdf=<span class="string">"http://www.w3.org/1999/02/22-rdf-syntax-ns#"</span>&gt; &lt;rdf:Description rdf:about=<span class="string">""</span> xmlns:apple_desktop=<span class="string">"http://ns.apple.com/namespace/1.0/"</span> apple_desktop:solar=<span class="string">"YnBsaXN0MDDRAQJSc2mvEBADDBAUGBwgJCgsMDQ4PEFF1AQFBgcICQoLUWlRelFhUW8QACNAcO7vOubr3yO/1e+pmkOtXBAB1AQFBgcNDg8LEAEjQFRxqCKOFiAjwCR6waUkDgHUBAUGBxESEwsQAiNAVZV4BI4c+CPAEP2uFrMcrdQEBQYHFRYXCxADI0BWtALKmrjwIz/2ObLnx6l21AQFBgcZGhsLEAQjQFfTrJlEjnwjQByrLle1Q0rUBAUGBx0eHwsQBSNAWPrrmI0ISCNAKiwhpSRpc9QEBQYHISIjCxAGI0BgJff9KDpyI0BENTOsilht1AQFBgclJicLEAcjQGbHdYIVQKojQEq3fAg86lXUBAUGBykqKwsQCCNAbTGmpC2YRiNAQ2WFOZGjntQEBQYHLS4vCxAJI0BwXfII2B+SI0AmLcjfuC7g1AQFBgcxMjMLEAojQHCnF6YrsxcjQBS9AVBLTq3UBAUGBzU2NwsQCyNAcTcSnimmjCPAGP5E0ASXJtQEBQYHOTo7CxAMI0BxgSADjxK2I8AoalieOTyE1AQFBgc9Pj9AEA0jQHNWsnnMcWIjwEO+oq1pXr8QANQEBQYHQkNEQBAOI0ABZpkFpAcAI8BKYGg/VvMf1AQFBgdGR0hAEA8jQErBKblRzPgjwEMGElBIUO0ACAALAA4AIQAqACwALgAwADIANAA9AEYASABRAFMAXABlAG4AcAB5AIIAiwCNAJYAnwCoAKoAswC8AMUAxwDQANkA4gDkAO0A9gD/AQEBCgETARwBHgEnATABOQE7AUQBTQFWAVgBYQFqAXMBdQF+AYcBkAGSAZsBpAGtAa8BuAHBAcMBzAHOAdcB4AHpAesB9AAAAAAAAAIBAAAAAAAAAEkAAAAAAAAAAAAAAAAAAAH9"</span>/&gt; &lt;/rdf:RDF&gt; &lt;/x:xmpmeta&gt;&lt;?xpacket end=<span class="string">"w"</span>?&gt;</span><br><span class="line"></span><br><span class="line">    image <span class="comment">#1</span></span><br><span class="line">        id: 123</span><br><span class="line">        width: 5120</span><br><span class="line">        height: 2880</span><br><span class="line">    image <span class="comment">#2</span></span><br><span class="line">        id: 184</span><br><span class="line">        width: 5120</span><br><span class="line">        height: 2880</span><br><span class="line">    image <span class="comment">#3</span></span><br><span class="line">        id: 245</span><br><span class="line">        width: 5120</span><br><span class="line">        height: 2880</span><br><span class="line">    image <span class="comment">#4</span></span><br><span class="line">        id: 306</span><br><span class="line">        width: 5120</span><br><span class="line">        height: 2880</span><br><span class="line">    image <span class="comment">#5</span></span><br><span class="line">        id: 367</span><br><span class="line">        width: 5120</span><br><span class="line">        height: 2880</span><br><span class="line">    image <span class="comment">#6</span></span><br><span class="line">        id: 428</span><br><span class="line">        width: 5120</span><br><span class="line">        height: 2880</span><br><span class="line">    image <span class="comment">#7</span></span><br><span class="line">        id: 489</span><br><span class="line">        width: 5120</span><br><span class="line">        height: 2880</span><br><span class="line">    image <span class="comment">#8</span></span><br><span class="line">        id: 550</span><br><span class="line">        width: 5120</span><br><span class="line">        height: 2880</span><br><span class="line">    image <span class="comment">#9</span></span><br><span class="line">        id: 611</span><br><span class="line">        width: 5120</span><br><span class="line">        height: 2880</span><br><span class="line">    image <span class="comment">#10</span></span><br><span class="line">        id: 672</span><br><span class="line">        width: 5120</span><br><span class="line">        height: 2880</span><br><span class="line">    image <span class="comment">#11</span></span><br><span class="line">        id: 733</span><br><span class="line">        width: 5120</span><br><span class="line">        height: 2880</span><br><span class="line">    image <span class="comment">#12</span></span><br><span class="line">        id: 794</span><br><span class="line">        width: 5120</span><br><span class="line">        height: 2880</span><br><span class="line">    image <span class="comment">#13</span></span><br><span class="line">        id: 855</span><br><span class="line">        width: 5120</span><br><span class="line">        height: 2880</span><br><span class="line">    image <span class="comment">#14</span></span><br><span class="line">        id: 916</span><br><span class="line">        width: 5120</span><br><span class="line">        height: 2880</span><br><span class="line">    image <span class="comment">#15</span></span><br><span class="line">        id: 977</span><br><span class="line">        width: 5120</span><br><span class="line">        height: 2880</span><br></pre></td></tr></table></figure><p>Thus we can see that in the first image we have additional <a href="https://www.adobe.com/products/xmp.html" target="_blank" rel="noopener">XMP metadata</a>. Now I know that I have to modify a little bit my Swift application. It should also add metadata for the first image in the sequence.<br>因此，我们可以看到在第一张图片中我们有额外的<a href="https://www.adobe.com/products/xmp.html" target="_blank" rel="noopener">XMP元数据</a>。现在我知道我必须修改一下我的Swift应用程序。它还应该为序列中的第一个图像添加元数据。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Foundation</span><br><span class="line"><span class="keyword">import</span> AppKit</span><br><span class="line"><span class="keyword">import</span> AVFoundation</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">NSImage</span> </span>&#123;</span><br><span class="line">    <span class="meta">@objc</span> <span class="keyword">var</span> <span class="type">CGImage</span>: <span class="type">CGImage?</span> &#123;</span><br><span class="line">        <span class="keyword">get</span> &#123;</span><br><span class="line">            <span class="keyword">guard</span> <span class="keyword">let</span> imageData = <span class="keyword">self</span>.tiffRepresentation <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">            <span class="keyword">guard</span> <span class="keyword">let</span> sourceData = <span class="type">CGImageSourceCreateWithData</span>(imageData <span class="keyword">as</span> <span class="type">CFData</span>, <span class="literal">nil</span>) <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="type">CGImageSourceCreateImageAtIndex</span>(sourceData, <span class="number">0</span>, <span class="literal">nil</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> output = <span class="string">"wallpapers-new/output.heic"</span></span><br><span class="line"><span class="keyword">let</span> quality = <span class="number">0.9</span></span><br><span class="line"><span class="keyword">var</span> imageData: <span class="type">Data?</span> = <span class="literal">nil</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">let</span> dir = <span class="type">FileManager</span>.<span class="keyword">default</span>.urls(<span class="keyword">for</span>: .documentDirectory, <span class="keyword">in</span>: .userDomainMask).first &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> destinationData = <span class="type">NSMutableData</span>()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> destination = <span class="type">CGImageDestinationCreateWithData</span>(destinationData, <span class="type">AVFileType</span>.heic <span class="keyword">as</span> <span class="type">CFString</span>, <span class="number">16</span>, <span class="literal">nil</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> options = [kCGImageDestinationLossyCompressionQuality: quality]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> index <span class="keyword">in</span> <span class="number">1</span>...<span class="number">16</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> fileURL = dir.appendingPathComponent(<span class="string">"wallpapers-new/\(index).png"</span>)</span><br><span class="line">            <span class="keyword">let</span> orginalImage = <span class="type">NSImage</span>(contentsOf: fileURL)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> cgImage = orginalImage?.<span class="type">CGImage</span> &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> index == <span class="number">1</span> &#123;</span><br><span class="line">                    <span class="keyword">let</span> imageMetadata = <span class="type">CGImageMetadataCreateMutable</span>()</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">let</span> imageMetadataTag = <span class="type">CGImageMetadataTagCreate</span>(<span class="string">"http://ns.apple.com/namespace/1.0/"</span> <span class="keyword">as</span> <span class="type">CFString</span>, </span><br><span class="line">                                                                    <span class="string">"apple_desktop"</span> <span class="keyword">as</span> <span class="type">CFString</span>, </span><br><span class="line">                                                                    <span class="string">"solar"</span> <span class="keyword">as</span> <span class="type">CFString</span>, </span><br><span class="line">                                                                    <span class="type">CGImageMetadataType</span>.string, </span><br><span class="line">                                                                    <span class="string">"YnBsaXN0MDDRAQJSc2mvEBADDBAUGBwgJCgsMDQ4PEFF1AQFB"</span> +</span><br><span class="line">                                                                    <span class="string">"gcICQoLUWlRelFhUW8QACNAcO7vOubr3yO/1e+pmkOtXBAB1A"</span> +</span><br><span class="line">                                                                    <span class="string">"QFBgcNDg8LEAEjQFRxqCKOFiAjwCR6waUkDgHUBAUGBxESEws"</span> +</span><br><span class="line">                                                                    <span class="string">"QAiNAVZV4BI4c+CPAEP2uFrMcrdQEBQYHFRYXCxADI0BWtALK"</span> +</span><br><span class="line">                                                                    <span class="string">"mrjwIz/2ObLnx6l21AQFBgcZGhsLEAQjQFfTrJlEjnwjQByrL"</span> +</span><br><span class="line">                                                                    <span class="string">"le1Q0rUBAUGBx0eHwsQBSNAWPrrmI0ISCNAKiwhpSRpc9QEBQ"</span> +</span><br><span class="line">                                                                    <span class="string">"YHISIjCxAGI0BgJff9KDpyI0BENTOsilht1AQFBgclJicLEAc"</span> +</span><br><span class="line">                                                                    <span class="string">"jQGbHdYIVQKojQEq3fAg86lXUBAUGBykqKwsQCCNAbTGmpC2Y"</span> +</span><br><span class="line">                                                                    <span class="string">"RiNAQ2WFOZGjntQEBQYHLS4vCxAJI0BwXfII2B+SI0AmLcjfu"</span> +</span><br><span class="line">                                                                    <span class="string">"C7g1AQFBgcxMjMLEAojQHCnF6YrsxcjQBS9AVBLTq3UBAUGBz"</span> +</span><br><span class="line">                                                                    <span class="string">"U2NwsQCyNAcTcSnimmjCPAGP5E0ASXJtQEBQYHOTo7CxAMI0B"</span> +</span><br><span class="line">                                                                    <span class="string">"xgSADjxK2I8AoalieOTyE1AQFBgc9Pj9AEA0jQHNWsnnMcWIj"</span> +</span><br><span class="line">                                                                    <span class="string">"wEO+oq1pXr8QANQEBQYHQkNEQBAOI0ABZpkFpAcAI8BKYGg/V"</span> +</span><br><span class="line">                                                                    <span class="string">"vMf1AQFBgdGR0hAEA8jQErBKblRzPgjwEMGElBIUO0ACAALAA"</span> +</span><br><span class="line">                                                                    <span class="string">"4AIQAqACwALgAwADIANAA9AEYASABRAFMAXABlAG4AcAB5AII"</span> +</span><br><span class="line">                                                                    <span class="string">"AiwCNAJYAnwCoAKoAswC8AMUAxwDQANkA4gDkAO0A9gD/AQEB"</span> +</span><br><span class="line">                                                                    <span class="string">"CgETARwBHgEnATABOQE7AUQBTQFWAVgBYQFqAXMBdQF+AYcBk"</span> +</span><br><span class="line">                                                                    <span class="string">"AGSAZsBpAGtAa8BuAHBAcMBzAHOAdcB4AHpAesB9AAAAAAAAA"</span> +</span><br><span class="line">                                                                    <span class="string">"IBAAAAAAAAAEkAAAAAAAAAAAAAAAAAAAH9"</span> <span class="keyword">as</span> <span class="type">CFTypeRef</span>)</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">let</span> success = <span class="type">CGImageMetadataSetTagWithPath</span>(imageMetadata, <span class="literal">nil</span>, <span class="string">"xmp:solar"</span> <span class="keyword">as</span> <span class="type">CFString</span>, imageMetadataTag!)</span><br><span class="line">                    <span class="keyword">if</span> !success &#123;</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">"Error!!!"</span>)</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="type">CGImageDestinationAddImageAndMetadata</span>(destination, cgImage, imageMetadata, options <span class="keyword">as</span> <span class="type">CFDictionary</span>)</span><br><span class="line"></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">CGImageDestinationAddImage</span>(destination, cgImage, options <span class="keyword">as</span> <span class="type">CFDictionary</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">CGImageDestinationFinalize</span>(destination)</span><br><span class="line">        imageData = destinationData <span class="keyword">as</span> <span class="type">Data</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> outputURL = dir.appendingPathComponent(output)</span><br><span class="line">        <span class="keyword">try</span>! imageData?.write(to: outputURL)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Now we can set up our new file as a wallpaper. And this is the result:<br>现在我们可以将新文件设置为壁纸。这就是结果：<br><a href="https://www.youtube.com/watch?v=_r0Qxblyz8U" target="_blank" rel="noopener">https://www.youtube.com/watch?v=_r0Qxblyz8U</a></p><p><strong>It works!</strong> We can prepare our custom dynamic wallpaper! And it’s pretty easy.<br><strong>它是有效的！</strong>我们可以准备我们的自定义动态壁纸！这很容易。</p><hr><p>Now the question is: what is in the <code>apple_desktop:solar</code> attribute? It seems that this is something encoded in base64. We can save value of that attribute as a text file (e.g. <code>text.base64</code>) and run following command:<br>现在的问题是：<code>apple_desktop：solar</code>属性是什么？似乎这是base64编码的东西。我们可以将该属性的值保存为文本文件（例如<code>text.base64</code>）并运行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">base64 -D text.base64 -o decoded.txt</span><br></pre></td></tr></table></figure><p>After opening <code>decoded.txt</code> file we can notice that it starts from: <code>bplist00</code>. So it seems that it’s binary <code>plist</code> file. We can run next command:<br>打开<code>decoding.txt</code>文件后，我们可以注意到它从<code>bplist00</code>开始。所以它似乎是二进制<code>plist</code>文件。我们可以运行下一个命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plutil -convert xml1 decoded.txt</span><br></pre></td></tr></table></figure><p>And now in <code>decoded.txt</code> file we have XML with data which was prepared by Apple.<br>现在在<code>decoding.txt</code>文件中，我们拥有由Apple准备的XML数据。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">"1.0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">key</span>&gt;</span>si<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>a<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>-0.34275283875350282<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>i<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>0<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>o<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>1<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>z<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>270.9334057827345<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>a<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>-10.239758644725045<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>i<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>1<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>o<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>1<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>z<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>81.775887144809985<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>a<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>-4.2477344080754564<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>i<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>2<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>o<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>1<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>z<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>86.33545030477751<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>a<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>1.3890866331008431<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>i<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>3<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>o<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>1<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>z<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>90.812670374961954<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>a<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>7.167168970526129<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>i<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>4<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>o<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>1<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>z<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>95.307409588765893<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>a<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>13.08619419164163<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>i<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>5<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>o<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>1<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>z<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>99.920629632689383<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>a<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>40.415639464904281<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>i<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>6<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>o<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>1<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>z<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>129.18652208191958<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>a<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>53.433472661727741<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>i<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>7<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>o<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>1<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>z<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>182.23309425497911<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>a<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>38.793128200638634<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>i<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>8<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>o<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>1<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>z<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>233.55159195809591<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>a<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>11.089423171265878<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>i<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>9<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>o<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>1<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>z<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>261.87159046576664<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>a<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>5.1845753236736245<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>i<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>10<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>o<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>1<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>z<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>266.44327370710511<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>a<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>-6.2483093741227886<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>i<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>11<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>o<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>1<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>z<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>275.44204536695247<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>a<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>-12.20770735214888<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>i<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>12<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>o<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>1<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>z<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>280.07031589401174<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>a<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>-39.48933951993012<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>i<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>13<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>o<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>0<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>z<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>309.41857318745144<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>a<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>-52.753181378799347<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>i<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>14<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>o<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>0<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>z<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>2.1750965538675473<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>a<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>-38.04743388682423<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>i<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>15<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>o<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>0<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>z<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>53.509085812513092<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plist</span>&gt;</span></span><br></pre></td></tr></table></figure><p>We have 16 <code>dict</code> elements (one for each image) with four keys:<br>我们有16个<code>dict</code>元素（每个图像一个），有四个键：</p><ul><li>a - (probably) some time marker<br>a - （可能）一些时间标记</li><li>i - image index<br>i - 图像索引</li><li>o - ? (in current Mojave wallpaper it is always equal 0)<br>o - ？（在当前的Mojave壁纸中它始终等于0）</li><li>z - some time marker<br>z - 一些时间标记</li></ul><p>Unfortunately I don’t know yet how to convert above float numbers to time markers. If you have some ideas please let me know. Then I will have all mandatory pieces to build macOS application which based on chosen files will generate dynamic wallpaper.<br>不幸的是我还不知道如何将浮点数转换为时间标记。如果您有任何想法，请告诉我。然后我将有所有强制性的部分来构建基于所选文件的macOS应用程序将生成动态壁纸。</p><p>For now I can build only wallpaper which will behave exactly the same way like Apple’s wallpaper.<br>现在我只能制作壁纸，其行为与Apple的壁纸完全相同。</p><hr><p><img src="/images/2019-02/1_YU1DYB5fNiLZnqjKQCxI-Q.png" alt></p><p>In my previous article I described how dynamic wallpapers works. I didn’t know then what some of the properties in metadata means. I asked if somebody else knows what that properties means, and I’ve got a response really quickly. On Twitter @zwaldowski wrote to me explanation what all properties stands for.<br>在我的上一篇文章中，我描述了动态壁纸的工作原理。我不知道元数据中的某些属性意味着什么。我问其他人是否知道这些属性意味着什么，而且我很快得到了答复。在Twitter上@zwaldowski给我写了解释所有属性的含义。</p><p><img src="/images/2019-02/1_Q4Uu6sT5PufFzDOxgAI9XQ.png" alt></p><p>Thus, as I wrote previously, in HEIC file we have metadata which looks like on below snippet.<br>因此，正如我之前所写，在HEIC文件中，我们有一些元数据，如下面的代码片段所示。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">"1.0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">key</span>&gt;</span>si<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>a<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>-0.34275283875350282<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>i<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>0<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>o<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">integer</span>&gt;</span>1<span class="tag">&lt;/<span class="name">integer</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">key</span>&gt;</span>z<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">real</span>&gt;</span>270.9334057827345<span class="tag">&lt;/<span class="name">real</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br></pre></td></tr></table></figure><p>We have 16 <code>dict</code> elements (one for each image) with four keys:<br>我们有16个<code>dict</code>元素（每个图像一个），有四个键：</p><ul><li>a - altitude<br>a - 海拔高度</li><li>i - image index<br>i - 图像索引</li><li>o - indicates in which desktop theme image should be displayed. 0 - displays in both mode (light/dark). 1 - displays only in light mode.<br>o - 表示应显示哪个桌面主题图像。0 - 以两种模式（亮/暗）显示。1 - 仅在灯光模式下显示。</li><li>z - azimuth<br>z - 方位角</li></ul><p>Thanks to <a href="https://en.wikipedia.org/wiki/Horizontal_coordinate_system" target="_blank" rel="noopener">altitude and azimuth</a> w exactly know where the Sun was when image was taken.<br>感谢<a href="https://en.wikipedia.org/wiki/Horizo​​ntal_coordinate_system" target="_blank" rel="noopener">海拔高度和方位角</a>，可以确切知道拍摄图像时太阳的位置。</p><p><img src="/images/2019-02/1_yhrXm56MaqMLfRLYTWaTtw.png" alt></p><p>This idea is brilliant, because thanks to this information macOS can change images differently during Summer and during Winter. System knows where the Sun is and it will choose image which was taken in similar conditions. <strong>Brilliant</strong>.<br>这个想法很棒，因为由于这些信息，macOS可以在夏季和冬季期间以不同方式更改图像。系统知道太阳在哪里，它将选择在类似条件下拍摄的图像。<strong>太机智了</strong>。</p><hr><p>Based on that knowledge I prepared new dynamic wallpaper. Here is the video how it looks like:<br>基于这些知识，我准备了新的动态壁纸。以下是视频：<br><a href="https://www.youtube.com/watch?v=TVqfPzdsbzY" target="_blank" rel="noopener">https://www.youtube.com/watch?v=TVqfPzdsbzY</a></p><p>You can download that wallpaper from my Dropbox:<br>你可以从我的Dropbox下载这个壁纸：<br><a href="https://www.dropbox.com/s/kd2g59qswchsd0v/Earth%20View.heic?dl=0" target="_blank" rel="noopener">https://www.dropbox.com/s/kd2g59qswchsd0v/Earth%20View.heic?dl=0</a></p><p>Thank you for your help and feedback!<br>感谢您的帮助和反馈！</p><hr><p><strong>Update:</strong> I created simple console application for macOS which can help you with creating custom dynamic wallpapers: <a href="https://github.com/mczachurski/wallpapper" target="_blank" rel="noopener">https://github.com/mczachurski/wallpapper</a><br><strong>更新：</strong>我为macOS创建了简单的控制台应用程序，它可以帮助您创建自定义动态壁纸：<a href="https://github.com/mczachurski/wallpapper" target="_blank" rel="noopener">https://github.com/mczachurski/wallpapper</a></p><p>本文翻译自：<br><a href="https://itnext.io/macos-mojave-dynamic-wallpaper-fd26b0698223" target="_blank" rel="noopener">https://itnext.io/macos-mojave-dynamic-wallpaper-fd26b0698223</a><br><a href="https://itnext.io/macos-mojave-dynamic-wallpapers-ii-f8b1e55c82f" target="_blank" rel="noopener">https://itnext.io/macos-mojave-dynamic-wallpapers-ii-f8b1e55c82f</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/2019-02/1_qjVGv0IMNTeKFIcks41ohA.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;How Apple built dynamic wallpapers? And is it possible to create your own dynamic wallpaper for macOS? I spent some time because I would like to answer to the both above questions.&lt;br&gt;Apple如何构建动态壁纸？是否可以为macOS创建自己的动态壁纸？我花了一些时间，因为我想回答上述两个问题。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;In Mojave we can choose new type of wallpaper: dynamic.&lt;br&gt;在Mojave，我们可以选择新型壁纸：动态。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2019-02/1_4a3SZs7wS3g3AtO8E2RNvw.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;Depending on day time, system displays different wallpaper. At night it is picture of Mojave at night, during day it’s picture of Mojave taken during day. So at night we have dark wallpaper at day we have light wallpaper.&lt;br&gt;根据时间，系统会显示不同的壁纸。晚上显示Mojave晚上的照片，白天则是在白天拍摄的Mojave的照片。所以晚上我们有暗色的壁纸，白天则是明亮的壁纸。&lt;/p&gt;
&lt;p&gt;All built in wallpapers in macOS we can find in folder: &lt;code&gt;/Library/Desktop Pictures&lt;/code&gt;. Also here we can find dynamic wallpaper.&lt;br&gt;我们可以在文件夹&lt;code&gt;/Library/Desktop Pictures&lt;/code&gt;中找到所有macOS内置的壁纸。在这里我们也可以找到动态壁纸。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2019-02/1_lRpwIxzeyEoXMbz97ZfG5Q.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;Dynamic wallpaper is saved as a HEIC file (&lt;code&gt;Mojave (Dynamic).heic&lt;/code&gt;). More information about this type of file you can find on &lt;a href=&quot;https://en.wikipedia.org/wiki/High_Efficiency_Image_File_Format&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Wikipedia&lt;/a&gt;. Generally this is type of file which Apple uses in iOS devices. Photos in iOS (also live photos) are stored as a HEIC file. That kind of file can contains multiple images/thumbnails and metadata in a single file.&lt;br&gt;动态壁纸保存为HEIC文件（&lt;code&gt;Mojave (Dynamic).heic&lt;/code&gt;）。有关此类文件的更多信息，请访问&lt;a href=&quot;https://en.wikipedia.org/wiki/High_Efficiency_Image_File_Format&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Wikipedia&lt;/a&gt;。通常，这是Apple在iOS设备中使用的文件类型。iOS中的照片（也包括实时照片）会存储为HEIC文件。这种文件可以在单个文件中包含多个图像/缩略图和元数据。&lt;/p&gt;
&lt;p&gt;There is really good online tool where we can check content of Mojave wallpaper file: &lt;a href=&quot;https://strukturag.github.io/libheif/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://strukturag.github.io/libheif/&lt;/a&gt;. You can upload &lt;code&gt;Mojave (Dynamic).heic&lt;/code&gt; file and you will see that in this single file there is 16 separate pictures taken in different day phase.&lt;br&gt;有一个很好的在线工具，让我们可以检查Mojave壁纸文件的内容：&lt;a href=&quot;https://strukturag.github.io/libheif/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://strukturag.github.io/libheif/&lt;/a&gt; 。你可以上传&lt;code&gt;Mojave (Dynamic).heic&lt;/code&gt;文件，然后你会发现在这个单独的文件中有16张不同时间拍摄的单独照片。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2019-02/1_ESDAv949YKQIEocL-qDcGA.png&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;So maybe it’s enough to create new HEIC file with 16 separate images and macOS will show them properly. Let’s try it!&lt;br&gt;所以也许它足以创建具有16个单独图像的新HEIC文件，macOS将正确显示它们。我们来试试吧！&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="https://zhangshuqiao.org/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Mac" scheme="https://zhangshuqiao.org/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>十五的月亮十五圆</title>
    <link href="https://zhangshuqiao.org/2019-02/%E5%8D%81%E4%BA%94%E7%9A%84%E6%9C%88%E4%BA%AE%E5%8D%81%E4%BA%94%E5%9C%86/"/>
    <id>https://zhangshuqiao.org/2019-02/十五的月亮十五圆/</id>
    <published>2019-02-20T12:53:14.000Z</published>
    <updated>2019-07-23T08:40:50.168Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/2019-02/IMG_4634.jpg" alt></p><blockquote><p>摄于己亥年正月十六</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/2019-02/IMG_4634.jpg&quot; alt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;摄于己亥年正月十六&lt;/p&gt;
&lt;/blockquote&gt;

      
    
    </summary>
    
      <category term="其他" scheme="https://zhangshuqiao.org/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="摄影" scheme="https://zhangshuqiao.org/tags/%E6%91%84%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>用Telnet观看Bad Apple!!</title>
    <link href="https://zhangshuqiao.org/2019-02/%E7%94%A8Telnet%E8%A7%82%E7%9C%8BBad%20Apple!!/"/>
    <id>https://zhangshuqiao.org/2019-02/用Telnet观看Bad Apple!!/</id>
    <published>2019-02-14T06:12:27.000Z</published>
    <updated>2019-02-25T02:25:42.638Z</updated>
    
    <content type="html"><![CDATA[<p>在前面的文章<a href="/2018-11/用Telnet观看Nyancat动画/">用Telnet观看Nyancat动画</a>中，博主曾表示正在尝试搭建一个可以播放Bad Apple!!的Telnet服务器。以Nyancat为基础，改写的过程并不复杂（除了硬编码了一个头文件，存储了所有动画帧）；只是因为懒，所以现在才终于完工了。你可以通过执行<code>telnet zsq.im 8082</code>查看效果。</p><p><img src="/images/2019-02/IMG_1061.jpg" alt></p><p>下面附上安装方法。</p><h2 id="下载编译"><a href="#下载编译" class="headerlink" title="下载编译"></a>下载编译</h2><p>在命令行执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/stevenjoezhang/badapple.git</span><br><span class="line"><span class="built_in">cd</span> badapple</span><br><span class="line">make</span><br><span class="line">mv src/badapple /usr/bin <span class="comment">#or make install</span></span><br></pre></td></tr></table></figure><p>这时，通过<code>badapple</code>或<code>badapple -t</code>命令就可以查看效果。接下来把Telnet配置好就行了。</p><h2 id="配置Telnet"><a href="#配置Telnet" class="headerlink" title="配置Telnet"></a>配置Telnet</h2><p>这与之前的那篇文章几乎完全相同，仍然需要使用<code>xinetd</code>。只要把<code>server</code>中的<code>/usr/bin/nyancat</code>替换为<code>/usr/bin/badapple</code>即可。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在前面的文章&lt;a href=&quot;/2018-11/用Telnet观看Nyancat动画/&quot;&gt;用Telnet观看Nyancat动画&lt;/a&gt;中，博主曾表示正在尝试搭建一个可以播放Bad Apple!!的Telnet服务器。以Nyancat为基础，改写的过程并不复杂（除了硬编码了一
      
    
    </summary>
    
      <category term="技术" scheme="https://zhangshuqiao.org/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Linux" scheme="https://zhangshuqiao.org/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>米米影视新片头震撼发布</title>
    <link href="https://zhangshuqiao.org/2019-02/%E7%B1%B3%E7%B1%B3%E5%BD%B1%E8%A7%86%E6%96%B0%E7%89%87%E5%A4%B4%E9%9C%87%E6%92%BC%E5%8F%91%E5%B8%83/"/>
    <id>https://zhangshuqiao.org/2019-02/米米影视新片头震撼发布/</id>
    <published>2019-02-04T16:00:00.000Z</published>
    <updated>2019-03-04T03:14:43.895Z</updated>
    
    <content type="html"><![CDATA[<p>新年快乐！值此新春佳节之际，米米影视的新版片头正式推出了。借助于Final Cut Pro，新片头成功地融合了理想与现实、传统与现代，让你体会到无与伦比的、直击心灵的震撼。</p><video src="/files/intro.mp4" preload="metadata" controls playsinline poster>Sorry, your browser does not support the video tag.</video>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;新年快乐！值此新春佳节之际，米米影视的新版片头正式推出了。借助于Final Cut Pro，新片头成功地融合了理想与现实、传统与现代，让你体会到无与伦比的、直击心灵的震撼。&lt;/p&gt;
&lt;video src=&quot;/files/intro.mp4&quot; preload=&quot;metadat
      
    
    </summary>
    
      <category term="其他" scheme="https://zhangshuqiao.org/categories/%E5%85%B6%E4%BB%96/"/>
    
    
  </entry>
  
  <entry>
    <title>鱼眼镜头与小行星特效</title>
    <link href="https://zhangshuqiao.org/2019-01/%E9%B1%BC%E7%9C%BC%E9%95%9C%E5%A4%B4%E4%B8%8E%E5%B0%8F%E8%A1%8C%E6%98%9F%E7%89%B9%E6%95%88/"/>
    <id>https://zhangshuqiao.org/2019-01/鱼眼镜头与小行星特效/</id>
    <published>2019-01-28T06:18:34.000Z</published>
    <updated>2019-03-13T16:01:04.624Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/2019-01/EclipsePrince_Vetter_1500.jpg" alt></p><p>In this beautifully rendered “little planet” image, photographer <a href="https://www.facebook.com/stephane.vetter.nuitsacrees" target="_blank" rel="noopener">Stephane Vetter</a> fuses both night and day captured from a single location at Magone Lake in Oregon during the August 21st solar eclipse. The shot required tons of careful planning, and here’s an explanation of how he did it via <a href="https://apod.nasa.gov/apod/astropix.html" target="_blank" rel="noopener">Astronomy Picture of the Day</a>:<br>在8月21日的日食期间，摄影师<a href="https://www.facebook.com/stephane.vetter.nuitsacrees" target="_blank" rel="noopener">Stephane Vetter</a>于俄勒冈州马格纳湖的同一地点，融合了白天和黑夜的景象，完成了这个精美渲染的『小行星』图像。拍摄需要大量的精心策划，这里是他通过<a href="https://apod.nasa.gov/apod/astropix.html" target="_blank" rel="noopener">Astronomy Picture of the Day</a>解释他是如何做到的：</p><blockquote><p>This featured little-planet, all-sky, double time-lapse, digitally-fused composite captured celestial action during both night and day from a single location. In this 360×180 panorama, north and south are at the image bottom and top, while east and west are at the left and right edges, respectively. During four hours the night before the eclipse, star trails were captured circling the north celestial pole (bottom) as the Earth spun. During the day of the total eclipse, the Sun was captured every fifteen minutes from sunrise to sunset (top), sometimes in partial eclipse. All of these images were then digitally merged onto a single image taken exactly during the total solar eclipse. Then, the Sun’s bright corona could be seen flaring around the dark new Moon (upper left), while Venus simultaneously became easily visible (top). The tree in the middle, below the camera, is a Douglas fir.<br>这是一个小行星、全天空、双时延、数字融合的复合材料，在同一个地方，从夜间到白天持续捕获天体运动。在这个360×180全景图中，北部和南部分别位于图像的底部和顶部，而东部和西部分别位于左右边缘。在日食前一个晚上的四个小时内，当地球旋转时，在北天极（底部）环绕着星轨。在日全食期间，从日出到日落（上图）每隔十五分钟拍摄一次太阳，有时是偏食。然后将所有这些图像数字合并到在日全食期间拍摄的单个图像上。然后，可以看到太阳的明亮日冕在黑暗的新月（左上）周围闪烁，而金星同时变得容易看见（顶部）。中间的树，在相机下面，是道格拉斯冷杉。</p></blockquote><p>So, just your typical full eclipse, little-planet, all-sky, double time-lapse photo by a fir tree, really. You can see more of Vetter’s photography on his <a href="http://nuitsacrees.fr" target="_blank" rel="noopener">website</a>.<br>所以，这就是典型的日全食、小行星、全天空、双时延照片，借助一棵冷杉拍摄，仅此而已。你可以在Vetter的<a href="http://nuitsacrees.fr" target="_blank" rel="noopener">网站</a>上看到更多他的摄影作品。</p><hr><p>本文翻译自：<a href="https://www.thisiscolossal.com/2017/08/a-panoramic-eclipse-composite-with-star-trails-captured-by-stephane-vetter/" target="_blank" rel="noopener">A Panoramic Full Eclipse Composite with Star Trails Captured by Stephane Vetter</a></p><p>这样的『小行星』图像虽然具有鱼眼镜头的扭曲效果，但是并不一定需要使用鱼眼镜头拍摄。通过强大的图像后期处理技术，只要拍摄多个角度的照片，也可以合成出这样的效果。</p><p>拓展阅读：<a href="https://www.zhihu.com/question/27440901" target="_blank" rel="noopener">360度球状全景的照片是怎样拍出来的？ - 知乎</a></p><p>更多小行星特效：<br><a href="http://720.jum8.com/quanjing/xx/" target="_blank" rel="noopener">小行星转场+车内全景</a><br><a href="https://720yun.com/t/eeb24mf59tn?scene_id=487241" target="_blank" rel="noopener">天使眼中的天堂——华中师大一附中</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/2019-01/EclipsePrince_Vetter_1500.jpg&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;In this beautifully rendered “little planet” image, photographer &lt;a 
      
    
    </summary>
    
      <category term="技术" scheme="https://zhangshuqiao.org/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="摄影" scheme="https://zhangshuqiao.org/tags/%E6%91%84%E5%BD%B1/"/>
    
  </entry>
  
</feed>
